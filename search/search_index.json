{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"index"},{"location":"deployment/","text":"Option1: Deploy Nocalhost Server with Helm(Recommended) Option2: Deploy Nocalhost Server with nhctl init","title":"Deployment"},{"location":"deployment/#option1-deploy-nocalhost-server-with-helmrecommended","text":"","title":"Option1: Deploy Nocalhost Server with Helm(Recommended)"},{"location":"deployment/#option2-deploy-nocalhost-server-with-nhctl-init","text":"","title":"Option2: Deploy Nocalhost Server with nhctl init"},{"location":"getting-started/","text":"Before start Prerequisites: A Kubernetes(1.16+) Cluster(prefer to be provided by the Cloud platform or Minikube) Configure kubectl for you to be able to access above cluster as admin RBAC must be enabled in above cluster Install Helm3 Install Visual Studio Code(1.31+) Install Git Step 1: Install nhctl and VSCode extension Reference link: https://nocalhost.dev/installation/ Step 2: Initialize the cluster and setup Nocalhost Server Option 1: Kubernetes provided by the Cloud platform, such as Tencent TKE Initialize at terminal: nhctl init -n nocalhost Option 2: startup minikube derived by docker: After minikube(docker driver) ( minikube start --driver=docker ) is started, execute the initialization in terminal: nhctl init -n nocalhost -t nodeport -p 80 Waiting for the initialization process: After the initialization: [MINIKUBE WARN]: Please do not close above terminal for the port to be able to keep forwarding nhctl init command flags --namespace: to specify which namespace to install.(create automately) --port: to specify which port Nocalhost Web to listen.(Default 80) --set: to overide values for Nocalhost's Helm Chart --type: to specify service type of Nocalhost Web(nodeport or loadbalaner) --force: to specify if delete old data before initialization Step 3: Configure and login Nocalhost Server in VSCode Open the VSCode extension page, click on the \u201cConfig Server URL\u201d button at left: Input the access address from Step Two, press Enter to save Input the username and password respectively, press Enter to save: Username: foo@nocalhost.dev assword: 123456 After login, you can find: Step 4: Install demo application: bookinfo Click the installation icon at the left to install application bookinfo After it, Nocalhost starts to execute the installation. You can click on the refresh icon to check the status of installation and startup process After all microservices startup, you will find Now, you can visit the appliction website: http://127.0.0.1:39080/productpage Step 5: Start DevMode Switch the service to the DevMode by clicking on the green hammer icon. Select \u201cClone from Git repo\u201d and specify a local address for Nocalhost to clone the source code. After the source code is checked out, Nocalhost will open a new VSCode window, and continue to switch to the DevMode. When it is completed (it will take long time when it is the first time to run it), you will find: Under the DevMode, the main process will not startup by default for the DevContainer, and therefore it will not respond the request from the website. While refresh the webpage, the webpage will be on error and will be recovered, until you start up again. You can execute sh run.sh to start your process. Step 6: Change the code and check the result You can try to change a piece of code, refresh and check the result. For example: add \"Hello Nocalhost!\" at line 355 in the file productpage.py. Do not forget to save the file. \ud83d\ude0e Refresh the webpage, here is the outcome: http://127.0.0.1:39080/productpage \ud83d\ude04 Congratulations! You have had a great experience about the Cloud Native development through above Nocalhost simple tutorial. You can start to try to configure and use the Nocalhost in the real project now. Any feedback is welcomed. Github Issues: https://github.com/nocalhost/nocalhost","title":"Getting started"},{"location":"getting-started/#before-start","text":"Prerequisites: A Kubernetes(1.16+) Cluster(prefer to be provided by the Cloud platform or Minikube) Configure kubectl for you to be able to access above cluster as admin RBAC must be enabled in above cluster Install Helm3 Install Visual Studio Code(1.31+) Install Git","title":"Before start"},{"location":"getting-started/#step-1-install-nhctl-and-vscode-extension","text":"Reference link: https://nocalhost.dev/installation/","title":"Step 1: Install nhctl and VSCode extension"},{"location":"getting-started/#step-2-initialize-the-cluster-and-setup-nocalhost-server","text":"Option 1: Kubernetes provided by the Cloud platform, such as Tencent TKE Initialize at terminal: nhctl init -n nocalhost Option 2: startup minikube derived by docker: After minikube(docker driver) ( minikube start --driver=docker ) is started, execute the initialization in terminal: nhctl init -n nocalhost -t nodeport -p 80 Waiting for the initialization process: After the initialization: [MINIKUBE WARN]: Please do not close above terminal for the port to be able to keep forwarding nhctl init command flags --namespace: to specify which namespace to install.(create automately) --port: to specify which port Nocalhost Web to listen.(Default 80) --set: to overide values for Nocalhost's Helm Chart --type: to specify service type of Nocalhost Web(nodeport or loadbalaner) --force: to specify if delete old data before initialization","title":"Step 2: Initialize the cluster and setup Nocalhost Server"},{"location":"getting-started/#step-3-configure-and-login-nocalhost-server-in-vscode","text":"Open the VSCode extension page, click on the \u201cConfig Server URL\u201d button at left: Input the access address from Step Two, press Enter to save Input the username and password respectively, press Enter to save: Username: foo@nocalhost.dev assword: 123456 After login, you can find:","title":"Step 3: Configure and login Nocalhost Server in VSCode"},{"location":"getting-started/#step-4-install-demo-application-bookinfo","text":"Click the installation icon at the left to install application bookinfo After it, Nocalhost starts to execute the installation. You can click on the refresh icon to check the status of installation and startup process After all microservices startup, you will find Now, you can visit the appliction website: http://127.0.0.1:39080/productpage","title":"Step 4: Install demo application: bookinfo"},{"location":"getting-started/#step-5-start-devmode","text":"Switch the service to the DevMode by clicking on the green hammer icon. Select \u201cClone from Git repo\u201d and specify a local address for Nocalhost to clone the source code. After the source code is checked out, Nocalhost will open a new VSCode window, and continue to switch to the DevMode. When it is completed (it will take long time when it is the first time to run it), you will find: Under the DevMode, the main process will not startup by default for the DevContainer, and therefore it will not respond the request from the website. While refresh the webpage, the webpage will be on error and will be recovered, until you start up again. You can execute sh run.sh to start your process.","title":"Step 5: Start DevMode"},{"location":"getting-started/#step-6-change-the-code-and-check-the-result","text":"You can try to change a piece of code, refresh and check the result. For example: add \"Hello Nocalhost!\" at line 355 in the file productpage.py. Do not forget to save the file. \ud83d\ude0e Refresh the webpage, here is the outcome: http://127.0.0.1:39080/productpage \ud83d\ude04","title":"Step 6: Change the code and check the result"},{"location":"getting-started/#congratulations","text":"You have had a great experience about the Cloud Native development through above Nocalhost simple tutorial. You can start to try to configure and use the Nocalhost in the real project now. Any feedback is welcomed. Github Issues: https://github.com/nocalhost/nocalhost","title":"Congratulations!"},{"location":"installation/","text":"Prerequisites To use nocalhost, please make sure that git , kubectl and helm are installed. nhctl The Nocalhost command-line tool: nhctl, allows you to run commands against Nocalhost. You can use nhctl to install application, switch services to DevMode, sync codes, forward ports. See nhctl for full list of sub commands. Install nhctl on Linux Install nhctl binary with curl on Linux Download the latest release with command: curl -sL https://git.io/JLsgQ | sh Make the nhctl binary executable. chmod +x ./nhctl Move nhctl binary in to your PATH. sudo mv ./nhctl /usr/local/bin/nhctl Test you installed. nhctl version Install nhctl using package management Homebrew If you are on Linux and using Homebrew package manager, nhctl is available for installation . brew install nocalhost/repo/nocalhost nhctl version Install nhctl on macOS Install nhctl binary with curl on macOS Download the latest release with command: curl -sL https://git.io/JLsgQ | sh Make the nhctl binary executable. chmod +x ./nhctl Move nhctl binary in to your PATH. sudo mv ./nhctl /usr/local/bin/nhctl Test you installed. nhctl version Install nhctl with Homebrew on macOS Run the installation command brew install nocalhost/repo/nocalhost Test you installed nhctl version Install nhctl on Windows Install nhctl binary on Windows Download the latest release from this link . Or if you have curl installed, use this command: curl -L \"https://github.com/nocalhost/nocalhost/releases/download/v0.0.7/nhctl-windows-amd64.exe\" -o nhctl.exe Add nhctl binary in to your PATH. Test you installed. nhctl version You will see: nhctl: Nocalhost CLI Version: v0.0.5 Git commit: 605cbf149a4b4d8983111b8984111365a5f54192 Built: Sat Dec 12 13:29:03 2020 OS/Arch: linux/amd64 Go version: go1.14.4 Install nhctl using package management baulk If you are on Windows and using baulk package manager, nhctl is available for installation. Open CMD with Administrators. baulk install nocalhost baulk-exec cmd nhctl version Install Nocalhost VScode Plugin The Nocalhost VScode Plugin allows you to use Nocalhost on VSCode Editor. You can install application, open DevSpace, start DevMode in VSCode conveniently. Install Nocalhost VScode Plugin on VScode Marketplace Follow this link: https://marketplace.visualstudio.com/items?itemName=nocalhost.nocalhost Or Install Nocalhost VScode Plugin on VScode Editor Open the VScode Editor, and click left bar \"Extensions\" icon. Type \"nocalhost\" in the search input box. Select the \"nocalhost-vscode-plugin\", and the click install button to install.","title":"Installation"},{"location":"installation/#nhctl","text":"The Nocalhost command-line tool: nhctl, allows you to run commands against Nocalhost. You can use nhctl to install application, switch services to DevMode, sync codes, forward ports. See nhctl for full list of sub commands.","title":"nhctl"},{"location":"installation/#install-nhctl-on-linux","text":"","title":"Install nhctl on Linux"},{"location":"installation/#install-nhctl-binary-with-curl-on-linux","text":"Download the latest release with command: curl -sL https://git.io/JLsgQ | sh Make the nhctl binary executable. chmod +x ./nhctl Move nhctl binary in to your PATH. sudo mv ./nhctl /usr/local/bin/nhctl Test you installed. nhctl version","title":"Install nhctl binary with curl on Linux"},{"location":"installation/#install-nhctl-using-package-management","text":"Homebrew If you are on Linux and using Homebrew package manager, nhctl is available for installation . brew install nocalhost/repo/nocalhost nhctl version","title":"Install nhctl using package management"},{"location":"installation/#install-nhctl-on-macos","text":"","title":"Install nhctl on macOS"},{"location":"installation/#install-nhctl-binary-with-curl-on-macos","text":"Download the latest release with command: curl -sL https://git.io/JLsgQ | sh Make the nhctl binary executable. chmod +x ./nhctl Move nhctl binary in to your PATH. sudo mv ./nhctl /usr/local/bin/nhctl Test you installed. nhctl version","title":"Install nhctl binary with curl on macOS"},{"location":"installation/#install-nhctl-with-homebrew-on-macos","text":"Run the installation command brew install nocalhost/repo/nocalhost Test you installed nhctl version","title":"Install nhctl with Homebrew on macOS"},{"location":"installation/#install-nhctl-on-windows","text":"","title":"Install nhctl on Windows"},{"location":"installation/#install-nhctl-binary-on-windows","text":"Download the latest release from this link . Or if you have curl installed, use this command: curl -L \"https://github.com/nocalhost/nocalhost/releases/download/v0.0.7/nhctl-windows-amd64.exe\" -o nhctl.exe Add nhctl binary in to your PATH. Test you installed. nhctl version You will see: nhctl: Nocalhost CLI Version: v0.0.5 Git commit: 605cbf149a4b4d8983111b8984111365a5f54192 Built: Sat Dec 12 13:29:03 2020 OS/Arch: linux/amd64 Go version: go1.14.4","title":"Install nhctl binary on Windows"},{"location":"installation/#install-nhctl-using-package-management_1","text":"baulk If you are on Windows and using baulk package manager, nhctl is available for installation. Open CMD with Administrators. baulk install nocalhost baulk-exec cmd nhctl version","title":"Install nhctl using package management"},{"location":"installation/#install-nocalhost-vscode-plugin","text":"The Nocalhost VScode Plugin allows you to use Nocalhost on VSCode Editor. You can install application, open DevSpace, start DevMode in VSCode conveniently.","title":"Install Nocalhost VScode Plugin"},{"location":"installation/#install-nocalhost-vscode-plugin-on-vscode-marketplace","text":"Follow this link: https://marketplace.visualstudio.com/items?itemName=nocalhost.nocalhost","title":"Install Nocalhost VScode Plugin on VScode Marketplace"},{"location":"installation/#or-install-nocalhost-vscode-plugin-on-vscode-editor","text":"Open the VScode Editor, and click left bar \"Extensions\" icon. Type \"nocalhost\" in the search input box. Select the \"nocalhost-vscode-plugin\", and the click install button to install.","title":"Or Install Nocalhost VScode Plugin on VScode Editor"},{"location":"Concepts/application/","text":"","title":"Application"},{"location":"Concepts/cluster/","text":"","title":"Cluster"},{"location":"Concepts/devcontainer/","text":"DevContainer DevContainer is the container carrier for DevMode development and debugging. Its life cycle runs through the entire development and debugging process. It is created when DevMode starts and ends when DeVMode ends. During the life cycle, local source code changes will be automatically synchronized to DevContainer, and can be directly compiled and deployed in the container. note: The docker used by DevContainer is defined in the application directory .nocalhost/config","title":"DevContainer"},{"location":"Concepts/devcontainer/#devcontainer","text":"DevContainer is the container carrier for DevMode development and debugging. Its life cycle runs through the entire development and debugging process. It is created when DevMode starts and ends when DeVMode ends. During the life cycle, local source code changes will be automatically synchronized to DevContainer, and can be directly compiled and deployed in the container. note: The docker used by DevContainer is defined in the application directory .nocalhost/config","title":"DevContainer"},{"location":"Concepts/devmode/","text":"DevMode DevMode describes the entire development process (start development, test verification and final development). When DevMode starts, development begins, and when DevMode ends, development ends. DevMode start When DevMode is started for a microservice in the application, Nocalhost will perform the following operations: Replace the container of the microservice with the DevContainer specified by the configuration. Create a background process to detect changes in the source code and automatically synchronize the source code with DevContainer. Forward the port of DevContainer to the local for subsequent debugging. DevMode end DevSpace resources will be restored to the state when DevMode was turned on, such as: DevContainer will restore to the container that was stopped when DevMode was turned on. Stop the background process of file synchronization. Release the local port forwarded from DevContainer.","title":"DevMode"},{"location":"Concepts/devmode/#devmode","text":"DevMode describes the entire development process (start development, test verification and final development). When DevMode starts, development begins, and when DevMode ends, development ends.","title":"DevMode"},{"location":"Concepts/devmode/#devmode-start","text":"When DevMode is started for a microservice in the application, Nocalhost will perform the following operations: Replace the container of the microservice with the DevContainer specified by the configuration. Create a background process to detect changes in the source code and automatically synchronize the source code with DevContainer. Forward the port of DevContainer to the local for subsequent debugging.","title":"DevMode start"},{"location":"Concepts/devmode/#devmode-end","text":"DevSpace resources will be restored to the state when DevMode was turned on, such as: DevContainer will restore to the container that was stopped when DevMode was turned on. Stop the background process of file synchronization. Release the local port forwarded from DevContainer.","title":"DevMode end"},{"location":"Concepts/devspace/","text":"","title":"DevSpace"},{"location":"Concepts/service/","text":"","title":"Service"},{"location":"Concepts/user/","text":"","title":"User"},{"location":"FAQ/default-account/","text":"Why there isn't a register link? How to login Nocalhost Web? Nocalhost does not support self-registration. By now, Nocalhost Server(api and web) is designed using by administrtor. Administrtors can sign in with the default administrator account email and password. The default account's Email is: admin@admin.com The default account's password is: 123456 After signed in, they can change admin user's Email and password. They can also manage users, clusters and applications.","title":"Default admin account"},{"location":"FAQ/default-account/#why-there-isnt-a-register-link-how-to-login-nocalhost-web","text":"Nocalhost does not support self-registration. By now, Nocalhost Server(api and web) is designed using by administrtor. Administrtors can sign in with the default administrator account email and password. The default account's Email is: admin@admin.com The default account's password is: 123456 After signed in, they can change admin user's Email and password. They can also manage users, clusters and applications.","title":"Why there isn't a register link? How to login Nocalhost Web?"},{"location":"FAQ/dep-label-selector/","text":"How does Nocalhost resolve Pods/Jobs starting orders of services in details? Dependencies' declarations in Nocalhost config.yaml decide the startup sequence of services in application. Nocalhost arranges Pods/Jobs containing labels defined in dependPodsLabelSelector and dependJobsLabelSelector options to start ahead of service itself. That means service would not start unitl only all dependent Pods being ready and all dependent Jobs done. For example, we configure service foo as below: ... services: - name: foo dependPodsLabelSelector: - \"app=mysql,region=shenzhen\" - \"app=redis\" ... While Nocalhost is going to start Pods within service foo , it will select Pods with labels of app=mysql and region=shenzhen or app=redis . Nocalhost starts the selected pods first. Once all selected Pods being ready, Nocalhost starts service foo .","title":"Dep label selector"},{"location":"FAQ/dep-label-selector/#how-does-nocalhost-resolve-podsjobs-starting-orders-of-services-in-details","text":"Dependencies' declarations in Nocalhost config.yaml decide the startup sequence of services in application. Nocalhost arranges Pods/Jobs containing labels defined in dependPodsLabelSelector and dependJobsLabelSelector options to start ahead of service itself. That means service would not start unitl only all dependent Pods being ready and all dependent Jobs done. For example, we configure service foo as below: ... services: - name: foo dependPodsLabelSelector: - \"app=mysql,region=shenzhen\" - \"app=redis\" ... While Nocalhost is going to start Pods within service foo , it will select Pods with labels of app=mysql and region=shenzhen or app=redis . Nocalhost starts the selected pods first. Once all selected Pods being ready, Nocalhost starts service foo .","title":"How does Nocalhost resolve Pods/Jobs starting orders of services in details?"},{"location":"FAQ/deployment-with-hpa/","text":"Does Nocalhost have support to develop components(services) that controls by Deployments with HPA (Horizontal Pod Autoscaler)? No. It is suggested that remove HPA controller from Deployments before developing components(services) with Nocalhost.","title":"Deployment with HPA"},{"location":"FAQ/deployment-with-hpa/#does-nocalhost-have-support-to-develop-componentsservices-that-controls-by-deployments-with-hpa-horizontal-pod-autoscaler","text":"No. It is suggested that remove HPA controller from Deployments before developing components(services) with Nocalhost.","title":"Does Nocalhost have support to develop components(services) that controls by Deployments with HPA (Horizontal Pod Autoscaler)?"},{"location":"FAQ/multi-container-pods/","text":"Does Nocalhost have support to develop components(services) which have Pods running multiple containers? No, it is not currently supported. We will support it later.","title":"Multi-container Pods"},{"location":"FAQ/multi-container-pods/#does-nocalhost-have-support-to-develop-componentsservices-which-have-pods-running-multiple-containers","text":"No, it is not currently supported. We will support it later.","title":"Does Nocalhost have support to develop components(services) which have Pods running multiple containers?"},{"location":"FAQ/ssh-private-keys-passphrase/","text":"Why Nocalhost can not clone codes with SSH key that need passphrase for SSH private keys? Nocalhost does not support currently. We will support it later.","title":"SSH Private Keys Passphrase"},{"location":"FAQ/ssh-private-keys-passphrase/#why-nocalhost-can-not-clone-codes-with-ssh-key-that-need-passphrase-for-ssh-private-keys","text":"Nocalhost does not support currently. We will support it later.","title":"Why Nocalhost can not clone codes with SSH key that need passphrase for SSH private keys?"},{"location":"FAQ/vscode-plugin-limits/","text":"Does Nocalhost have support to develop components(services) which depend on Kubernetes cluster resources such as Namespaces, ClusterRole? It is not supported by Visual Studio Code plugin and Nocalhost Server, but Nocalhost CLI tool nhctl supports. We will support later.","title":"VSCode Plugin Limits"},{"location":"FAQ/vscode-plugin-limits/#does-nocalhost-have-support-to-develop-componentsservices-which-depend-on-kubernetes-cluster-resources-such-as-namespaces-clusterrole","text":"It is not supported by Visual Studio Code plugin and Nocalhost Server, but Nocalhost CLI tool nhctl supports. We will support later.","title":"Does Nocalhost have support to develop components(services) which depend on Kubernetes cluster resources such as Namespaces, ClusterRole?"},{"location":"FAQ/work-with-helm/","text":"How does Nocalhost find services when the workloads are installed by Helm? By default, Nocalhost recognizes services by the exact name of workloads in the cluster. But the name of the workloads installed by Helm may be generated according to the Chart templates. For example, if the Chart is created with the template provided by Helm, Nocalhost may find it by looking for workloads with name formed with <release-name>-<service-name> . For example, there is a service defined in config.yaml as following: ... services: - name: productpage serviceType: deployment When we install a application(helm) by nhctl as following: $ nhctl install dev -u <git-repo-url> $ kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE dev-productpage 0/1 1 0 9s Nocalhost will consider the workload dev-productpage as the service named productpage defined in config.yaml, while no workload named productpage in cluster. In other case, if you create Chart with other templates or install Chart in other ways, Nocalhost cannot find the services in the config.yaml. In this situation, you should configure the exact name of the workloads to Nocalhost's config.yaml. Using static workload names is recommended.","title":"Work with Helm"},{"location":"FAQ/work-with-helm/#how-does-nocalhost-find-services-when-the-workloads-are-installed-by-helm","text":"By default, Nocalhost recognizes services by the exact name of workloads in the cluster. But the name of the workloads installed by Helm may be generated according to the Chart templates. For example, if the Chart is created with the template provided by Helm, Nocalhost may find it by looking for workloads with name formed with <release-name>-<service-name> . For example, there is a service defined in config.yaml as following: ... services: - name: productpage serviceType: deployment When we install a application(helm) by nhctl as following: $ nhctl install dev -u <git-repo-url> $ kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE dev-productpage 0/1 1 0 9s Nocalhost will consider the workload dev-productpage as the service named productpage defined in config.yaml, while no workload named productpage in cluster. In other case, if you create Chart with other templates or install Chart in other ways, Nocalhost cannot find the services in the config.yaml. In this situation, you should configure the exact name of the workloads to Nocalhost's config.yaml. Using static workload names is recommended.","title":"How does Nocalhost find services when the workloads are installed by Helm?"},{"location":"References/architecture/","text":"What is Nocalhost? Nocalhost is Cloud Native Development Environment. Currently, it support developing applications based on Kubernetes: Deploy applications just one click, even with complex service dependencies Build, test and debug applications directly inside Kubernetes Develop with hot reloading : updates your running containers without rebuilding images or restarting containers How does it work? Deploy Nocalhost Server (nocalhost-api, nocalhost-web) to the kubernetes cluster. For Admin Use the management platform provided by Nocalhost Server to create users, configure the application's kubernetes cluster, create applications, and configure the application's DevSpace(Currently, DevSpace = ServiceAccount + Namespace). When kubernetes cluster configured, nocalhost-dep will be automatically deployed in the nocalhost-reservered namespace to control the order of microservices' starting. For Developer Install the nhctl CLI on the client machine and install the Nocalhost plugin in the IDE. Configure the nocalhost-api server url (for example: http://ip:port) in the plugin and sign in server, then deploy application to the kubernetes cluster. For Developer Developers can switch a specified micro service to DevMode. Once DevMode started, Nocalhost will replace the container of that micro service to DevContainer specified by configuration, sync source codes to DevContainer and forward the port of DevContainer to local. Here's the diagram of Nocalhost with all the components tied together. Component IDE plugins * IDE plugin packs the capabilities of nhctl and nocalhost-api development environment management to provide users with a better experience. nhctl nhctl is the core component of nocalhost, here are the core features: Install Application Nocalhost will deploy applications to kubernetes cluster according to the dependencies of the application which is defined in config YAML under the .nocalhost directory. Hot Reloading Via File Sync Any changes made to the local source codes will be synchronized to the remote DevContainer automatically. Developer can recompile and restart their process to verify code changes. In the future, we will support configure hotreload commands instead of restart processes manually. uninstall application Uninstalling application from DevSpace. nocalhost-web * nocalhost-web provides a web dashboard to manage users, development kubernetes clusters, applications and DevSpaces. nocalhost-api * Nocalhost manages serviceAccount, namespace and application in kubernetes cluster through api-server, and persists to database, providing data support for IDE plugin usage. nocalhost-dep * When application microservices are deployed in a Kubernetes cluster, there is no way to controler the startup sequence and dependencies of these microservices. A typical scenario is: Service A and Service B both rely on Mysql, Redis, RabbitMQ. Service A and Service B cannot be started unless these dependent services are available. Usually developers have to wait the Pod's restarting rely on Kubernetes' HealthCheck Probe. After restarting again and again, the time interval will be very long. This is why many large system running in Kubernetes start up extremely slow. By implemented a Kubernetes Admission Webhook like Istio injecting Sidecar, nocalhost-dep can controls the starting order. When applications deployed, nocalhost-dep will inject InitContainers into the workload automatically. According to declared dependencies, nocalhost-dep keeps waiting for the dependent services's availability. Once all dependent service become available, the InitContainer exits, then the containers which container business logics start. There is no restarting, which means minimal time waiting of starting.","title":"Architecture"},{"location":"References/architecture/#what-is-nocalhost","text":"Nocalhost is Cloud Native Development Environment. Currently, it support developing applications based on Kubernetes: Deploy applications just one click, even with complex service dependencies Build, test and debug applications directly inside Kubernetes Develop with hot reloading : updates your running containers without rebuilding images or restarting containers","title":"What is Nocalhost?"},{"location":"References/architecture/#how-does-it-work","text":"Deploy Nocalhost Server (nocalhost-api, nocalhost-web) to the kubernetes cluster. For Admin Use the management platform provided by Nocalhost Server to create users, configure the application's kubernetes cluster, create applications, and configure the application's DevSpace(Currently, DevSpace = ServiceAccount + Namespace). When kubernetes cluster configured, nocalhost-dep will be automatically deployed in the nocalhost-reservered namespace to control the order of microservices' starting. For Developer Install the nhctl CLI on the client machine and install the Nocalhost plugin in the IDE. Configure the nocalhost-api server url (for example: http://ip:port) in the plugin and sign in server, then deploy application to the kubernetes cluster. For Developer Developers can switch a specified micro service to DevMode. Once DevMode started, Nocalhost will replace the container of that micro service to DevContainer specified by configuration, sync source codes to DevContainer and forward the port of DevContainer to local. Here's the diagram of Nocalhost with all the components tied together.","title":"How does it work?"},{"location":"References/architecture/#component","text":"IDE plugins * IDE plugin packs the capabilities of nhctl and nocalhost-api development environment management to provide users with a better experience. nhctl nhctl is the core component of nocalhost, here are the core features: Install Application Nocalhost will deploy applications to kubernetes cluster according to the dependencies of the application which is defined in config YAML under the .nocalhost directory. Hot Reloading Via File Sync Any changes made to the local source codes will be synchronized to the remote DevContainer automatically. Developer can recompile and restart their process to verify code changes. In the future, we will support configure hotreload commands instead of restart processes manually. uninstall application Uninstalling application from DevSpace. nocalhost-web * nocalhost-web provides a web dashboard to manage users, development kubernetes clusters, applications and DevSpaces. nocalhost-api * Nocalhost manages serviceAccount, namespace and application in kubernetes cluster through api-server, and persists to database, providing data support for IDE plugin usage. nocalhost-dep * When application microservices are deployed in a Kubernetes cluster, there is no way to controler the startup sequence and dependencies of these microservices. A typical scenario is: Service A and Service B both rely on Mysql, Redis, RabbitMQ. Service A and Service B cannot be started unless these dependent services are available. Usually developers have to wait the Pod's restarting rely on Kubernetes' HealthCheck Probe. After restarting again and again, the time interval will be very long. This is why many large system running in Kubernetes start up extremely slow. By implemented a Kubernetes Admission Webhook like Istio injecting Sidecar, nocalhost-dep can controls the starting order. When applications deployed, nocalhost-dep will inject InitContainers into the workload automatically. According to declared dependencies, nocalhost-dep keeps waiting for the dependent services's availability. Once all dependent service become available, the InitContainer exits, then the containers which container business logics start. There is no restarting, which means minimal time waiting of starting.","title":"Component"},{"location":"References/cli-commands/","text":"","title":"CLI Commands"},{"location":"References/file-sync/","text":"","title":"File sync"},{"location":"References/nocalhost-config-yaml-spec/","text":"Configuration of Nocalhost 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 # Application name # type: string(dns1123) # default value: null # required # nhctl param: [NAME] # uniq name : nocalhost # Application k8s manifest type # type: select\uff0coptions\uff1ahelmGit/helmRepo/rawManiifest # default value: null # required # nhctl param: --type,-t manifestType : helmGit # helmGit: chart path: relative path of git repo root. # helmRepo: no meaning # rawManifest: manifest files path: multi relative paths of git repo root # type: string[] # default value: [\".\"] # required resourcePath : [ \"deployments/chart\" ] # Install application with minimal replica size (Not currently implemented) # type: boolean # default value: false # optional # nhctl param: TODO minimalInstall : false # The jobs to be executed before application's installation. # type: object[] # default value: [] # optional onPreInstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The jobs to be executed after application's installation. (Not currently implemented) # type: object[] # default value: [] # optional onPostInstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The jobs to be executed before application's uninstallation. (Not currently implemented) # type: object[] # default value: [] # optional onPreUninstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The jobs to be executed after application's uninstallation. (Not currently implemented) # type: object[] # default value: [] # optional onPostUninstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The Applicaion's micro services # type: object[] # default value: [] # optional services : # Name of service # type: string # default value: null # optional - name : service1 # The Kubernetes Workloads type corresponding to the service # type: select, options: deployment/statefulset/pod/job/cronjob/daemonset \u5927\u5c0f\u5199\u4e0d\u654f\u611f # default value: deployment # required serviceType : deployment # The git repository clone url of the service # type: string # default value: null # required gitUrl : \"https://github.com/nocalhost/nocalhost.git\" # DevContainer Image of the micro service # type: string # default value: null # required devContainerImage : \"codingcorp.coding.net/xxxx/go:latest\" # The default shell of DevContainer (Not currently implemented) # type: string # default value: \"/bin/sh\" # optional devContainerShell : \"bash\" # The synchronization file mode of the service (Not currently implemented) # \"send\" specifies one-way synchronization to the container, \"sendreceive\" specifies two-way synchronization # type: select\uff0csend/sendreceive # default value: \"send\" # optional syncType : send # List of files and directories to be synchronized to DevContainer # type: string[] # default value: [\".\"] # optional syncDirs : - \"./src\" - \"./pkg/fff\" # List of ignored files and directories to be synchronized to DevContainer (Not currently implemented) # type: string[] # default value: [] # optional ignoreDirs : - \".git\" - \"./build\" # Ports to be forwarded to local # localPort:remotePort # type: string[] # default value: [] # optional devPort : - 8080:8080 - :8000 # random localPort, remotePort 8000 # Dependent Pods label selector (The service will not start until the Pods selected by selector being ready.) # type: string[] # default value: [] # optional dependPodsLabelSelector : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # Dependent Jobs label selector (The service will not start until the Jobs selected by selector completed.) # type: string[] # default value: [] # optional dependJobsLabelSelector : - \"name=init-job\" - \"app.kubernetes.io/name=init-job\" # The work directory of DevContainer (Not currently implemented) # type: string # default value: \"/home/nocalhost-dev\" # optional workDir : \"/home/nocalhost-dev\" # Dirs to be persisted in DevContainer (Not currently implemented) # type: string[] # default value: [\"/home/nocalhost-dev\"] # optional persistentVolumeDir : - \"/home/nocalhost-dev\" # Build command of the service (Not currently implemented) # type: string # default value: \"\" # optional buildCommand : \"./gradlew package\" # Run command of the service (Not currently implemented) # type: string # default value: \"\" # optional runCommand : \"./gradlew bootRun\" # Debug command of the service (Not currently implemented) # type: string # default value: \"\" # optional debugCommand : \"./gradlew bootRun --debug-jvm\" # Hot-reload run command of the service (Not currently implemented) # type: string # default value: \"\" # optional hotReloadRunCommand : \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" # Hot-reload debug command of the service (Not currently implemented) # type: string # default value: \"\" # optional hotReloadDebugCommand : \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" # Ports of remote debugging (Not currently implemented) # type: string # default value: \"\" # optional remoteDebugPort : 5005 # Use .dev-container of VSCode to specify DevContainer Image (Not currently implemented) # type: string # default value: \"\" # optional useDevContainer : false - name : service2 ...","title":"Config Specs"},{"location":"References/nocalhost-config-yaml-spec/#configuration-of-nocalhost","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 # Application name # type: string(dns1123) # default value: null # required # nhctl param: [NAME] # uniq name : nocalhost # Application k8s manifest type # type: select\uff0coptions\uff1ahelmGit/helmRepo/rawManiifest # default value: null # required # nhctl param: --type,-t manifestType : helmGit # helmGit: chart path: relative path of git repo root. # helmRepo: no meaning # rawManifest: manifest files path: multi relative paths of git repo root # type: string[] # default value: [\".\"] # required resourcePath : [ \"deployments/chart\" ] # Install application with minimal replica size (Not currently implemented) # type: boolean # default value: false # optional # nhctl param: TODO minimalInstall : false # The jobs to be executed before application's installation. # type: object[] # default value: [] # optional onPreInstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The jobs to be executed after application's installation. (Not currently implemented) # type: object[] # default value: [] # optional onPostInstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The jobs to be executed before application's uninstallation. (Not currently implemented) # type: object[] # default value: [] # optional onPreUninstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The jobs to be executed after application's uninstallation. (Not currently implemented) # type: object[] # default value: [] # optional onPostUninstall : # Job yaml file, the relative path of the repo root # type: string # required - path : \"job-1.yaml\" # Job name # type: string # required name : xxx-job # Order of execution of job, the smallest be executed firstly. # type: integer # default value: 0 # optional priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # The Applicaion's micro services # type: object[] # default value: [] # optional services : # Name of service # type: string # default value: null # optional - name : service1 # The Kubernetes Workloads type corresponding to the service # type: select, options: deployment/statefulset/pod/job/cronjob/daemonset \u5927\u5c0f\u5199\u4e0d\u654f\u611f # default value: deployment # required serviceType : deployment # The git repository clone url of the service # type: string # default value: null # required gitUrl : \"https://github.com/nocalhost/nocalhost.git\" # DevContainer Image of the micro service # type: string # default value: null # required devContainerImage : \"codingcorp.coding.net/xxxx/go:latest\" # The default shell of DevContainer (Not currently implemented) # type: string # default value: \"/bin/sh\" # optional devContainerShell : \"bash\" # The synchronization file mode of the service (Not currently implemented) # \"send\" specifies one-way synchronization to the container, \"sendreceive\" specifies two-way synchronization # type: select\uff0csend/sendreceive # default value: \"send\" # optional syncType : send # List of files and directories to be synchronized to DevContainer # type: string[] # default value: [\".\"] # optional syncDirs : - \"./src\" - \"./pkg/fff\" # List of ignored files and directories to be synchronized to DevContainer (Not currently implemented) # type: string[] # default value: [] # optional ignoreDirs : - \".git\" - \"./build\" # Ports to be forwarded to local # localPort:remotePort # type: string[] # default value: [] # optional devPort : - 8080:8080 - :8000 # random localPort, remotePort 8000 # Dependent Pods label selector (The service will not start until the Pods selected by selector being ready.) # type: string[] # default value: [] # optional dependPodsLabelSelector : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # Dependent Jobs label selector (The service will not start until the Jobs selected by selector completed.) # type: string[] # default value: [] # optional dependJobsLabelSelector : - \"name=init-job\" - \"app.kubernetes.io/name=init-job\" # The work directory of DevContainer (Not currently implemented) # type: string # default value: \"/home/nocalhost-dev\" # optional workDir : \"/home/nocalhost-dev\" # Dirs to be persisted in DevContainer (Not currently implemented) # type: string[] # default value: [\"/home/nocalhost-dev\"] # optional persistentVolumeDir : - \"/home/nocalhost-dev\" # Build command of the service (Not currently implemented) # type: string # default value: \"\" # optional buildCommand : \"./gradlew package\" # Run command of the service (Not currently implemented) # type: string # default value: \"\" # optional runCommand : \"./gradlew bootRun\" # Debug command of the service (Not currently implemented) # type: string # default value: \"\" # optional debugCommand : \"./gradlew bootRun --debug-jvm\" # Hot-reload run command of the service (Not currently implemented) # type: string # default value: \"\" # optional hotReloadRunCommand : \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" # Hot-reload debug command of the service (Not currently implemented) # type: string # default value: \"\" # optional hotReloadDebugCommand : \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" # Ports of remote debugging (Not currently implemented) # type: string # default value: \"\" # optional remoteDebugPort : 5005 # Use .dev-container of VSCode to specify DevContainer Image (Not currently implemented) # type: string # default value: \"\" # optional useDevContainer : false - name : service2 ...","title":"Configuration of Nocalhost"},{"location":"References/port-forward/","text":"","title":"Port Forward"},{"location":"References/service-denepdency/","text":"","title":"Service Dependency"},{"location":"Tutorials/nocalhost-with-docker-desktop/","text":"","title":"Docker"},{"location":"Tutorials/nocalhost-with-helm/","text":"","title":"Helm"},{"location":"Tutorials/nocalhost-with-k8s-manifests/","text":"","title":"Kubernetes"},{"location":"Tutorials/nocalhost-with-minikube/","text":"Prerequisites To successfully and correctly ensure the use of Nocalhost , the following prerequisites needed. minikube docker (we suggest to use docker as driver though minikube support dirrent type of driver) helm3 \u0014 kubectl Nhctl v0.0.6+ VSCode Nocalhost VSCode Plugin v0.0.6+ ( though Nocalhost can work order without the plugin, we still recommend using plugin for best experience) Make sure your minikube is up and running. minikube kubectl version Check nhctl , helm , kubectl too. nhctl version && helm version && kubectl version nhctl require kube config file in $HOME/.kube named config , or you can specify other kubeconfig files by setting the --kubeconfig flag. Getting Started This section will help you to use nocalhost for fast-feedback develop. We prepare a Quick-Experience demo, you don\u2019t have to add any additional configuration. Just init the nocalhost and develop in VSCode only throughout the experience. STEP1. Init Nocalhost First initial the Nocalhost with following command: \u200b -n is the namespace nocalhost used and it will be auto created nhctl init -n nocalhost Waiting for 5 minutes, the Nocalhost-Server and Nocalhost-Dep will start and create a Quick-Experience Application automatic. Now we can see multi pods was created in namespace nocalhost and nocalhost-reserved: > kubectl get pod -n nocalhost NAME READY STATUS RESTARTS AGE nocalhost-api-5b46855846-9dvzh 1/1 Running 3 22m nocalhost-mariadb-0 1/1 Running 0 22m nocalhost-web-5c9b865cf6-sqrrw 1/1 Running 0 22m > kubectl get pod -n nocalhost-reserved NAME READY STATUS RESTARTS AGE nocalhost-dep-7488b45c7f-bh5p2 1/1 Running 0 20m nocalhost-dep-installer-9rfm2-t8pgv 0/1 Completed 0 21m STEP2. Access nocalhost-web nocalhost-web is a component of Nocalhost-Server , it's a web-based nocalhost management designed to store and manage nocalhost applications and configurations. > kubectl get svc -n nocalhost NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE nocalhost-api ClusterIP 10.108.240.200 <none> 8080/TCP 20m nocalhost-mariadb ClusterIP 10.96.11.107 <none> 3306/TCP 20m nocalhost-web LoadBalancer 10.101.44.129 <pending> 80:30265/TCP 20m We can see the svc nocalhost-web 's port exposed outside with is 30265, but we can\u2018t not access it directly right now. Use minikube tunnel minikube tunnel runs as a process, creating a network route on the host to the service CIDR of the cluster using the cluster\u2019s IP address as a gateway. The tunnel command exposes the external IP directly to any program running on the host operating system. Then entering Nocalhost homepage with http:// minikube ip : nocalhost-web-expose-port . In this tutorials, minikube ip is 192.168.49.2 and nocalhost-web 's expose port is 30265. > minikube ip 192.168.49.2 So entering http://192.168.49.2:30265 : You can login with email admin@admin.com pwd 123456 and there is an application sample for Quick-Experience created by Nocalhost using the kubeconfig you specified when the Nocalhost was inited. STEP3. Use VSCode Nocalhost Plug-in to install application This section show how to install your k8s application by using Quick-Experience application bookinfo. First make sure your plugin has been installed Switch to the Nocalhost tab Specify your nocalhost-web endpoint, and type in the address http:// minikube ip : nocalhost-web-expose-port current used to access Nocalhost homepage. Sign in with email foo@nocalhost.dev and pwd 123456 Why not login with admin@admin.com ? You can enter the website http:// minikube ip : nocalhost-web-expose-port , switch to the tab Application , and there is a Application sample named bookinfo. click SPACE LIST then you can see Nocalhost created a Space for User Nocalhost . That can be simply understood as Space under Application is the workspace user can access in the VSCode Nocalhost Plug-in . Of cause you can create a Space for user admin manually and sign in with it. Here show all the Spaces hold by the user you sign in. Each spaces can be installed according to your configuration in Nocalhost-Web . Now click the rocket to install it: Waiting for Application startup. The cycle icon means the resources is already running. Wait until all pods start up, now forward the port of Deployment 'productpage' by right clicking it and select Port Forward to access this application on site. Type in 9080:9080 and press Enter Then we can access 'bookinfo' on site http://localhost:9080 STEP4. Start develop! Start develop and entering Dev-Mode by clicking one of Deployment 's hammer, 'productpage' for example. You can specify your source code dir both local directory or git repo, here we use git repo, and 'productpage''s source code is on https://github.com/nocalhost/bookinfo-productpage , then choose a local directory to clone source code. Waiting for the dev mode complete startup, Nocalhost-Plug-In will open a new window according to the local directory you specified with cloned source code. If the source code is already on your machine, you can choose Open local directory directly while enter develop by clicking hammer Nocalhost will replace the deployment's container you develop, those files in the directory you specified such as the source code will be synchronized real-time into the container. Let's modify the templates/index.html or something else. Don't forget to saving the change because nocalhost do not synchronize your change in memory! Then run ./run.sh in the terminal, wait for the app up. This step can be any command to start your application, such as: java Main gradle build && java -jar ./foo/bar.jar python helloworld.py Access bookinfo on site http://localhost:9080 again, our changes is take effect: Nocalhost helps to have a coding experience that almost like develop in the container, so you needn't wait for build images, CI/CD, etc... Just modify your code, and run it. STEP5. End develop and uninstall Application Now return to the Nocalhost-Plug-In , click the red hammer to end dev mode (may click the Reresh icon to synchronize the latest status). While dev mode end, current container replaced before will be restored. Let's access 'bookinfo' on site http://localhost:9080: Click the bin to uninstall Application that all k8s resources in this Application will be removed. Configure Application This section will help you to config an application simply. Now return to nocalhost-web , entering Nocalhost homepage with http:// minikube ip : nocalhost-web-expose-port , login to the nocalhost-web using default email admin@admin.com and password 123456. STEP1. Create Cluster First switch to the tab Clusters , paste kube admin config by using kubectl.exe config view --minify --raw --flatten and click on the Save button to create a Cluster . Then we can see: Name Cluster Version NodesCount Users Count Creator ... whatever V1.19.3 1 0 Admin ... STEP2. Create Application After creating Cluster , switch to another tab named Applications . Create an 'bookinfo' application manually by using following config: Application Name : bookinfo Kubernetes Manifest Source Type : Git Manifest Type : Helm Chart Git Repo Url : https://github.com/nocalhost/bookinfo.git Resource Dir : charts/bookinfo bookinfo is a demo project for nocalhost , it contain both manifest type Kubenetes manifests and helm manifests , we use Helm manifests and specify it's manifest resource dir charts/bookinfo . (or you can use Kubenetes manifests with resource Dir manifest/templates ) Application Name Kubernetes Manifest Source Type Creator ... bookinfo Git Admin ... STEP3. Create Space At last, create a Space for this Application , choose a Cluster created before and specify it's owner: Status Owner Namespace Created At Cluster ... Admin Nh1hsbq 2020-12-11 00:00:00 Whatever ... then nocalhost use kubenetes config from Cluster to create a kubernates namespace . This namespace use for installing application when develop on Nocalhost-Plug-In .","title":"MiniKube"},{"location":"Tutorials/nocalhost-with-minikube/#prerequisites","text":"To successfully and correctly ensure the use of Nocalhost , the following prerequisites needed. minikube docker (we suggest to use docker as driver though minikube support dirrent type of driver) helm3 \u0014 kubectl Nhctl v0.0.6+ VSCode Nocalhost VSCode Plugin v0.0.6+ ( though Nocalhost can work order without the plugin, we still recommend using plugin for best experience) Make sure your minikube is up and running. minikube kubectl version Check nhctl , helm , kubectl too. nhctl version && helm version && kubectl version nhctl require kube config file in $HOME/.kube named config , or you can specify other kubeconfig files by setting the --kubeconfig flag.","title":"Prerequisites"},{"location":"Tutorials/nocalhost-with-minikube/#getting-started","text":"This section will help you to use nocalhost for fast-feedback develop. We prepare a Quick-Experience demo, you don\u2019t have to add any additional configuration. Just init the nocalhost and develop in VSCode only throughout the experience.","title":"Getting Started"},{"location":"Tutorials/nocalhost-with-minikube/#step1-init-nocalhost","text":"First initial the Nocalhost with following command: \u200b -n is the namespace nocalhost used and it will be auto created nhctl init -n nocalhost Waiting for 5 minutes, the Nocalhost-Server and Nocalhost-Dep will start and create a Quick-Experience Application automatic. Now we can see multi pods was created in namespace nocalhost and nocalhost-reserved: > kubectl get pod -n nocalhost NAME READY STATUS RESTARTS AGE nocalhost-api-5b46855846-9dvzh 1/1 Running 3 22m nocalhost-mariadb-0 1/1 Running 0 22m nocalhost-web-5c9b865cf6-sqrrw 1/1 Running 0 22m > kubectl get pod -n nocalhost-reserved NAME READY STATUS RESTARTS AGE nocalhost-dep-7488b45c7f-bh5p2 1/1 Running 0 20m nocalhost-dep-installer-9rfm2-t8pgv 0/1 Completed 0 21m","title":"STEP1. Init Nocalhost"},{"location":"Tutorials/nocalhost-with-minikube/#step2-access-nocalhost-web","text":"nocalhost-web is a component of Nocalhost-Server , it's a web-based nocalhost management designed to store and manage nocalhost applications and configurations. > kubectl get svc -n nocalhost NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE nocalhost-api ClusterIP 10.108.240.200 <none> 8080/TCP 20m nocalhost-mariadb ClusterIP 10.96.11.107 <none> 3306/TCP 20m nocalhost-web LoadBalancer 10.101.44.129 <pending> 80:30265/TCP 20m We can see the svc nocalhost-web 's port exposed outside with is 30265, but we can\u2018t not access it directly right now. Use minikube tunnel minikube tunnel runs as a process, creating a network route on the host to the service CIDR of the cluster using the cluster\u2019s IP address as a gateway. The tunnel command exposes the external IP directly to any program running on the host operating system. Then entering Nocalhost homepage with http:// minikube ip : nocalhost-web-expose-port . In this tutorials, minikube ip is 192.168.49.2 and nocalhost-web 's expose port is 30265. > minikube ip 192.168.49.2 So entering http://192.168.49.2:30265 : You can login with email admin@admin.com pwd 123456 and there is an application sample for Quick-Experience created by Nocalhost using the kubeconfig you specified when the Nocalhost was inited.","title":"STEP2. Access nocalhost-web"},{"location":"Tutorials/nocalhost-with-minikube/#step3-use-vscode-nocalhost-plug-in-to-install-application","text":"This section show how to install your k8s application by using Quick-Experience application bookinfo. First make sure your plugin has been installed Switch to the Nocalhost tab Specify your nocalhost-web endpoint, and type in the address http:// minikube ip : nocalhost-web-expose-port current used to access Nocalhost homepage. Sign in with email foo@nocalhost.dev and pwd 123456 Why not login with admin@admin.com ? You can enter the website http:// minikube ip : nocalhost-web-expose-port , switch to the tab Application , and there is a Application sample named bookinfo. click SPACE LIST then you can see Nocalhost created a Space for User Nocalhost . That can be simply understood as Space under Application is the workspace user can access in the VSCode Nocalhost Plug-in . Of cause you can create a Space for user admin manually and sign in with it. Here show all the Spaces hold by the user you sign in. Each spaces can be installed according to your configuration in Nocalhost-Web . Now click the rocket to install it: Waiting for Application startup. The cycle icon means the resources is already running. Wait until all pods start up, now forward the port of Deployment 'productpage' by right clicking it and select Port Forward to access this application on site. Type in 9080:9080 and press Enter Then we can access 'bookinfo' on site http://localhost:9080","title":"STEP3. Use VSCode Nocalhost Plug-in to install application"},{"location":"Tutorials/nocalhost-with-minikube/#step4-start-develop","text":"Start develop and entering Dev-Mode by clicking one of Deployment 's hammer, 'productpage' for example. You can specify your source code dir both local directory or git repo, here we use git repo, and 'productpage''s source code is on https://github.com/nocalhost/bookinfo-productpage , then choose a local directory to clone source code. Waiting for the dev mode complete startup, Nocalhost-Plug-In will open a new window according to the local directory you specified with cloned source code. If the source code is already on your machine, you can choose Open local directory directly while enter develop by clicking hammer Nocalhost will replace the deployment's container you develop, those files in the directory you specified such as the source code will be synchronized real-time into the container. Let's modify the templates/index.html or something else. Don't forget to saving the change because nocalhost do not synchronize your change in memory! Then run ./run.sh in the terminal, wait for the app up. This step can be any command to start your application, such as: java Main gradle build && java -jar ./foo/bar.jar python helloworld.py Access bookinfo on site http://localhost:9080 again, our changes is take effect: Nocalhost helps to have a coding experience that almost like develop in the container, so you needn't wait for build images, CI/CD, etc... Just modify your code, and run it.","title":"STEP4. Start develop!"},{"location":"Tutorials/nocalhost-with-minikube/#step5-end-develop-and-uninstall-application","text":"Now return to the Nocalhost-Plug-In , click the red hammer to end dev mode (may click the Reresh icon to synchronize the latest status). While dev mode end, current container replaced before will be restored. Let's access 'bookinfo' on site http://localhost:9080: Click the bin to uninstall Application that all k8s resources in this Application will be removed.","title":"STEP5. End develop and uninstall Application"},{"location":"Tutorials/nocalhost-with-minikube/#configure-application","text":"This section will help you to config an application simply. Now return to nocalhost-web , entering Nocalhost homepage with http:// minikube ip : nocalhost-web-expose-port , login to the nocalhost-web using default email admin@admin.com and password 123456.","title":"Configure Application"},{"location":"Tutorials/nocalhost-with-minikube/#step1-create-cluster","text":"First switch to the tab Clusters , paste kube admin config by using kubectl.exe config view --minify --raw --flatten and click on the Save button to create a Cluster . Then we can see: Name Cluster Version NodesCount Users Count Creator ... whatever V1.19.3 1 0 Admin ...","title":"STEP1. Create Cluster"},{"location":"Tutorials/nocalhost-with-minikube/#step2-create-application","text":"After creating Cluster , switch to another tab named Applications . Create an 'bookinfo' application manually by using following config: Application Name : bookinfo Kubernetes Manifest Source Type : Git Manifest Type : Helm Chart Git Repo Url : https://github.com/nocalhost/bookinfo.git Resource Dir : charts/bookinfo bookinfo is a demo project for nocalhost , it contain both manifest type Kubenetes manifests and helm manifests , we use Helm manifests and specify it's manifest resource dir charts/bookinfo . (or you can use Kubenetes manifests with resource Dir manifest/templates ) Application Name Kubernetes Manifest Source Type Creator ... bookinfo Git Admin ...","title":"STEP2. Create Application"},{"location":"Tutorials/nocalhost-with-minikube/#step3-create-space","text":"At last, create a Space for this Application , choose a Cluster created before and specify it's owner: Status Owner Namespace Created At Cluster ... Admin Nh1hsbq 2020-12-11 00:00:00 Whatever ... then nocalhost use kubenetes config from Cluster to create a kubernates namespace . This namespace use for installing application when develop on Nocalhost-Plug-In .","title":"STEP3. Create Space"},{"location":"Tutorials/nocalhost-with-serverless-kubernetes/","text":"","title":"Serverless Kubernetes"},{"location":"Tutorials/nocalhost-with-tke/","text":"","title":"TKE"},{"location":"Tutorials/nocalhost-without-ide-plugin/","text":"Start coding with nhctl Install nhctl: https://nocalhost.dev/installation Get \"kubeconfig\" file from Kubernetes Administrator or download from Nocalhost Web and save to local machine. Install an application that you want to develop via nhctl: nhctl install <application name> --kubeconfig <kubeconfig> -u <a git repo url which contains helm chart or manifests> After installation,you can enter DevMode by specify a workload that you want to develop: nhctl dev start <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> Once DevMode established, codes can be transfered to DevContainer by running nhctl sync command: nhctl sync <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> Forwarding ports from DevContainer to local is a optional operation if you want access container locally: nhctl port-forward <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> Now, you can make some code changes and start your program process in DevContainer: nhctl dev terminal <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> <your program start command,like: ./gradlew bootRun> Note Click here to get more details about the arguments of nhctl","title":"CLI"},{"location":"Tutorials/nocalhost-without-ide-plugin/#start-coding-with-nhctl","text":"Install nhctl: https://nocalhost.dev/installation Get \"kubeconfig\" file from Kubernetes Administrator or download from Nocalhost Web and save to local machine. Install an application that you want to develop via nhctl: nhctl install <application name> --kubeconfig <kubeconfig> -u <a git repo url which contains helm chart or manifests> After installation,you can enter DevMode by specify a workload that you want to develop: nhctl dev start <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> Once DevMode established, codes can be transfered to DevContainer by running nhctl sync command: nhctl sync <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> Forwarding ports from DevContainer to local is a optional operation if you want access container locally: nhctl port-forward <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> Now, you can make some code changes and start your program process in DevContainer: nhctl dev terminal <application name> --kubeconfig <kubeconfig> -d <the workload that you want to develop> <your program start command,like: ./gradlew bootRun> Note Click here to get more details about the arguments of nhctl","title":"Start coding with nhctl"},{"location":"Tutorials/vscode-plugin/","text":"Start coding with Nocalhost VSCode Plugin (Recemmended) Install Nocalhost VSCode Plugin, here . Configure plugin and sigin nocalhost api server. Install application and start development. Click the install icon of the application that you want to develop on the left panel. Click the Workload of this application to watch the deployment progress and wait for the installation. Click the start develop icon to enter DevSpace and enjoy your coding.","title":"VScode Plugin"},{"location":"Tutorials/vscode-plugin/#start-coding-with-nocalhost-vscode-plugin-recemmended","text":"Install Nocalhost VSCode Plugin, here . Configure plugin and sigin nocalhost api server. Install application and start development. Click the install icon of the application that you want to develop on the left panel. Click the Workload of this application to watch the deployment progress and wait for the installation. Click the start develop icon to enter DevSpace and enjoy your coding.","title":"Start coding with Nocalhost VSCode Plugin (Recemmended)"},{"location":"zh/getting-started/","text":"\u5f00\u59cb\u4e4b\u524d \u524d\u7f6e\u6761\u4ef6: \u4e00\u4e2a Kubernetes(1.16+) \u96c6\u7fa4(\u5efa\u8bae\u7531\u4e91\u5e73\u53f0\u63d0\u4f9b\uff0cMinikube \u4e5f\u53ef\u4ee5) \u914d\u7f6e\u597d kubectl \u53ef\u4ee5\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8bbf\u95ee\u4e0a\u8ff0\u96c6\u7fa4 \u96c6\u7fa4\u5fc5\u987b\u542f\u7528 RBAC \u5b89\u88c5\u597d Helm3 \u5b89\u88c5\u597d Visual Studio Code(1.31+) \u5b89\u88c5\u597d Git \u7b2c\u4e00\u6b65: \u5b89\u88c5 nhctl \u548c VSCode extension \u53c2\u8003\u8fd9\u91cc: https://nocalhost.dev/installation/ \u7b2c\u4e8c\u6b65: \u521d\u59cb\u5316\u96c6\u7fa4\u5e76\u4e14\u90e8\u7f72 Nocalhost Server \u53ef\u9009\u7531\u4e91\u5e73\u53f0\u63d0\u4f9b\u7684 Kubernetes: \u5982 \u817e\u8baf TKE : \u5728\u547d\u4ee4\u884c\u7ec8\u7aef\u6267\u884c\u521d\u59cb\u5316: nhctl init -n nocalhost \u6216\u8005\u4f7f\u7528 Minikube: \u4ee5 docker \u6a21\u5f0f\u542f\u52a8 minikube: \u5728 minikube(docker driver) ( minikube start --driver=docker ) \u542f\u52a8\u5b8c\u6bd5, \u5728\u547d\u4ee4\u884c\u7ec8\u7aef\u6267\u884c\u521d\u59cb\u5316: nhctl init -n nocalhost -t nodeport -p 80 \u7b49\u5f85\u521d\u59cb\u5316\u8fc7\u7a0b: \u521d\u59cb\u5316\u5b8c\u6bd5\u540e: [MINIKUBE \u65b9\u6848\u6ce8\u610f]: \u4e3a\u4e86\u4fdd\u6301\u7aef\u53e3\u8f6c\u53d1\uff0c\u8bf7\u4e0d\u8981\u5173\u95ed\u4e0a\u8ff0 Terminal nhctl init \u547d\u4ee4\u884c\u53c2\u6570 --namespace: \u6307\u5b9a\u5b89\u88c5\u5728\u54ea\u4e2a\u96c6\u7fa4.(\u4f1a\u81ea\u52a8\u521b\u5efa\u4e0d\u5b58\u5728\u7684\u96c6\u7fa4) --port: \u6307\u5b9a Nocalhost Web \u76d1\u542c\u7684\u7aef\u53e3.(\u9ed8\u8ba4\u662f 80) --set: \u6307\u5b9a\u8986\u76d6 Nocalhost Helm Chart \u7684 value --type: \u6307\u5b9a Nocalhost Web \u7684 Service Type(nodeport or loadbalaner) --force: \u5f3a\u5236\u521d\u59cb\u5316\uff0c\u8bf7\u6ce8\u610f\u5b83\u5c06\u5220\u9664\u6240\u6709 Nocalhost \u7684\u65e7\u6570\u636e \u4f60\u53ef\u4ee5\u6839\u636e\u4f60\u7684\u96c6\u7fa4\u60c5\u51b5\uff0c\u914d\u7f6e\u4e0a\u8ff0 init \u53c2\u6570\u6765\u6267\u884c\u521d\u59cb\u5316\u8fc7\u7a0b. \u7b2c\u4e09\u6b65: \u914d\u7f6e\u5e76\u767b\u9646 Nocalhost VSCode \u63d2\u4ef6 \u5728 VSCode \u4e2d\u8fdb\u5165\u63d2\u4ef6\u9875\u9762, \u5728\u5de6\u4fa7\u9762\u677f\u4e2d\u70b9\u51fb \"Config Server URL\" \u6309\u94ae: \u8f93\u5165\u4ece \u7b2c\u4e8c\u6b65 \u83b7\u5f97\u7684\u8bbf\u95ee\u5730\u5740, \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f Minikube \uff0c\u90a3\u4e48\u53ef\u4ee5\u8f93\u5165\u56fa\u5b9a\u5730\u5740 http://127.0.0.1:31219 \uff0c\u6309\u4e0b\u56de\u8f66\u952e\u4fdd\u5b58. \u5206\u522b\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6309\u4e0b\u56de\u8f66\u952e\u4fdd\u5b58: \u7528\u6237\u540d: foo@nocalhost.dev \u5bc6\u7801: 123456 \u5728\u767b\u5f55\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u770b\u5230: \u7b2c\u56db\u6b65: \u5b89\u88c5\u793a\u4f8b\u5e94\u7528: bookinfo \u70b9\u51fb\u5de6\u4fa7\u9762\u677f\u4e0a\u7684\u5b89\u88c5\u56fe\u6807\uff0c\u5b89\u88c5\u5e94\u7528: bookinfo. \u70b9\u51fb\u4e4b\u540e\uff0cNocalhost \u4f1a\u5f00\u59cb\u6267\u884c\u5b89\u88c5\u8fc7\u7a0b. \u4f60\u53ef\u4ee5\u70b9\u51fb\u5237\u65b0\u56fe\u6807\u6765\u67e5\u770b\u5e94\u7528\u5b89\u88c5\u548c\u542f\u52a8\u8fc7\u7a0b\u4e2d\u7684\u72b6\u6001\u53d8\u5316\u3002 \u5728\u6240\u6709\u5fae\u670d\u52a1\u90fd\u542f\u52a8\u5b8c\u6bd5\u540e\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff1a \u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u8bbf\u95ee\u5b89\u88c5\u7684\u5e94\u7528\u7684 web \u9875\u9762\u4e86\uff1a http://127.0.0.1:39080/productpage \u7b2c\u4e94\u6b65: \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f \u4f60\u53ef\u4ee5\u70b9\u51fb\u67d0\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7eff\u8272\u9524\u5b50\u56fe\u6807\u6765\u628a\u5de5\u4f5c\u8d1f\u8f7d\u5207\u6362\u5230\u5f00\u53d1\u6a21\u5f0f. \u4f60\u9009\u62e9 \"Clone from Git repo\" \u5e76\u6307\u5b9a\u4e00\u4e2a\u672c\u5730\u5b58\u50a8\u76ee\u5f55\u540e\uff0cNocalhost \u4f1a\u628a\u6e90\u7801 clone \u4e0b\u6765. \u6e90\u4ee3\u7801\u68c0\u51fa\u540e, Nocalhost \u4f1a\u6253\u5f00\u4e00\u4e2a\u65b0 VSCode \u7a97\u53e3\uff0c\u5e76\u7ee7\u7eed\u5207\u6362\u5230\u5f00\u53d1\u6a21\u5f0f. \u5728\u5f00\u53d1\u6a21\u5f0f\u5207\u6362\uff08\u521d\u6b21\u4f7f\u7528\uff0c\u65f6\u95f4\u53ef\u80fd\u8f83\u957f\uff09\u5b8c\u6bd5\u540e\uff0c\u4f60\u4f1a\u770b\u5230: \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\uff0c\u5f00\u53d1\u5bb9\u5668\u9ed8\u8ba4\u6ca1\u6709\u542f\u52a8\u4e3b\u8fdb\u7a0b\uff0c\u6240\u4ee5\u4e0d\u4f1a\u54cd\u5e94\u7f51\u9875\u7aef\u7684\u8bf7\u6c42\uff0c\u6b64\u4e8b\u5982\u679c\u5237\u65b0\u9875\u9762\uff0c\u9875\u9762\u5c06\u51fa\u9519\u3002\u76f4\u5230\u4f60\u518d\u6b21\u542f\u52a8\u8fdb\u7a0b\u540e\uff0c\u9875\u9762\u624d\u4f1a\u6062\u590d\u3002 \u5982\u679c\u4f60\u5207\u6362\u5f00\u53d1\u6a21\u5f0f\u7684\u5de5\u4f5c\u8d1f\u8f7d\u662f productpage \u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u6267\u884c sh run.sh \u6765\u542f\u52a8 hot-reload \u6a21\u5f0f\u7684\u8fdb\u7a0b: \u7b2c\u516d\u6b65: \u6539\u52a8\u4e00\u4e9b\u4ee3\u7801\uff0c\u5e76\u67e5\u770b\u8fd0\u884c\u7ed3\u679c \u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4fee\u6539\u4e00\u4e9b\u4ee3\u7801\uff0c\u5e76\u5237\u65b0\u9875\u9762\u770b\u6548\u679c\u3002 \u4f8b\u5982, \u5728\u6587\u4ef6 productpage.py \u7684 355 \u884c\u6dfb\u52a0 Hello Nocalhost! . \u522b\u5fd8\u4e86\u4fdd\u5b58\u6587\u4ef6. \u5237\u65b0\u7f51\u9875\uff0c\u5373\u53ef\u7acb\u5373\u770b\u5230\u6548\u679c\u3002 http://127.0.0.1:39080/productpage \ud83d\ude04 \u606d\u559c! \u901a\u8fc7\u8fd9\u4e2a\u7b80\u5355\u7684\u57fa\u4e8e Nocalhost \u7684\u6559\u7a0b\uff0c\u4f60\u5df2\u7ecf\u4f53\u9a8c\u4e86\u4e91\u539f\u751f\u5f00\u53d1\u7684\u4fbf\u6377\u548c\u5f3a\u5927\u3002\u53ef\u4ee5\u5f00\u59cb\u5c1d\u8bd5\u5728\u771f\u5b9e\u7684\u9879\u76ee\u4e2d\u914d\u7f6e\u5e76\u4f7f\u7528 Nocalhost \u4e86\u3002 Nocalhost \u6b22\u8fce\u60a8\u7684\u610f\u89c1\u548c\u5efa\u8bae. GitHub Issues: https://github.com/nocalhost/nocalhost","title":"\u5feb\u901f\u4e0a\u624b"},{"location":"zh/getting-started/#_1","text":"\u524d\u7f6e\u6761\u4ef6: \u4e00\u4e2a Kubernetes(1.16+) \u96c6\u7fa4(\u5efa\u8bae\u7531\u4e91\u5e73\u53f0\u63d0\u4f9b\uff0cMinikube \u4e5f\u53ef\u4ee5) \u914d\u7f6e\u597d kubectl \u53ef\u4ee5\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8bbf\u95ee\u4e0a\u8ff0\u96c6\u7fa4 \u96c6\u7fa4\u5fc5\u987b\u542f\u7528 RBAC \u5b89\u88c5\u597d Helm3 \u5b89\u88c5\u597d Visual Studio Code(1.31+) \u5b89\u88c5\u597d Git","title":"\u5f00\u59cb\u4e4b\u524d"},{"location":"zh/getting-started/#nhctl-vscode-extension","text":"\u53c2\u8003\u8fd9\u91cc: https://nocalhost.dev/installation/","title":"\u7b2c\u4e00\u6b65: \u5b89\u88c5 nhctl \u548c VSCode extension"},{"location":"zh/getting-started/#nocalhost-server","text":"\u53ef\u9009\u7531\u4e91\u5e73\u53f0\u63d0\u4f9b\u7684 Kubernetes: \u5982 \u817e\u8baf TKE : \u5728\u547d\u4ee4\u884c\u7ec8\u7aef\u6267\u884c\u521d\u59cb\u5316: nhctl init -n nocalhost \u6216\u8005\u4f7f\u7528 Minikube: \u4ee5 docker \u6a21\u5f0f\u542f\u52a8 minikube: \u5728 minikube(docker driver) ( minikube start --driver=docker ) \u542f\u52a8\u5b8c\u6bd5, \u5728\u547d\u4ee4\u884c\u7ec8\u7aef\u6267\u884c\u521d\u59cb\u5316: nhctl init -n nocalhost -t nodeport -p 80 \u7b49\u5f85\u521d\u59cb\u5316\u8fc7\u7a0b: \u521d\u59cb\u5316\u5b8c\u6bd5\u540e: [MINIKUBE \u65b9\u6848\u6ce8\u610f]: \u4e3a\u4e86\u4fdd\u6301\u7aef\u53e3\u8f6c\u53d1\uff0c\u8bf7\u4e0d\u8981\u5173\u95ed\u4e0a\u8ff0 Terminal nhctl init \u547d\u4ee4\u884c\u53c2\u6570 --namespace: \u6307\u5b9a\u5b89\u88c5\u5728\u54ea\u4e2a\u96c6\u7fa4.(\u4f1a\u81ea\u52a8\u521b\u5efa\u4e0d\u5b58\u5728\u7684\u96c6\u7fa4) --port: \u6307\u5b9a Nocalhost Web \u76d1\u542c\u7684\u7aef\u53e3.(\u9ed8\u8ba4\u662f 80) --set: \u6307\u5b9a\u8986\u76d6 Nocalhost Helm Chart \u7684 value --type: \u6307\u5b9a Nocalhost Web \u7684 Service Type(nodeport or loadbalaner) --force: \u5f3a\u5236\u521d\u59cb\u5316\uff0c\u8bf7\u6ce8\u610f\u5b83\u5c06\u5220\u9664\u6240\u6709 Nocalhost \u7684\u65e7\u6570\u636e \u4f60\u53ef\u4ee5\u6839\u636e\u4f60\u7684\u96c6\u7fa4\u60c5\u51b5\uff0c\u914d\u7f6e\u4e0a\u8ff0 init \u53c2\u6570\u6765\u6267\u884c\u521d\u59cb\u5316\u8fc7\u7a0b.","title":"\u7b2c\u4e8c\u6b65: \u521d\u59cb\u5316\u96c6\u7fa4\u5e76\u4e14\u90e8\u7f72 Nocalhost Server"},{"location":"zh/getting-started/#nocalhost-vscode","text":"\u5728 VSCode \u4e2d\u8fdb\u5165\u63d2\u4ef6\u9875\u9762, \u5728\u5de6\u4fa7\u9762\u677f\u4e2d\u70b9\u51fb \"Config Server URL\" \u6309\u94ae: \u8f93\u5165\u4ece \u7b2c\u4e8c\u6b65 \u83b7\u5f97\u7684\u8bbf\u95ee\u5730\u5740, \u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f Minikube \uff0c\u90a3\u4e48\u53ef\u4ee5\u8f93\u5165\u56fa\u5b9a\u5730\u5740 http://127.0.0.1:31219 \uff0c\u6309\u4e0b\u56de\u8f66\u952e\u4fdd\u5b58. \u5206\u522b\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6309\u4e0b\u56de\u8f66\u952e\u4fdd\u5b58: \u7528\u6237\u540d: foo@nocalhost.dev \u5bc6\u7801: 123456 \u5728\u767b\u5f55\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u770b\u5230:","title":"\u7b2c\u4e09\u6b65: \u914d\u7f6e\u5e76\u767b\u9646 Nocalhost VSCode \u63d2\u4ef6"},{"location":"zh/getting-started/#bookinfo","text":"\u70b9\u51fb\u5de6\u4fa7\u9762\u677f\u4e0a\u7684\u5b89\u88c5\u56fe\u6807\uff0c\u5b89\u88c5\u5e94\u7528: bookinfo. \u70b9\u51fb\u4e4b\u540e\uff0cNocalhost \u4f1a\u5f00\u59cb\u6267\u884c\u5b89\u88c5\u8fc7\u7a0b. \u4f60\u53ef\u4ee5\u70b9\u51fb\u5237\u65b0\u56fe\u6807\u6765\u67e5\u770b\u5e94\u7528\u5b89\u88c5\u548c\u542f\u52a8\u8fc7\u7a0b\u4e2d\u7684\u72b6\u6001\u53d8\u5316\u3002 \u5728\u6240\u6709\u5fae\u670d\u52a1\u90fd\u542f\u52a8\u5b8c\u6bd5\u540e\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff1a \u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u8bbf\u95ee\u5b89\u88c5\u7684\u5e94\u7528\u7684 web \u9875\u9762\u4e86\uff1a http://127.0.0.1:39080/productpage","title":"\u7b2c\u56db\u6b65: \u5b89\u88c5\u793a\u4f8b\u5e94\u7528: bookinfo"},{"location":"zh/getting-started/#_2","text":"\u4f60\u53ef\u4ee5\u70b9\u51fb\u67d0\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u7684\u7eff\u8272\u9524\u5b50\u56fe\u6807\u6765\u628a\u5de5\u4f5c\u8d1f\u8f7d\u5207\u6362\u5230\u5f00\u53d1\u6a21\u5f0f. \u4f60\u9009\u62e9 \"Clone from Git repo\" \u5e76\u6307\u5b9a\u4e00\u4e2a\u672c\u5730\u5b58\u50a8\u76ee\u5f55\u540e\uff0cNocalhost \u4f1a\u628a\u6e90\u7801 clone \u4e0b\u6765. \u6e90\u4ee3\u7801\u68c0\u51fa\u540e, Nocalhost \u4f1a\u6253\u5f00\u4e00\u4e2a\u65b0 VSCode \u7a97\u53e3\uff0c\u5e76\u7ee7\u7eed\u5207\u6362\u5230\u5f00\u53d1\u6a21\u5f0f. \u5728\u5f00\u53d1\u6a21\u5f0f\u5207\u6362\uff08\u521d\u6b21\u4f7f\u7528\uff0c\u65f6\u95f4\u53ef\u80fd\u8f83\u957f\uff09\u5b8c\u6bd5\u540e\uff0c\u4f60\u4f1a\u770b\u5230: \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\uff0c\u5f00\u53d1\u5bb9\u5668\u9ed8\u8ba4\u6ca1\u6709\u542f\u52a8\u4e3b\u8fdb\u7a0b\uff0c\u6240\u4ee5\u4e0d\u4f1a\u54cd\u5e94\u7f51\u9875\u7aef\u7684\u8bf7\u6c42\uff0c\u6b64\u4e8b\u5982\u679c\u5237\u65b0\u9875\u9762\uff0c\u9875\u9762\u5c06\u51fa\u9519\u3002\u76f4\u5230\u4f60\u518d\u6b21\u542f\u52a8\u8fdb\u7a0b\u540e\uff0c\u9875\u9762\u624d\u4f1a\u6062\u590d\u3002 \u5982\u679c\u4f60\u5207\u6362\u5f00\u53d1\u6a21\u5f0f\u7684\u5de5\u4f5c\u8d1f\u8f7d\u662f productpage \u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u6267\u884c sh run.sh \u6765\u542f\u52a8 hot-reload \u6a21\u5f0f\u7684\u8fdb\u7a0b:","title":"\u7b2c\u4e94\u6b65: \u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f"},{"location":"zh/getting-started/#_3","text":"\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4fee\u6539\u4e00\u4e9b\u4ee3\u7801\uff0c\u5e76\u5237\u65b0\u9875\u9762\u770b\u6548\u679c\u3002 \u4f8b\u5982, \u5728\u6587\u4ef6 productpage.py \u7684 355 \u884c\u6dfb\u52a0 Hello Nocalhost! . \u522b\u5fd8\u4e86\u4fdd\u5b58\u6587\u4ef6. \u5237\u65b0\u7f51\u9875\uff0c\u5373\u53ef\u7acb\u5373\u770b\u5230\u6548\u679c\u3002 http://127.0.0.1:39080/productpage \ud83d\ude04","title":"\u7b2c\u516d\u6b65: \u6539\u52a8\u4e00\u4e9b\u4ee3\u7801\uff0c\u5e76\u67e5\u770b\u8fd0\u884c\u7ed3\u679c"},{"location":"zh/getting-started/#_4","text":"\u901a\u8fc7\u8fd9\u4e2a\u7b80\u5355\u7684\u57fa\u4e8e Nocalhost \u7684\u6559\u7a0b\uff0c\u4f60\u5df2\u7ecf\u4f53\u9a8c\u4e86\u4e91\u539f\u751f\u5f00\u53d1\u7684\u4fbf\u6377\u548c\u5f3a\u5927\u3002\u53ef\u4ee5\u5f00\u59cb\u5c1d\u8bd5\u5728\u771f\u5b9e\u7684\u9879\u76ee\u4e2d\u914d\u7f6e\u5e76\u4f7f\u7528 Nocalhost \u4e86\u3002 Nocalhost \u6b22\u8fce\u60a8\u7684\u610f\u89c1\u548c\u5efa\u8bae. GitHub Issues: https://github.com/nocalhost/nocalhost","title":"\u606d\u559c!"},{"location":"zh/Concepts/application/","text":"\u4ec0\u4e48\u662f Application Application \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u4f60\u60f3\u7528\u4e8e\u672c\u5730\u5f00\u53d1\u7684\u4e00\u7ec4 manifest \u6587\u4ef6\uff0c\u540c\u65f6\u652f\u6301 k8s manifest \u548c helm chart\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e9b manifest \u901a\u5e38\u5305\u542b\u4f60\u7684\u5e94\u7528\u6240\u4f9d\u8d56\u7684\u6240\u6709 k8s \u8d44\u6e90\uff0c\u5982\u679c\u53ef\u80fd\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u4fdd\u6301\u5b83\u7684\u6700\u5c0f\u5316\u3002 Application \u652f\u6301\u653e\u7f6e\u5728 git \u7684 k8s manifest \uff0c\u653e\u7f6e\u5728 git \u7684 helm chart \u548c\u76f4\u63a5\u653e\u7f6e\u5728 Helm Repo \u51e0\u79cd\u65b9\u5f0f\u3002 Application \u662f\u505a\u4ec0\u4e48\u7684 Application \u53ef\u4ee5\u7528\u4e8e\u521b\u5efa Space \uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528\u63d2\u4ef6\u6765\u76f4\u63a5\u4f7f\u7528\u5e76\u90e8\u7f72\u4f60\u7684\u5e94\u7528\uff0c \u63d2\u4ef6\u6b63\u662f\u57fa\u4e8e Space \u8fdb\u884c\u5e94\u7528\u90e8\u7f72\u7684 \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4f60\u62e5\u6709\u4e00\u4e2a Space \uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u5728\u62e5\u6709\u63d2\u4ef6\u7684 IDE \u4e0a\u5f00\u59cb\u4f60\u7684\u5f00\u53d1\u4e86\u3002 \u4e0d\u7528\u62c5\u5fc3\uff0c\u4f60\u53ef\u4ee5\u6682\u65f6\u4e0d\u9700\u8981\u7406\u89e3 Space \u662f\u4ec0\u4e48\u3002\u56de\u60f3\u4e00\u4e0b\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528 kubeconfig + manifest \u6587\u4ef6\u6765\u542f\u52a8\u6211\u4eec\u5e94\u7528\u7684\uff0c\u8fd9\u6837\u5c31\u5f88\u597d\u7406\u89e3 Application \u548c Space \u7684\u5173\u7cfb\u4e86\u3002 Application \u4e5f\u662f\u8fd9\u6837\u88ab\u4f7f\u7528\u7684\uff0c Space \u5176\u5b9e\u53ef\u4ee5\u8fd1\u4f3c\u770b\u4f5c Application + kubeconfig \uff1a Application \u4e0e Manifest \u5bf9\u4e8e Helm Manifest \u7684\u652f\u6301 nocalhost \u652f\u6301\u4f7f\u7528 helm\uff0c \u65e0\u9700\u5bf9 chart \u505a\u4efb\u4f55\u6539\u9020 . 1. \u5982\u679c\u4f60\u5df2\u7ecf\u62e5\u6709\u5e76\u4e14\u6b63\u5728\u4f7f\u7528 Helm Chart\uff1a helm install helloworld /chart/dir/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig \u53ea\u9700\u8981\u82b1\u8d39\u4e00\u70b9\u65f6\u95f4\uff0c\u5c06\u4f60\u7684 Helm Chart \u653e\u7f6e\u5728\u4efb\u610f\u4e00\u4e2a\u4f60\u6709\u6743\u9650\u8bbf\u95ee git \u4ed3\u5e93\u5373\u53ef\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528 git clone \u547d\u4ee4\u6765\u83b7\u53d6\u6700\u65b0\u7684 Application \u4fe1\u606f\uff0c\u4f8b\u5982\uff1a https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git Somefile.py AClass.java README.MD ... mychart/dir/ Chart.yaml values.yaml charts/ templates/ ... \u5bf9\u4e8e\u8fd9\u4e2a\u4ed3\u5e93\u6765\u8bf4\uff0c\u6211\u4eec\u5c06 Helm chart \u653e\u7f6e\u5728\u4e86 \u76f8\u5bf9\u4e8e\u6839\u76ee\u5f55 \u7684 mychart/dir/ \u6587\u4ef6\u4e0b\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u8fdb\u884c\u4f53\u9a8c\uff1a nhctl install helloworld \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t helmGit \\ -n k8sFooNamespace \\ --resource-path charts/bookinfo \\ --kubeconfig ~/.kube/barconfig 2. \u5982\u679c\u62e5\u6709\u81ea\u5df1\u7684 Helm Repo\uff1a helm install helloworld \\ mychart \\ -- repo http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig \u4f60\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\uff1a nhctl install helloworld \\ --helm-chart-name mychart \\ --helm-repo-url http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig \u5bf9\u4e8e Kubernetes Manifest \u7684\u652f\u6301 nocalhost \u4e5f\u53ef\u4ee5\u65e0\u7f1d\u652f\u6301 Kubernetes Manifest \uff0c\u540c\u6837\u65e0\u9700\u4f60\u5bf9\u914d\u7f6e\u505a\u4efb\u4f55\u6539\u9020\uff0c\u4e0d\u8fc7\u6211\u4eec\u9700\u8981\u4f60\u5c06\u5176\u4e0a\u4f20\u5230\u4efb\u610f\u4e00\u4e2a git \u4ed3\u5e93\uff1a \u5047\u8bbe\u4f60\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u4ed3\u5e93\uff0c\u5b83\u7684\u5730\u5740\u4e3a https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \uff0c\u91cc\u9762\u5b58\u653e\u7740\u8bb8\u591a Kubernetes Manifest \uff1a README.MD something.java \u2026 foo/bar/k8s/manifests/ foo.yaml pre-install-cm.yaml \u2026 what/ever/ inner.yaml \u2026 support/all/dir/inside/ bar.yaml \u2026 \u4f60\u53ea\u60f3\u5e94\u7528\u76f8\u5bf9\u6839\u76ee\u5f55 what/ever/ \u4e0e support/all/dir/inside/ \u4e0b\u7684\u6587\u4ef6\uff0c\u90a3\u4e48\u4f7f\u7528\u547d\u4ee4\uff1a nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path what/ever/ \\ --resource-path support/all/dir/inside/ \\ --kubeconfig ~/.kube/barconfig \u5982\u679c\u4f60\u60f3\u5e94\u7528\u6240\u6709\u6587\u4ef6\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\uff1a nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path . \\ --kubeconfig ~/.kube/barconfig Nocalhost \u5bf9\u539f\u751f Application \u7684\u589e\u5f3a Nocalhost \u5e76\u4e0d\u76f4\u63a5\u5bf9\u7528\u6237\u7684\u914d\u7f6e\u8fdb\u884c\u4fb5\u5165\uff0c\u5982\u679c\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e9b\u589e\u5f3a\u529f\u80fd\uff0c\u4f8b\u5982 Pre-Install \u3001\u4f8b\u5982\u4f9d\u8d56\u7ba1\u7406\u7b49\u3002\u5728\u4f60\u7684\u4ed3\u5e93\u4e0b\u65b0\u589e .nocalhost/ \u6587\u4ef6\u5939\uff0c\u5e76\u65b0\u589e config.yaml \u6216 config.yaml.helm \uff08\u9488\u5bf9 helm \u7c7b\u578b\u7684 git \u4ed3\u5e93\uff09\u3002 Pre-Install \u6211\u4eec\u5141\u8bb8\u7528\u6237\u5728\u771f\u6b63 install \u5e94\u7528\u4e4b\u524d\uff0c\u8fdb\u884c\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\u3002\u4ee5 bookinfo \u4e3a\u4f8b\uff0c\u5728\u8fdb\u884c\u5e94\u7528\u7684 Install \u4e4b\u524d\uff0c\u6211\u4eec\u4f1a\u5bf9\u8fd9\u51e0\u4e2a\u914d\u7f6e\u7684 yaml \u6587\u4ef6\u8fdb\u884c apply\uff0c onPreInstall: - path: manifest/templates/pre-install/print-num-job-01.yaml weight: \"1\" - path: manifest/templates/pre-install/print-num-job-02.yaml weight: \"-5\" \u4f9d\u8d56\u7ba1\u7406 \u4f8b\u5982\u4ee5\u4e0b\u8fd9\u4e2a\u914d\u7f6e\uff0c\u4ee3\u8868 reviews \u8fd9\u4e2a deployment \uff0c\u9700\u8981\u7b49\u5f85 productpage \u7684 pod \u53ef\u7528\u624d\u4f1a\u8fdb\u884c\u90e8\u7f72\u3002 services: - name: reviews serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-reviews.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest workDir: /home/nocalhost-dev syncDirs: - ./ dependPodsLabelSelector: - \"productpage\" \u5f00\u53d1\u955c\u50cf\u914d\u7f6e \u4e0a\u8ff0\u914d\u7f6e\u4e2d\uff0c devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest \uff0c\u4ee3\u8868\u4f60\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u65f6\uff0c\u4f7f\u7528\u6b64\u955c\u50cf\u4f5c\u4e3a\u5bb9\u5668\uff0c\u66ff\u4ee3\u539f\u955c\u50cf\u8fdb\u884c\u5f00\u53d1\u3002 \u66f4\u591a \u5982\u679c\u4f60\u60f3\u4e86\u89e3 .nocalhost/ \u7684\u66f4\u591a\u914d\u7f6e\u4fe1\u606f\uff0c\u70b9\u51fb\uff1aTODO\u3002 Application \u7684\u6700\u4f73\u5b9e\u8df5 \u901a\u5e38\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528 Nocalhost-Server + Nocalhost-Plug-In \u6765\u83b7\u5f97\u6700\u4f73\u5b9e\u8df5\uff0c\u6211\u4eec\u53cd\u590d\u5728\u5f3a\u8c03\u8fd9\u4e00\u70b9\u3002\u901a\u5e38\uff0c\u6211\u4eec\u5e76\u4e0d\u63a8\u8350\u76f4\u63a5\u4f7f\u7528 nhctl \u6765\u76f4\u63a5\u8fdb\u884c\u5e94\u7528\u7684\u90e8\u7f72\u3001\u5f00\u53d1\u7b49\u3002\u867d\u7136\u4e0a\u9762\u7684\u5f88\u591a\u793a\u4f8b\u90fd\u76f4\u63a5\u4f7f\u7528 nhctl \u6765\u8bf4\u660e\u3002 \u7528\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e3a\u4f8b\uff0c\u76f4\u63a5\u8fdb\u5165 Nocalhost-Web \u6765\u8fdb\u884c\u521b\u5efa\u3002\u8fdb\u5165\u4e3b\u9875\u540e\uff0c\u5207\u6362\u5230 Applications \u8fd9\u4e00\u680f\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u8fdb\u884c\u521b\u5efa\uff1a \u652f\u6301\u524d\u9762\u5206\u522b\u63d0\u5230\u7684\u4e09\u79cd\u5f62\u5f0f\uff0c\u8fd9\u91cc\u4ee5 kubernetes manifest \u4e3a\u4f8b\uff1a Advance \u8fd9\u91cc\u4f1a\u8bf4\u660e\u4e00\u4e9b Application \u4e00\u4e9b\u989d\u5916\u7684\u7279\u6027\u6216\u8005\u8bbe\u8ba1\uff0c\u8fd9\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u4f1a\u6709\u52a9\u4e8e\u4f60\u66f4\u597d\u7684\u4f7f\u7528 Nocalhost\u3002 Application Name nocalhost \u4f7f\u7528\u552f\u4e00\u7684 Application Name \u6765\u533a\u5206\u4e0d\u540c\u7684 Application\u3002\u6ce8\u610f\uff0c\u5373\u4f7f\u4f60\u4f7f\u7528\u4e0d\u540c\u7684 Nocalhost-Server \uff08\u4f8b\u5982\u4f60\u90e8\u7f72\u4e86\u4e24\u5957\u4ee5\u4e0a\u7684 Nocalhost-Server \uff09\uff0c\u6211\u4eec\u4e5f\u4e0d\u652f\u6301\u76f8\u540c\u7684 Application Name \u5728\u540c\u4e00\u4e2a\u5f00\u53d1\u673a\u5668\u4e0a\u4f7f\u7528\u3002 Nocalhost-Server \u4e2d\u7684 Application \u4e0e ~/.nh \u4e0b\u7684 Application \u6ce8\u610f\uff0c\u5982\u679c\u4f60\u7ec6\u5fc3\u7684\u8bdd\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e0d\u6b62\u662f\u5728 Nocalhost-Server \u4e2d\uff0c\u6211\u4eec\u540c\u6837\u5b58\u50a8\u4e86 Application \u7684\u4fe1\u606f\u5728\u672c\u5730 ~/.nh \u6587\u4ef6\u5939\uff0c\u8fd9\u4e24\u8005\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u6beb\u65e0\u5173\u8054\u3002\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u672c\u5730\u662f\u8fdb\u884c install \u64cd\u4f5c\u65f6\u7684\u4e00\u4e2a\u624b\u52a8\u6307\u5b9a\u6216\u4ece Nocalhost-Server \u4e2d\u83b7\u53d6\u7684\u4e00\u4e2a\u526f\u672c\u5feb\u7167\u3002 Application \u8fd0\u884c\u7684\u72b6\u6001 (\u4e5f\u5c31\u662f\u662f\u5426\u5904\u4e8e install ) \u662f**\u7531\u672c\u5730\u8fdb\u884c\u7ba1\u7406\u548c\u5b58\u50a8\u7684**\u3002 Nocalhost-Server \u4ec5\u5b58\u50a8 Application \u7684\u5143\u4fe1\u606f\u3002","title":"Application"},{"location":"zh/Concepts/application/#application","text":"Application \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u4f60\u60f3\u7528\u4e8e\u672c\u5730\u5f00\u53d1\u7684\u4e00\u7ec4 manifest \u6587\u4ef6\uff0c\u540c\u65f6\u652f\u6301 k8s manifest \u548c helm chart\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e9b manifest \u901a\u5e38\u5305\u542b\u4f60\u7684\u5e94\u7528\u6240\u4f9d\u8d56\u7684\u6240\u6709 k8s \u8d44\u6e90\uff0c\u5982\u679c\u53ef\u80fd\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u4fdd\u6301\u5b83\u7684\u6700\u5c0f\u5316\u3002 Application \u652f\u6301\u653e\u7f6e\u5728 git \u7684 k8s manifest \uff0c\u653e\u7f6e\u5728 git \u7684 helm chart \u548c\u76f4\u63a5\u653e\u7f6e\u5728 Helm Repo \u51e0\u79cd\u65b9\u5f0f\u3002","title":"\u4ec0\u4e48\u662f Application"},{"location":"zh/Concepts/application/#application_1","text":"Application \u53ef\u4ee5\u7528\u4e8e\u521b\u5efa Space \uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528\u63d2\u4ef6\u6765\u76f4\u63a5\u4f7f\u7528\u5e76\u90e8\u7f72\u4f60\u7684\u5e94\u7528\uff0c \u63d2\u4ef6\u6b63\u662f\u57fa\u4e8e Space \u8fdb\u884c\u5e94\u7528\u90e8\u7f72\u7684 \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4f60\u62e5\u6709\u4e00\u4e2a Space \uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u5728\u62e5\u6709\u63d2\u4ef6\u7684 IDE \u4e0a\u5f00\u59cb\u4f60\u7684\u5f00\u53d1\u4e86\u3002 \u4e0d\u7528\u62c5\u5fc3\uff0c\u4f60\u53ef\u4ee5\u6682\u65f6\u4e0d\u9700\u8981\u7406\u89e3 Space \u662f\u4ec0\u4e48\u3002\u56de\u60f3\u4e00\u4e0b\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528 kubeconfig + manifest \u6587\u4ef6\u6765\u542f\u52a8\u6211\u4eec\u5e94\u7528\u7684\uff0c\u8fd9\u6837\u5c31\u5f88\u597d\u7406\u89e3 Application \u548c Space \u7684\u5173\u7cfb\u4e86\u3002 Application \u4e5f\u662f\u8fd9\u6837\u88ab\u4f7f\u7528\u7684\uff0c Space \u5176\u5b9e\u53ef\u4ee5\u8fd1\u4f3c\u770b\u4f5c Application + kubeconfig \uff1a","title":"Application \u662f\u505a\u4ec0\u4e48\u7684"},{"location":"zh/Concepts/application/#application-manifest","text":"","title":"Application \u4e0e Manifest"},{"location":"zh/Concepts/application/#helm-manifest","text":"nocalhost \u652f\u6301\u4f7f\u7528 helm\uff0c \u65e0\u9700\u5bf9 chart \u505a\u4efb\u4f55\u6539\u9020 .","title":"\u5bf9\u4e8e Helm Manifest \u7684\u652f\u6301"},{"location":"zh/Concepts/application/#1-helm-chart","text":"helm install helloworld /chart/dir/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig \u53ea\u9700\u8981\u82b1\u8d39\u4e00\u70b9\u65f6\u95f4\uff0c\u5c06\u4f60\u7684 Helm Chart \u653e\u7f6e\u5728\u4efb\u610f\u4e00\u4e2a\u4f60\u6709\u6743\u9650\u8bbf\u95ee git \u4ed3\u5e93\u5373\u53ef\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528 git clone \u547d\u4ee4\u6765\u83b7\u53d6\u6700\u65b0\u7684 Application \u4fe1\u606f\uff0c\u4f8b\u5982\uff1a https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git Somefile.py AClass.java README.MD ... mychart/dir/ Chart.yaml values.yaml charts/ templates/ ... \u5bf9\u4e8e\u8fd9\u4e2a\u4ed3\u5e93\u6765\u8bf4\uff0c\u6211\u4eec\u5c06 Helm chart \u653e\u7f6e\u5728\u4e86 \u76f8\u5bf9\u4e8e\u6839\u76ee\u5f55 \u7684 mychart/dir/ \u6587\u4ef6\u4e0b\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u8fdb\u884c\u4f53\u9a8c\uff1a nhctl install helloworld \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t helmGit \\ -n k8sFooNamespace \\ --resource-path charts/bookinfo \\ --kubeconfig ~/.kube/barconfig","title":"1. \u5982\u679c\u4f60\u5df2\u7ecf\u62e5\u6709\u5e76\u4e14\u6b63\u5728\u4f7f\u7528 Helm Chart\uff1a"},{"location":"zh/Concepts/application/#2-helm-repo","text":"helm install helloworld \\ mychart \\ -- repo http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig \u4f60\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\uff1a nhctl install helloworld \\ --helm-chart-name mychart \\ --helm-repo-url http://mychart/charts/ \\ -n fooNamespace \\ --kubeconfig ~/.kube/barconfig","title":"2. \u5982\u679c\u62e5\u6709\u81ea\u5df1\u7684 Helm Repo\uff1a"},{"location":"zh/Concepts/application/#kubernetes-manifest","text":"nocalhost \u4e5f\u53ef\u4ee5\u65e0\u7f1d\u652f\u6301 Kubernetes Manifest \uff0c\u540c\u6837\u65e0\u9700\u4f60\u5bf9\u914d\u7f6e\u505a\u4efb\u4f55\u6539\u9020\uff0c\u4e0d\u8fc7\u6211\u4eec\u9700\u8981\u4f60\u5c06\u5176\u4e0a\u4f20\u5230\u4efb\u610f\u4e00\u4e2a git \u4ed3\u5e93\uff1a \u5047\u8bbe\u4f60\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u4ed3\u5e93\uff0c\u5b83\u7684\u5730\u5740\u4e3a https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \uff0c\u91cc\u9762\u5b58\u653e\u7740\u8bb8\u591a Kubernetes Manifest \uff1a README.MD something.java \u2026 foo/bar/k8s/manifests/ foo.yaml pre-install-cm.yaml \u2026 what/ever/ inner.yaml \u2026 support/all/dir/inside/ bar.yaml \u2026 \u4f60\u53ea\u60f3\u5e94\u7528\u76f8\u5bf9\u6839\u76ee\u5f55 what/ever/ \u4e0e support/all/dir/inside/ \u4e0b\u7684\u6587\u4ef6\uff0c\u90a3\u4e48\u4f7f\u7528\u547d\u4ee4\uff1a nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path what/ever/ \\ --resource-path support/all/dir/inside/ \\ --kubeconfig ~/.kube/barconfig \u5982\u679c\u4f60\u60f3\u5e94\u7528\u6240\u6709\u6587\u4ef6\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\uff1a nhctl install applicationNameFooBar \\ -u https://[gihub, Gitlab, etc... whateverRepo]/foo/bar/hellowrold.git \\ -t manifest \\ -n k8sFooNamespace \\ --resource-path . \\ --kubeconfig ~/.kube/barconfig","title":"\u5bf9\u4e8e Kubernetes Manifest \u7684\u652f\u6301"},{"location":"zh/Concepts/application/#nocalhost-application","text":"Nocalhost \u5e76\u4e0d\u76f4\u63a5\u5bf9\u7528\u6237\u7684\u914d\u7f6e\u8fdb\u884c\u4fb5\u5165\uff0c\u5982\u679c\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e9b\u589e\u5f3a\u529f\u80fd\uff0c\u4f8b\u5982 Pre-Install \u3001\u4f8b\u5982\u4f9d\u8d56\u7ba1\u7406\u7b49\u3002\u5728\u4f60\u7684\u4ed3\u5e93\u4e0b\u65b0\u589e .nocalhost/ \u6587\u4ef6\u5939\uff0c\u5e76\u65b0\u589e config.yaml \u6216 config.yaml.helm \uff08\u9488\u5bf9 helm \u7c7b\u578b\u7684 git \u4ed3\u5e93\uff09\u3002","title":"Nocalhost \u5bf9\u539f\u751f Application \u7684\u589e\u5f3a"},{"location":"zh/Concepts/application/#pre-install","text":"\u6211\u4eec\u5141\u8bb8\u7528\u6237\u5728\u771f\u6b63 install \u5e94\u7528\u4e4b\u524d\uff0c\u8fdb\u884c\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\u3002\u4ee5 bookinfo \u4e3a\u4f8b\uff0c\u5728\u8fdb\u884c\u5e94\u7528\u7684 Install \u4e4b\u524d\uff0c\u6211\u4eec\u4f1a\u5bf9\u8fd9\u51e0\u4e2a\u914d\u7f6e\u7684 yaml \u6587\u4ef6\u8fdb\u884c apply\uff0c onPreInstall: - path: manifest/templates/pre-install/print-num-job-01.yaml weight: \"1\" - path: manifest/templates/pre-install/print-num-job-02.yaml weight: \"-5\"","title":"Pre-Install"},{"location":"zh/Concepts/application/#_1","text":"\u4f8b\u5982\u4ee5\u4e0b\u8fd9\u4e2a\u914d\u7f6e\uff0c\u4ee3\u8868 reviews \u8fd9\u4e2a deployment \uff0c\u9700\u8981\u7b49\u5f85 productpage \u7684 pod \u53ef\u7528\u624d\u4f1a\u8fdb\u884c\u90e8\u7f72\u3002 services: - name: reviews serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-reviews.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest workDir: /home/nocalhost-dev syncDirs: - ./ dependPodsLabelSelector: - \"productpage\"","title":"\u4f9d\u8d56\u7ba1\u7406"},{"location":"zh/Concepts/application/#_2","text":"\u4e0a\u8ff0\u914d\u7f6e\u4e2d\uff0c devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest \uff0c\u4ee3\u8868\u4f60\u5728\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u65f6\uff0c\u4f7f\u7528\u6b64\u955c\u50cf\u4f5c\u4e3a\u5bb9\u5668\uff0c\u66ff\u4ee3\u539f\u955c\u50cf\u8fdb\u884c\u5f00\u53d1\u3002","title":"\u5f00\u53d1\u955c\u50cf\u914d\u7f6e"},{"location":"zh/Concepts/application/#_3","text":"\u5982\u679c\u4f60\u60f3\u4e86\u89e3 .nocalhost/ \u7684\u66f4\u591a\u914d\u7f6e\u4fe1\u606f\uff0c\u70b9\u51fb\uff1aTODO\u3002","title":"\u66f4\u591a"},{"location":"zh/Concepts/application/#application_2","text":"\u901a\u5e38\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528 Nocalhost-Server + Nocalhost-Plug-In \u6765\u83b7\u5f97\u6700\u4f73\u5b9e\u8df5\uff0c\u6211\u4eec\u53cd\u590d\u5728\u5f3a\u8c03\u8fd9\u4e00\u70b9\u3002\u901a\u5e38\uff0c\u6211\u4eec\u5e76\u4e0d\u63a8\u8350\u76f4\u63a5\u4f7f\u7528 nhctl \u6765\u76f4\u63a5\u8fdb\u884c\u5e94\u7528\u7684\u90e8\u7f72\u3001\u5f00\u53d1\u7b49\u3002\u867d\u7136\u4e0a\u9762\u7684\u5f88\u591a\u793a\u4f8b\u90fd\u76f4\u63a5\u4f7f\u7528 nhctl \u6765\u8bf4\u660e\u3002 \u7528\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e3a\u4f8b\uff0c\u76f4\u63a5\u8fdb\u5165 Nocalhost-Web \u6765\u8fdb\u884c\u521b\u5efa\u3002\u8fdb\u5165\u4e3b\u9875\u540e\uff0c\u5207\u6362\u5230 Applications \u8fd9\u4e00\u680f\uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u8fdb\u884c\u521b\u5efa\uff1a \u652f\u6301\u524d\u9762\u5206\u522b\u63d0\u5230\u7684\u4e09\u79cd\u5f62\u5f0f\uff0c\u8fd9\u91cc\u4ee5 kubernetes manifest \u4e3a\u4f8b\uff1a","title":"Application \u7684\u6700\u4f73\u5b9e\u8df5"},{"location":"zh/Concepts/application/#advance","text":"\u8fd9\u91cc\u4f1a\u8bf4\u660e\u4e00\u4e9b Application \u4e00\u4e9b\u989d\u5916\u7684\u7279\u6027\u6216\u8005\u8bbe\u8ba1\uff0c\u8fd9\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u4f1a\u6709\u52a9\u4e8e\u4f60\u66f4\u597d\u7684\u4f7f\u7528 Nocalhost\u3002","title":"Advance"},{"location":"zh/Concepts/application/#application-name","text":"nocalhost \u4f7f\u7528\u552f\u4e00\u7684 Application Name \u6765\u533a\u5206\u4e0d\u540c\u7684 Application\u3002\u6ce8\u610f\uff0c\u5373\u4f7f\u4f60\u4f7f\u7528\u4e0d\u540c\u7684 Nocalhost-Server \uff08\u4f8b\u5982\u4f60\u90e8\u7f72\u4e86\u4e24\u5957\u4ee5\u4e0a\u7684 Nocalhost-Server \uff09\uff0c\u6211\u4eec\u4e5f\u4e0d\u652f\u6301\u76f8\u540c\u7684 Application Name \u5728\u540c\u4e00\u4e2a\u5f00\u53d1\u673a\u5668\u4e0a\u4f7f\u7528\u3002","title":"Application Name"},{"location":"zh/Concepts/application/#nocalhost-server-application-nh-application","text":"\u6ce8\u610f\uff0c\u5982\u679c\u4f60\u7ec6\u5fc3\u7684\u8bdd\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e0d\u6b62\u662f\u5728 Nocalhost-Server \u4e2d\uff0c\u6211\u4eec\u540c\u6837\u5b58\u50a8\u4e86 Application \u7684\u4fe1\u606f\u5728\u672c\u5730 ~/.nh \u6587\u4ef6\u5939\uff0c\u8fd9\u4e24\u8005\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u6beb\u65e0\u5173\u8054\u3002\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u672c\u5730\u662f\u8fdb\u884c install \u64cd\u4f5c\u65f6\u7684\u4e00\u4e2a\u624b\u52a8\u6307\u5b9a\u6216\u4ece Nocalhost-Server \u4e2d\u83b7\u53d6\u7684\u4e00\u4e2a\u526f\u672c\u5feb\u7167\u3002 Application \u8fd0\u884c\u7684\u72b6\u6001 (\u4e5f\u5c31\u662f\u662f\u5426\u5904\u4e8e install ) \u662f**\u7531\u672c\u5730\u8fdb\u884c\u7ba1\u7406\u548c\u5b58\u50a8\u7684**\u3002 Nocalhost-Server \u4ec5\u5b58\u50a8 Application \u7684\u5143\u4fe1\u606f\u3002","title":"Nocalhost-Server \u4e2d\u7684 Application \u4e0e ~/.nh \u4e0b\u7684 Application"},{"location":"zh/Concepts/cluster/","text":"\u4ec0\u4e48\u662f Cluster Cluster \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u901a\u5e38\u5bf9\u5e94\u7740\u4e00\u4e2a k8s \u96c6\u7fa4\uff0c\u5b83\u9700\u8981\u7ef4\u6301\u4e00\u4efd\u62e5\u6709\u8fd9\u4e2a\u96c6\u7fa4 Cluster-Admin \u6743\u9650\u7684 kubeConfig \u3002 Nocalhost \u652f\u6301\u540c\u65f6\u7ba1\u7406\u591a\u4e2a Cluster \uff0c\u8fd9\u4e9b\u96c6\u7fa4\u53ef\u4ee5\u662f GKE \u3001 minikube \u3001 microK8s \u7b49\u7b49\u3002 Cluster \u662f\u505a\u4ec0\u4e48\u7684 Cluster \u540c\u6837\u4e5f\u627f\u62c5\u7740 kubeconfig \u7684\u529f\u80fd\uff0c\u4f8b\u5982\uff0c\u5728\u4f60 install Application \u65f6\u521b\u5efa namespace \u3001 apply \u4f60\u7684 yaml \u8d44\u6e90\u3001\u5b89\u88c5 helm \u8d44\u6e90\u7b49\u3002 Cluster \u4e00\u822c\u4e0e Space \u914d\u5408\u4f7f\u7528\uff0c\u6211\u4eec\u9700\u8981\u5728 Nocalhost-Web \u8fdb\u884c Cluster \u7684\u914d\u7f6e\u3002\u5728\u5b9e\u9645\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u7528\u6237\u4e0d\u9700\u8981\u76f4\u63a5\u63a5\u89e6 Cluster \u8fd9\u4e2a\u6982\u5ff5\uff0c\u800c\u7528\u6237\u5728 Space \u4e0b\u7684\u64cd\u4f5c\u5b9e\u9645\u4e0a\u90fd\u501f\u52a9\u4e86 Cluster \u7684\u80fd\u529b\u3002 \u5982\u4f55\u7ba1\u7406 Cluster \u9996\u5148\u8fdb\u5165 Nocalhost-Web \uff0c\u5207\u6362\u5230 Clusters \u8fd9\u4e00\u680f\uff0c\u8fd9\u91cc\u4f1a\u5c55\u793a\u6240\u6709\u7684 Cluster \u5217\u8868\u3002 \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 CREATE \u8fdb\u884c Cluster \u7684\u521b\u5efa\u3002\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u786e\u8ba4\u6b64 kubeconfig \u662f\u5426\u62e5\u6709\u6240\u6709\u6743\u9650\u5417\uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u786e\u8ba4\uff1a > kubectl auth can-i '*' '*' yes","title":"Cluster"},{"location":"zh/Concepts/cluster/#cluster","text":"Cluster \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u901a\u5e38\u5bf9\u5e94\u7740\u4e00\u4e2a k8s \u96c6\u7fa4\uff0c\u5b83\u9700\u8981\u7ef4\u6301\u4e00\u4efd\u62e5\u6709\u8fd9\u4e2a\u96c6\u7fa4 Cluster-Admin \u6743\u9650\u7684 kubeConfig \u3002 Nocalhost \u652f\u6301\u540c\u65f6\u7ba1\u7406\u591a\u4e2a Cluster \uff0c\u8fd9\u4e9b\u96c6\u7fa4\u53ef\u4ee5\u662f GKE \u3001 minikube \u3001 microK8s \u7b49\u7b49\u3002","title":"\u4ec0\u4e48\u662f Cluster"},{"location":"zh/Concepts/cluster/#cluster_1","text":"Cluster \u540c\u6837\u4e5f\u627f\u62c5\u7740 kubeconfig \u7684\u529f\u80fd\uff0c\u4f8b\u5982\uff0c\u5728\u4f60 install Application \u65f6\u521b\u5efa namespace \u3001 apply \u4f60\u7684 yaml \u8d44\u6e90\u3001\u5b89\u88c5 helm \u8d44\u6e90\u7b49\u3002 Cluster \u4e00\u822c\u4e0e Space \u914d\u5408\u4f7f\u7528\uff0c\u6211\u4eec\u9700\u8981\u5728 Nocalhost-Web \u8fdb\u884c Cluster \u7684\u914d\u7f6e\u3002\u5728\u5b9e\u9645\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u7528\u6237\u4e0d\u9700\u8981\u76f4\u63a5\u63a5\u89e6 Cluster \u8fd9\u4e2a\u6982\u5ff5\uff0c\u800c\u7528\u6237\u5728 Space \u4e0b\u7684\u64cd\u4f5c\u5b9e\u9645\u4e0a\u90fd\u501f\u52a9\u4e86 Cluster \u7684\u80fd\u529b\u3002","title":"Cluster \u662f\u505a\u4ec0\u4e48\u7684"},{"location":"zh/Concepts/cluster/#cluster_2","text":"\u9996\u5148\u8fdb\u5165 Nocalhost-Web \uff0c\u5207\u6362\u5230 Clusters \u8fd9\u4e00\u680f\uff0c\u8fd9\u91cc\u4f1a\u5c55\u793a\u6240\u6709\u7684 Cluster \u5217\u8868\u3002 \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 CREATE \u8fdb\u884c Cluster \u7684\u521b\u5efa\u3002\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u786e\u8ba4\u6b64 kubeconfig \u662f\u5426\u62e5\u6709\u6240\u6709\u6743\u9650\u5417\uff0c\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u786e\u8ba4\uff1a > kubectl auth can-i '*' '*' yes","title":"\u5982\u4f55\u7ba1\u7406 Cluster"},{"location":"zh/Concepts/devcontainer/","text":"\u4ec0\u4e48\u662f DevContainer DevContainer \u662f\u4e00\u4e2a\u7528\u6237\u652f\u6491\u5f00\u53d1\u3001\u8c03\u8bd5\u67d0\u4e2a\u7279\u5b9a\u5fae\u670d\u52a1\u7ec4\u4ef6\u7684\u57fa\u7840\u73af\u5883\uff0c\u6b64\u73af\u5883\u88ab\u5c01\u88c5\u6210\u4e00\u4e2a\u5bb9\u5668\uff0c\u5185\u5e38\u542b\u6709\u5f00\u53d1\u8be5\u5fae\u670d\u52a1\u7ec4\u4ef6\u7684\u5168\u5957 SDK\uff0c\u5f00\u53d1\u8c03\u8bd5\u5de5\u5177\uff0c\u4ee5\u53ca\u5176\u4ed6\u8f85\u52a9\u5de5\u5177\u3002 \u5728\u670d\u52a1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u88ab\u5207\u6362\u5230 DevMode \u7684\u65f6\u5019\uff0cNocalhost \u4f1a\u4f7f\u7528 DevContainer \u66ff\u6362\u539f\u672c\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5bb9\u5668\u3002 \u5982\u4f55\u914d\u7f6e DevContainer \u5728 Nocalhost \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u7ed9\u5bf9\u5e94\u7684 service \u6dfb\u52a0 devContainerImage \u5b57\u6bb5\u5373\u53ef\u3002 \u5728 Nocalhost \u63a7\u5236 Pod \u8fdb\u5165 DevMode \u7684\u65f6\u5019\uff0c\u8bbe\u7f6e\u7684 devContainerImage \u4f1a\u88ab\u542f\u52a8\u6210\u4e3a DevContainer \u66ff\u4ee3\u539f\u672c\u7684\u5bb9\u5668\u3002\u4e4b\u540e\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 DevContainer \u4e2d\u6784\u5efa\uff0c\u8fd0\u884c\uff0c\u8c03\u8bd5\u81ea\u5df1\u7684\u7a0b\u5e8f\u4e86\u3002 Nocalhost \u4f1a\u5c06 DevContainer \u7684\u542f\u52a8\u547d\u4ee4\u8986\u76d6\u4e3a /bin/sh -c tail -f /dev/null \u4ee5\u786e\u4fdd DevContainer \u4e0d\u4f1a\u610f\u5916\u9000\u51fa\u3002\u5173\u4e8e DevMode \u4e0b\uff0cNocalhost \u505a\u7684\u5176\u4ed6\u53d8\u52a8\uff0c\u8bf7\u67e5\u770b\uff1a DevMode Nocalhost \u63d0\u4f9b\u7684 DevContainer Image https://github.com/nocalhost/dev-container \u5173\u4e8e DevContainer Image \u5236\u4f5c\u7684\u5efa\u8bae \u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55 Docker Image \u6765\u4f5c\u4e3a DevContainer Image\uff0c\u53ea\u8981\u4ed6\u5305\u542b\u57fa\u672c\u7684 shell (/bin/sh) \u5373\u53ef\u3002 \u4f46\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u4e3a\u7279\u5b9a\u6280\u672f\u6808\u7684\u670d\u52a1\u63d0\u4f9b\u4e13\u5c5e\u7684 DevContainer Image\u3002\u4e00\u4e2a\u597d\u7684 DevContainer Image \u5e94\u8be5\uff1a \u63d0\u4f9b\u6613\u7528\u7684 shell\uff0c\u5982\uff1abash,zsh \u7b49 \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u57fa\u7840 SDK\uff0c\u5982 JDK \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u5de5\u5177\u94fe\uff0c\u5982 git\uff0cmaven\uff0cyarn\uff0cmake \u7b49 \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u7b2c\u4e09\u65b9\u4f9d\u8d56\u5305\u6216\u8005\u81ea\u52a8\u4e0b\u8f7d\u914d\u7f6e\uff0c\u5982\u914d\u7f6e Maven \u955c\u50cf\u6e90 \u63d0\u4f9b\u5f00\u53d1\u8fc7\u7a0b\u9700\u8981\u7684\u5176\u4ed6\u8c03\u8bd5\u5de5\u5177\uff0c\u5982 gdb\uff0ccurl\uff0ctcpdump\uff0cmysql-client \u7b49 \u4e0d\u8981\u5305\u542b\u670d\u52a1\u7684\u6e90\u4ee3\u7801\uff08\u6e90\u4ee3\u7801\u5e94\u8be5\u901a\u8fc7\u6e90\u7801\u7ba1\u7406\u7cfb\u7edf\u68c0\u51fa\u5230\u672c\u5730\uff0c\u5e76\u540c\u6b65\u5230 DevContainer \u4e2d\u3002\uff09","title":"DevContainer"},{"location":"zh/Concepts/devcontainer/#devcontainer","text":"DevContainer \u662f\u4e00\u4e2a\u7528\u6237\u652f\u6491\u5f00\u53d1\u3001\u8c03\u8bd5\u67d0\u4e2a\u7279\u5b9a\u5fae\u670d\u52a1\u7ec4\u4ef6\u7684\u57fa\u7840\u73af\u5883\uff0c\u6b64\u73af\u5883\u88ab\u5c01\u88c5\u6210\u4e00\u4e2a\u5bb9\u5668\uff0c\u5185\u5e38\u542b\u6709\u5f00\u53d1\u8be5\u5fae\u670d\u52a1\u7ec4\u4ef6\u7684\u5168\u5957 SDK\uff0c\u5f00\u53d1\u8c03\u8bd5\u5de5\u5177\uff0c\u4ee5\u53ca\u5176\u4ed6\u8f85\u52a9\u5de5\u5177\u3002 \u5728\u670d\u52a1\u7684\u5de5\u4f5c\u8d1f\u8f7d\u88ab\u5207\u6362\u5230 DevMode \u7684\u65f6\u5019\uff0cNocalhost \u4f1a\u4f7f\u7528 DevContainer \u66ff\u6362\u539f\u672c\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5bb9\u5668\u3002","title":"\u4ec0\u4e48\u662f DevContainer"},{"location":"zh/Concepts/devcontainer/#devcontainer_1","text":"\u5728 Nocalhost \u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u7ed9\u5bf9\u5e94\u7684 service \u6dfb\u52a0 devContainerImage \u5b57\u6bb5\u5373\u53ef\u3002 \u5728 Nocalhost \u63a7\u5236 Pod \u8fdb\u5165 DevMode \u7684\u65f6\u5019\uff0c\u8bbe\u7f6e\u7684 devContainerImage \u4f1a\u88ab\u542f\u52a8\u6210\u4e3a DevContainer \u66ff\u4ee3\u539f\u672c\u7684\u5bb9\u5668\u3002\u4e4b\u540e\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 DevContainer \u4e2d\u6784\u5efa\uff0c\u8fd0\u884c\uff0c\u8c03\u8bd5\u81ea\u5df1\u7684\u7a0b\u5e8f\u4e86\u3002 Nocalhost \u4f1a\u5c06 DevContainer \u7684\u542f\u52a8\u547d\u4ee4\u8986\u76d6\u4e3a /bin/sh -c tail -f /dev/null \u4ee5\u786e\u4fdd DevContainer \u4e0d\u4f1a\u610f\u5916\u9000\u51fa\u3002\u5173\u4e8e DevMode \u4e0b\uff0cNocalhost \u505a\u7684\u5176\u4ed6\u53d8\u52a8\uff0c\u8bf7\u67e5\u770b\uff1a DevMode","title":"\u5982\u4f55\u914d\u7f6e DevContainer"},{"location":"zh/Concepts/devcontainer/#nocalhost-devcontainer-image","text":"https://github.com/nocalhost/dev-container","title":"Nocalhost \u63d0\u4f9b\u7684 DevContainer Image"},{"location":"zh/Concepts/devcontainer/#devcontainer-image","text":"\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55 Docker Image \u6765\u4f5c\u4e3a DevContainer Image\uff0c\u53ea\u8981\u4ed6\u5305\u542b\u57fa\u672c\u7684 shell (/bin/sh) \u5373\u53ef\u3002 \u4f46\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u4e3a\u7279\u5b9a\u6280\u672f\u6808\u7684\u670d\u52a1\u63d0\u4f9b\u4e13\u5c5e\u7684 DevContainer Image\u3002\u4e00\u4e2a\u597d\u7684 DevContainer Image \u5e94\u8be5\uff1a \u63d0\u4f9b\u6613\u7528\u7684 shell\uff0c\u5982\uff1abash,zsh \u7b49 \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u57fa\u7840 SDK\uff0c\u5982 JDK \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u5de5\u5177\u94fe\uff0c\u5982 git\uff0cmaven\uff0cyarn\uff0cmake \u7b49 \u63d0\u4f9b\u6784\u5efa\u6e90\u7801\u6240\u9700\u7684\u7b2c\u4e09\u65b9\u4f9d\u8d56\u5305\u6216\u8005\u81ea\u52a8\u4e0b\u8f7d\u914d\u7f6e\uff0c\u5982\u914d\u7f6e Maven \u955c\u50cf\u6e90 \u63d0\u4f9b\u5f00\u53d1\u8fc7\u7a0b\u9700\u8981\u7684\u5176\u4ed6\u8c03\u8bd5\u5de5\u5177\uff0c\u5982 gdb\uff0ccurl\uff0ctcpdump\uff0cmysql-client \u7b49 \u4e0d\u8981\u5305\u542b\u670d\u52a1\u7684\u6e90\u4ee3\u7801\uff08\u6e90\u4ee3\u7801\u5e94\u8be5\u901a\u8fc7\u6e90\u7801\u7ba1\u7406\u7cfb\u7edf\u68c0\u51fa\u5230\u672c\u5730\uff0c\u5e76\u540c\u6b65\u5230 DevContainer \u4e2d\u3002\uff09","title":"\u5173\u4e8e DevContainer Image \u5236\u4f5c\u7684\u5efa\u8bae"},{"location":"zh/Concepts/devmode/","text":"\u4ec0\u4e48\u662f DevMode DevMode \u662f\u6307\u5f00\u53d1\u8005\u5728\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5fae\u670d\u52a1\u5f00\u53d1\u65f6\uff0c\u5bf9\u5e94\u5fae\u670d\u52a1\u5de5\u4f5c\u8d1f\u8f7d\u7684\u4e00\u4e2a\u72b6\u6001\u3002\u5728\u6b64\u72b6\u6001\u4e0b\uff0c\u5de5\u4f5c\u8d1f\u8f7d\u4f1a\u88ab\u8f6c\u6210\u6210\u4e00\u79cd\u53ef\u65b9\u4fbf\u652f\u6301\u5f00\u53d1\u8005\u5f00\u53d1\u8c03\u8bd5\u7a0b\u5e8f\u7684\u6a21\u5f0f\u3002 TODO \u8865\u4e00\u4e2a\u914d\u56fe DevMode \u76f8\u6bd4\u4e8e\u975e DevMode \u6709\u4ec0\u4e48\u53d8\u5316\uff1f \u5f53\u524d Nocalhost \u57fa\u4e8e Kubernetes \u7684\u5f00\u53d1\u652f\u6301\u4e2d\uff0cDevMode \u7684\u4e3b\u8981\u53d8\u5316\u4e3a\u5982\u4e0b\uff1a \u5de5\u4f5c\u8d1f\u8f7d\u7684\u526f\u672c\u6570\u91cf\u4f1a\u88ab\u8c03\u6574\u4e3a 1\uff0c\u65b9\u4fbf\u5f00\u53d1 Pod \u7684\u5065\u5eb7\u68c0\u67e5\u63a2\u9488\u4f1a\u88ab\u7981\u7528\uff08\u65b9\u4fbf\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u5c1d\u8bd5\u91cd\u542f\u8fdb\u7a0b\u8fdb\u884c\u8c03\u8bd5\uff09 Pod \u7684\u5bb9\u5668\u4f1a\u88ab\u66ff\u6362\u6210 DevContainer SecurityContext \u4f1a\u88ab\u7981\u7528\u4ee5\u65b9\u4fbf\u5f00\u53d1 Pod \u4f1a\u88ab\u6ce8\u5165\u4e00\u4e2a Nocalhost-Sidecar \u5bb9\u5668\u4ee5\u652f\u6301\u8fdc\u7a0b\u6587\u4ef6\u540c\u6b65\u7b49 Pod \u4f1a\u88ab\u589e\u52a0\u4e00\u4e2a Volume \u4ee5\u652f\u6301 DevContainer \u548c Nocalhost-Sidecar \u95f4\u5171\u4eab\u6587\u4ef6 \u5982\u4f55\u8f6c\u6362\u4e3a DevMode\uff1f\u5982\u4f55\u9000\u51fa DevMode \u5f00\u53d1\u8005\u65e0\u9700\u767b\u5f55 Nocalhost Web \u63a7\u5236\u53f0\uff0c\u76f4\u63a5\u5728 IDE \u63d2\u4ef6\u4e2d\u767b\u5f55\u540e\uff0c\u5373\u53ef\u5217\u51fa\u81ea\u5df1\u7684 DevSpace \u5217\u8868\uff0c\u53ef\u65b9\u4fbf\u7684\u5728\u63d2\u4ef6\u4e2d\u90e8\u7f72\uff0c\u5378\u8f7d\uff0c\u5f00\u53d1\uff0c\u8c03\u8bd5\u5e94\u7528\u3002 \u5982\u4f55\u67e5\u770b\u5f53\u524d\u670d\u52a1\u662f\u5426\u4e3a DevMode \u4f7f\u7528 nhctl \u67e5\u770b DevMode \u7684\u72b6\u6001 nhctl list <application_name> \u5728\u63d2\u4ef6\u7aef\u67e5\u770b DevMode \u7684\u72b6\u6001","title":"DevMode"},{"location":"zh/Concepts/devmode/#devmode","text":"DevMode \u662f\u6307\u5f00\u53d1\u8005\u5728\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5fae\u670d\u52a1\u5f00\u53d1\u65f6\uff0c\u5bf9\u5e94\u5fae\u670d\u52a1\u5de5\u4f5c\u8d1f\u8f7d\u7684\u4e00\u4e2a\u72b6\u6001\u3002\u5728\u6b64\u72b6\u6001\u4e0b\uff0c\u5de5\u4f5c\u8d1f\u8f7d\u4f1a\u88ab\u8f6c\u6210\u6210\u4e00\u79cd\u53ef\u65b9\u4fbf\u652f\u6301\u5f00\u53d1\u8005\u5f00\u53d1\u8c03\u8bd5\u7a0b\u5e8f\u7684\u6a21\u5f0f\u3002 TODO \u8865\u4e00\u4e2a\u914d\u56fe","title":"\u4ec0\u4e48\u662f DevMode"},{"location":"zh/Concepts/devmode/#devmode-devmode","text":"\u5f53\u524d Nocalhost \u57fa\u4e8e Kubernetes \u7684\u5f00\u53d1\u652f\u6301\u4e2d\uff0cDevMode \u7684\u4e3b\u8981\u53d8\u5316\u4e3a\u5982\u4e0b\uff1a \u5de5\u4f5c\u8d1f\u8f7d\u7684\u526f\u672c\u6570\u91cf\u4f1a\u88ab\u8c03\u6574\u4e3a 1\uff0c\u65b9\u4fbf\u5f00\u53d1 Pod \u7684\u5065\u5eb7\u68c0\u67e5\u63a2\u9488\u4f1a\u88ab\u7981\u7528\uff08\u65b9\u4fbf\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u5c1d\u8bd5\u91cd\u542f\u8fdb\u7a0b\u8fdb\u884c\u8c03\u8bd5\uff09 Pod \u7684\u5bb9\u5668\u4f1a\u88ab\u66ff\u6362\u6210 DevContainer SecurityContext \u4f1a\u88ab\u7981\u7528\u4ee5\u65b9\u4fbf\u5f00\u53d1 Pod \u4f1a\u88ab\u6ce8\u5165\u4e00\u4e2a Nocalhost-Sidecar \u5bb9\u5668\u4ee5\u652f\u6301\u8fdc\u7a0b\u6587\u4ef6\u540c\u6b65\u7b49 Pod \u4f1a\u88ab\u589e\u52a0\u4e00\u4e2a Volume \u4ee5\u652f\u6301 DevContainer \u548c Nocalhost-Sidecar \u95f4\u5171\u4eab\u6587\u4ef6","title":"DevMode \u76f8\u6bd4\u4e8e\u975e DevMode \u6709\u4ec0\u4e48\u53d8\u5316\uff1f"},{"location":"zh/Concepts/devmode/#devmode-devmode_1","text":"\u5f00\u53d1\u8005\u65e0\u9700\u767b\u5f55 Nocalhost Web \u63a7\u5236\u53f0\uff0c\u76f4\u63a5\u5728 IDE \u63d2\u4ef6\u4e2d\u767b\u5f55\u540e\uff0c\u5373\u53ef\u5217\u51fa\u81ea\u5df1\u7684 DevSpace \u5217\u8868\uff0c\u53ef\u65b9\u4fbf\u7684\u5728\u63d2\u4ef6\u4e2d\u90e8\u7f72\uff0c\u5378\u8f7d\uff0c\u5f00\u53d1\uff0c\u8c03\u8bd5\u5e94\u7528\u3002","title":"\u5982\u4f55\u8f6c\u6362\u4e3a DevMode\uff1f\u5982\u4f55\u9000\u51fa DevMode"},{"location":"zh/Concepts/devmode/#devmode_1","text":"\u4f7f\u7528 nhctl \u67e5\u770b DevMode \u7684\u72b6\u6001 nhctl list <application_name> \u5728\u63d2\u4ef6\u7aef\u67e5\u770b DevMode \u7684\u72b6\u6001","title":"\u5982\u4f55\u67e5\u770b\u5f53\u524d\u670d\u52a1\u662f\u5426\u4e3a DevMode"},{"location":"zh/Concepts/devspace/","text":"\u4ec0\u4e48\u662f DevSpace DevSpace \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5176\u4ee3\u8868\u7531 Nocalhost \u7ba1\u7406\u7684\u4e00\u4e2a\u9884\u5206\u914d\u7684\u4e91\u7aef\u5f00\u53d1\u7684\u7a7a\u95f4\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 DevSpace \u4e2d\u968f\u65f6\u90e8\u7f72\uff0c\u5378\u8f7d\uff0c\u5f00\u53d1\uff0c\u8c03\u8bd5\u5e94\u7528\u3002DevSpace \u4e4b\u95f4\u662f\u9694\u79bb\u7684\uff0c\u672a\u6765 Nocalhost \u4e5f\u652f\u6301\u8ba9\u5f00\u53d1\u8005\u628a\u81ea\u5df1\u7684 DevSpace \u5171\u4eab\u7ed9\u5176\u4ed6\u5f00\u53d1\u8005\uff0c\u5b9e\u73b0\u5f00\u53d1\u534f\u4f5c\u3002\u56e0\u4e3a DevSpace \u7684\u9694\u79bb\u6027\uff0c\u4e5f\u53ef\u4ee5\u88ab\u7528\u4f5c\u6d4b\u8bd5\u73af\u5883\u3002 \u5f53\u524d\uff0cNocalhost \u652f\u6301\u57fa\u4e8e Kubernetes \u7684\u4e91\u539f\u751f\u5e94\u7528\u5f00\u53d1\uff0c\u5728 Kubernetes \u4f53\u7cfb\u4e0b\uff0c DevSpace \u7531\u4e00\u4e2a Kubernetes Namespace \u548c \u5bf9\u5e94 Namespace \u7684 ServiceAccount \u7ec4\u6210\u3002\u6b64\u5916\uff0c\u76ee\u524d DevSpace \u4ec5\u5173\u8054\u4e00\u4e2a\u5e94\u7528\u548c\u4e00\u4e2a\u5f00\u53d1\u8005\uff0c\u5728\u521b\u5efa DevSpace \u7684\u65f6\u5019\uff0c\u5fc5\u987b\u6307\u5b9a DevSpace \u6240\u5728\u7684\u96c6\u7fa4\u3001\u6240\u5c5e\u7684\u5f00\u53d1\u8005\u548c\u5173\u8054\u7684\u5e94\u7528\u3002 \u7ba1\u7406\u8005\u5982\u4f55\u7ba1\u7406 DevSpace Nocalhost \u63d0\u4f9b\u4e86 web \u63a7\u5236\u53f0\uff0c\u7528\u4e8e\u7ed9\u7ba1\u7406\u5458\u521b\u5efa\u3001\u5220\u9664 DevSpace\u3002 \u5f00\u53d1\u8005\u5982\u4f55\u4f7f\u7528 DevSpace \u5f00\u53d1\u8005\u65e0\u9700\u767b\u5f55 Nocalhost Web \u63a7\u5236\u53f0\uff0c\u76f4\u63a5\u5728 IDE \u63d2\u4ef6\u4e2d\u767b\u5f55\u540e\uff0c\u5373\u53ef\u5217\u51fa\u81ea\u5df1\u7684 DevSpace \u5217\u8868\uff0c\u53ef\u65b9\u4fbf\u7684\u5728\u63d2\u4ef6\u4e2d\u90e8\u7f72\uff0c\u5378\u8f7d\uff0c\u5f00\u53d1\uff0c\u8c03\u8bd5\u5e94\u7528\u3002","title":"DevSpace"},{"location":"zh/Concepts/devspace/#devspace","text":"DevSpace \u662f Nocalhost \u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u5176\u4ee3\u8868\u7531 Nocalhost \u7ba1\u7406\u7684\u4e00\u4e2a\u9884\u5206\u914d\u7684\u4e91\u7aef\u5f00\u53d1\u7684\u7a7a\u95f4\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 DevSpace \u4e2d\u968f\u65f6\u90e8\u7f72\uff0c\u5378\u8f7d\uff0c\u5f00\u53d1\uff0c\u8c03\u8bd5\u5e94\u7528\u3002DevSpace \u4e4b\u95f4\u662f\u9694\u79bb\u7684\uff0c\u672a\u6765 Nocalhost \u4e5f\u652f\u6301\u8ba9\u5f00\u53d1\u8005\u628a\u81ea\u5df1\u7684 DevSpace \u5171\u4eab\u7ed9\u5176\u4ed6\u5f00\u53d1\u8005\uff0c\u5b9e\u73b0\u5f00\u53d1\u534f\u4f5c\u3002\u56e0\u4e3a DevSpace \u7684\u9694\u79bb\u6027\uff0c\u4e5f\u53ef\u4ee5\u88ab\u7528\u4f5c\u6d4b\u8bd5\u73af\u5883\u3002 \u5f53\u524d\uff0cNocalhost \u652f\u6301\u57fa\u4e8e Kubernetes \u7684\u4e91\u539f\u751f\u5e94\u7528\u5f00\u53d1\uff0c\u5728 Kubernetes \u4f53\u7cfb\u4e0b\uff0c DevSpace \u7531\u4e00\u4e2a Kubernetes Namespace \u548c \u5bf9\u5e94 Namespace \u7684 ServiceAccount \u7ec4\u6210\u3002\u6b64\u5916\uff0c\u76ee\u524d DevSpace \u4ec5\u5173\u8054\u4e00\u4e2a\u5e94\u7528\u548c\u4e00\u4e2a\u5f00\u53d1\u8005\uff0c\u5728\u521b\u5efa DevSpace \u7684\u65f6\u5019\uff0c\u5fc5\u987b\u6307\u5b9a DevSpace \u6240\u5728\u7684\u96c6\u7fa4\u3001\u6240\u5c5e\u7684\u5f00\u53d1\u8005\u548c\u5173\u8054\u7684\u5e94\u7528\u3002","title":"\u4ec0\u4e48\u662f DevSpace"},{"location":"zh/Concepts/devspace/#devspace_1","text":"Nocalhost \u63d0\u4f9b\u4e86 web \u63a7\u5236\u53f0\uff0c\u7528\u4e8e\u7ed9\u7ba1\u7406\u5458\u521b\u5efa\u3001\u5220\u9664 DevSpace\u3002","title":"\u7ba1\u7406\u8005\u5982\u4f55\u7ba1\u7406 DevSpace"},{"location":"zh/Concepts/devspace/#devspace_2","text":"\u5f00\u53d1\u8005\u65e0\u9700\u767b\u5f55 Nocalhost Web \u63a7\u5236\u53f0\uff0c\u76f4\u63a5\u5728 IDE \u63d2\u4ef6\u4e2d\u767b\u5f55\u540e\uff0c\u5373\u53ef\u5217\u51fa\u81ea\u5df1\u7684 DevSpace \u5217\u8868\uff0c\u53ef\u65b9\u4fbf\u7684\u5728\u63d2\u4ef6\u4e2d\u90e8\u7f72\uff0c\u5378\u8f7d\uff0c\u5f00\u53d1\uff0c\u8c03\u8bd5\u5e94\u7528\u3002","title":"\u5f00\u53d1\u8005\u5982\u4f55\u4f7f\u7528 DevSpace"},{"location":"zh/Concepts/user/","text":"\u4ec0\u4e48\u662f User \u5f53\u4f60\u4f7f\u7528 Nocalhost-Server \uff0c\u4ee5\u53ca Nocalhost-Plug-In \u65f6\uff0c User \u7528\u4e8e\u6807\u660e\u4f60\u7684\u8eab\u4efd\uff0c\u4ee5\u53ca\u5bf9\u8d44\u6e90\u8bbf\u95ee\u7684\u63a7\u5236\u3002\u8fd9\u4e2a User \u5c5e\u4e8e Nocalhost \u7684\u72ec\u7acb\u6982\u5ff5\uff0c\u4e0e kubernetes \u672c\u8eab\u5e76\u65e0\u5173\u8054\u3002 User \u662f\u505a\u4ec0\u4e48\u7684 Nocalhost \u4e2d\u5b58\u5728\u4e24\u79cd User \u7c7b\u578b\uff0c\u4e00\u79cd\u662f\u666e\u901a\u7528\u6237\uff0c\u666e\u901a\u7528\u6237\u53ea\u80fd\u5728 Nocalhost-Plug-In \u8fdb\u884c\u767b\u5f55\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u81ea\u5df1\u7684 Space \u4e0b\u8fdb\u884c\u5f00\u53d1\uff0c\u8fd9\u4e9b Space \u90fd\u7531\u7cfb\u7edf\u7ba1\u7406\u5458\u8fdb\u884c\u521b\u5efa\u3002 \u53e6\u4e00\u79cd\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\uff0c\u4f8b\u5982\u521d\u59cb\u7684 admin@admin.com \uff0c\u7cfb\u7edf\u7ba1\u7406\u5458\u62e5\u6709\u8bbf\u95ee Nocalhost-Web \u7684\u6743\u9650\uff0c\u7cfb\u7edf\u7ba1\u7406\u5458\u62e5\u6709\u5728 Nocalhost-Web \u4e2d\u7684\u6240\u6709\u6743\u9650\uff0c\u5982\u521b\u5efa Application \u3001\u521b\u5efa Cluster \u3001\u521b\u5efa User \u548c\u521b\u5efa Space \u7b49\u3002\u540c\u6837\uff0c\u7cfb\u7edf\u7ba1\u7406\u5458\u4e5f\u62e5\u6709\u666e\u901a\u7528\u6237\u6240\u6709\u7684\u6743\u9650\uff0c\u5982\u53ef\u4ee5\u5728 Nocalhost-Plug-In \u8fdb\u884c\u767b\u5f55\uff0c\u83b7\u53d6\u81ea\u5df1\u7684 Space \u5217\u8868\uff0c\u8fdb\u884c Application \u7684\u5b89\u88c5\u7b49\u3002 User \u7684\u6743\u9650 \u666e\u901a\u7684 User \u53ea\u80fd\u770b\u5230\u5c5e\u4e8e\u81ea\u5df1\u7684 Space \uff0c\u5e76\u4e14\u62e5\u6709\u8fd9\u4e9b Space \u4e0b\u7684\u6240\u6709\u6743\u9650\uff0c\u4f8b\u5982\u5bf9 Space \u4e0b\u76f8\u5e94 Application \u7684 install \u3001 unInstall \uff08\u90e8\u7f72\u4e0e\u9500\u6bc1\uff09\u3001\u53ef\u4ee5\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u3001\u8fdb\u884c\u7aef\u53e3\u8f6c\u53d1\u7b49\u3002 \u4f8b\u5982\u5f53\u524d\u5728 Nocalhost-Plug-In \u767b\u5f55\u7684\u8fd9\u4e2a\u7528\u6237\u62e5\u6709 \"bookinfo\" \u548c \"test\" \u8fd9\u4e24\u4e2a Space \u7684\u6743\u9650\u3002 \u4e0d\u8fc7\u666e\u901a\u7528\u6237\u65e0\u6cd5\u8fdb\u5165 Nocalhost-Web \uff0c\u4e5f\u65e0\u6cd5\u5220\u9664\u8fd9\u4e2a Space \u672c\u8eab\uff0c\u6216\u8005\u4e0e\u8fd9\u4e2a Space \u89e3\u9664\u5173\u7cfb\uff0c\u8fd9\u5f88\u50cf k8s \u67d0\u4e2a namespace \u4e0b\u7684 admin \u6743\u9650\u3002 User \u4e0e Space User \u4e0e Space \u5173\u8054\u7d27\u5bc6\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5982\u679c\u8981\u8fdb\u884c\u4e00\u4e2a k8s \u5e94\u7528\u7684\u90e8\u7f72\uff0c\u901a\u5e38\u6211\u4eec\u90fd\u9700\u8981\u5c5e\u4e8e\u8fd9\u4e2a\u5e94\u7528\u7684 manifest \u6587\u4ef6\u96c6\uff0c\u4ee5\u53ca\u76f8\u5173 k8s \u96c6\u7fa4\u7684 kubeconfig \u6587\u4ef6\u6765\u8fdb\u884c\u90e8\u7f72\u3002 \u53ef\u4ee5\u8bf4 Space \u5c31\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\u4e3a\u666e\u901a\u7528\u6237\u9884\u8bbe\u597d\u7684 manifest \u6587\u4ef6\u96c6\u4e0e\u76f8\u5173 k8s \u96c6\u7fa4\u7684 kubeconfig \u3002 \u7cfb\u7edf\u7ba1\u7406\u5458\u4e3a User \u5206\u914d Space \uff0c\u7528\u6237\u518d\u6839\u636e Space \u5728 Nocalhost-Plug-In \u8fdb\u884c\u5f00\u53d1\u3002","title":"User"},{"location":"zh/Concepts/user/#user","text":"\u5f53\u4f60\u4f7f\u7528 Nocalhost-Server \uff0c\u4ee5\u53ca Nocalhost-Plug-In \u65f6\uff0c User \u7528\u4e8e\u6807\u660e\u4f60\u7684\u8eab\u4efd\uff0c\u4ee5\u53ca\u5bf9\u8d44\u6e90\u8bbf\u95ee\u7684\u63a7\u5236\u3002\u8fd9\u4e2a User \u5c5e\u4e8e Nocalhost \u7684\u72ec\u7acb\u6982\u5ff5\uff0c\u4e0e kubernetes \u672c\u8eab\u5e76\u65e0\u5173\u8054\u3002","title":"\u4ec0\u4e48\u662f User"},{"location":"zh/Concepts/user/#user_1","text":"Nocalhost \u4e2d\u5b58\u5728\u4e24\u79cd User \u7c7b\u578b\uff0c\u4e00\u79cd\u662f\u666e\u901a\u7528\u6237\uff0c\u666e\u901a\u7528\u6237\u53ea\u80fd\u5728 Nocalhost-Plug-In \u8fdb\u884c\u767b\u5f55\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u81ea\u5df1\u7684 Space \u4e0b\u8fdb\u884c\u5f00\u53d1\uff0c\u8fd9\u4e9b Space \u90fd\u7531\u7cfb\u7edf\u7ba1\u7406\u5458\u8fdb\u884c\u521b\u5efa\u3002 \u53e6\u4e00\u79cd\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\uff0c\u4f8b\u5982\u521d\u59cb\u7684 admin@admin.com \uff0c\u7cfb\u7edf\u7ba1\u7406\u5458\u62e5\u6709\u8bbf\u95ee Nocalhost-Web \u7684\u6743\u9650\uff0c\u7cfb\u7edf\u7ba1\u7406\u5458\u62e5\u6709\u5728 Nocalhost-Web \u4e2d\u7684\u6240\u6709\u6743\u9650\uff0c\u5982\u521b\u5efa Application \u3001\u521b\u5efa Cluster \u3001\u521b\u5efa User \u548c\u521b\u5efa Space \u7b49\u3002\u540c\u6837\uff0c\u7cfb\u7edf\u7ba1\u7406\u5458\u4e5f\u62e5\u6709\u666e\u901a\u7528\u6237\u6240\u6709\u7684\u6743\u9650\uff0c\u5982\u53ef\u4ee5\u5728 Nocalhost-Plug-In \u8fdb\u884c\u767b\u5f55\uff0c\u83b7\u53d6\u81ea\u5df1\u7684 Space \u5217\u8868\uff0c\u8fdb\u884c Application \u7684\u5b89\u88c5\u7b49\u3002","title":"User \u662f\u505a\u4ec0\u4e48\u7684"},{"location":"zh/Concepts/user/#user_2","text":"\u666e\u901a\u7684 User \u53ea\u80fd\u770b\u5230\u5c5e\u4e8e\u81ea\u5df1\u7684 Space \uff0c\u5e76\u4e14\u62e5\u6709\u8fd9\u4e9b Space \u4e0b\u7684\u6240\u6709\u6743\u9650\uff0c\u4f8b\u5982\u5bf9 Space \u4e0b\u76f8\u5e94 Application \u7684 install \u3001 unInstall \uff08\u90e8\u7f72\u4e0e\u9500\u6bc1\uff09\u3001\u53ef\u4ee5\u8fdb\u5165\u5f00\u53d1\u6a21\u5f0f\u3001\u8fdb\u884c\u7aef\u53e3\u8f6c\u53d1\u7b49\u3002 \u4f8b\u5982\u5f53\u524d\u5728 Nocalhost-Plug-In \u767b\u5f55\u7684\u8fd9\u4e2a\u7528\u6237\u62e5\u6709 \"bookinfo\" \u548c \"test\" \u8fd9\u4e24\u4e2a Space \u7684\u6743\u9650\u3002 \u4e0d\u8fc7\u666e\u901a\u7528\u6237\u65e0\u6cd5\u8fdb\u5165 Nocalhost-Web \uff0c\u4e5f\u65e0\u6cd5\u5220\u9664\u8fd9\u4e2a Space \u672c\u8eab\uff0c\u6216\u8005\u4e0e\u8fd9\u4e2a Space \u89e3\u9664\u5173\u7cfb\uff0c\u8fd9\u5f88\u50cf k8s \u67d0\u4e2a namespace \u4e0b\u7684 admin \u6743\u9650\u3002","title":"User \u7684\u6743\u9650"},{"location":"zh/Concepts/user/#user-space","text":"User \u4e0e Space \u5173\u8054\u7d27\u5bc6\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5982\u679c\u8981\u8fdb\u884c\u4e00\u4e2a k8s \u5e94\u7528\u7684\u90e8\u7f72\uff0c\u901a\u5e38\u6211\u4eec\u90fd\u9700\u8981\u5c5e\u4e8e\u8fd9\u4e2a\u5e94\u7528\u7684 manifest \u6587\u4ef6\u96c6\uff0c\u4ee5\u53ca\u76f8\u5173 k8s \u96c6\u7fa4\u7684 kubeconfig \u6587\u4ef6\u6765\u8fdb\u884c\u90e8\u7f72\u3002 \u53ef\u4ee5\u8bf4 Space \u5c31\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\u4e3a\u666e\u901a\u7528\u6237\u9884\u8bbe\u597d\u7684 manifest \u6587\u4ef6\u96c6\u4e0e\u76f8\u5173 k8s \u96c6\u7fa4\u7684 kubeconfig \u3002 \u7cfb\u7edf\u7ba1\u7406\u5458\u4e3a User \u5206\u914d Space \uff0c\u7528\u6237\u518d\u6839\u636e Space \u5728 Nocalhost-Plug-In \u8fdb\u884c\u5f00\u53d1\u3002","title":"User \u4e0e Space"},{"location":"zh/FAQ/default-account/","text":"\u4e3a\u4ec0\u4e48\u6ca1\u6709\u6ce8\u518c\u94fe\u63a5\uff1f\u600e\u4e48\u767b\u5f55 Nocalhost Web\uff1f Nocalhost \u4e0d\u652f\u6301\u7528\u6237\u6ce8\u518c\u3002Nocalhost \u670d\u52a1\u5668\u76ee\u524d\u662f\u8bbe\u8ba1\u7ed9\u7ba1\u7406\u5458\u4f7f\u7528\u7684\u3002 \u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7\u9ed8\u8ba4\u8d26\u6237\u90ae\u7bb1\u5bc6\u7801\u767b\u5f55\u3002 \u9ed8\u8ba4\u90ae\u7bb1\uff1a admin@admin.com \u9ed8\u8ba4\u5bc6\u7801\uff1a 123456 \u767b\u5f55\u540e\uff0c\u7ba1\u7406\u5458\u53ef\u4fee\u6539\u8d26\u6237\u90ae\u7bb1\u548c\u5bc6\u7801\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u7528\u6237\u3001\u96c6\u7fa4\u548c\u5e94\u7528\u8fdb\u884c\u7ba1\u7406\u3002","title":"\u9ed8\u8ba4\u7ba1\u7406\u8d26\u6237"},{"location":"zh/FAQ/default-account/#nocalhost-web","text":"Nocalhost \u4e0d\u652f\u6301\u7528\u6237\u6ce8\u518c\u3002Nocalhost \u670d\u52a1\u5668\u76ee\u524d\u662f\u8bbe\u8ba1\u7ed9\u7ba1\u7406\u5458\u4f7f\u7528\u7684\u3002 \u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7\u9ed8\u8ba4\u8d26\u6237\u90ae\u7bb1\u5bc6\u7801\u767b\u5f55\u3002 \u9ed8\u8ba4\u90ae\u7bb1\uff1a admin@admin.com \u9ed8\u8ba4\u5bc6\u7801\uff1a 123456 \u767b\u5f55\u540e\uff0c\u7ba1\u7406\u5458\u53ef\u4fee\u6539\u8d26\u6237\u90ae\u7bb1\u548c\u5bc6\u7801\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u7528\u6237\u3001\u96c6\u7fa4\u548c\u5e94\u7528\u8fdb\u884c\u7ba1\u7406\u3002","title":"\u4e3a\u4ec0\u4e48\u6ca1\u6709\u6ce8\u518c\u94fe\u63a5\uff1f\u600e\u4e48\u767b\u5f55 Nocalhost Web\uff1f"},{"location":"zh/FAQ/dep-label-selector/","text":"Nocalhost \u5177\u4f53\u662f\u5982\u4f55\u786e\u5b9a Pods/Jobs \u7684\u542f\u52a8\u987a\u5e8f? Nocalhost \u914d\u7f6e\u6587\u4ef6 config.yaml \u4e2d\u7684\u4f9d\u8d56\u58f0\u660e\u51b3\u5b9a\u4e86\u5e94\u7528\u670d\u52a1\u7684\u542f\u52a8\u987a\u5e8f\u3002 Nocalhost \u4f1a\u5b89\u6392\u542b\u6709 dependPodsLabelSelector \u548c dependJobsLabelSelector \u9009\u9879\u4e2d\u5b9a\u4e49\u4e86\u6807\u7b7e\u7684 Pod \u6216 Job \u5728\u670d\u52a1\u542f\u52a8\u524d\u5148\u542f\u52a8\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u670d\u52a1\u5728\u6240\u6709\u4f9d\u8d56\u7684 Pod \u542f\u52a8\u5c31\u7eea\u548c\u6240\u6709\u4f9d\u8d56\u7684 Job \u6267\u884c\u5b8c\u4e4b\u524d\u90fd\u4e0d\u4f1a\u542f\u52a8\u3002 \u4f8b\u5982\uff0c foo \u670d\u52a1\u7684\u914d\u7f6e\u5982\u4e0b\uff1a ... services: - name: foo dependPodsLabelSelector: - \"app=mysql,region=shenzhen\" - \"app=redis\" ... \u5f53 Nocalhost \u8981\u542f\u52a8 foo \u670d\u52a1\u7684 Pod \u65f6\uff0c\u4f1a\u5148\u9009\u4e2d\u542b\u6709 app=mysql and region=shenzhen \u6216 app=redis \u6807\u7b7e\u7684 Pod\u3002\u8fd9\u4e9b\u9009\u4e2d\u7684 Pod \u4f1a\u5148\u88ab\u542f\u52a8\u3002\u4e00\u65e6\u6240\u6709\u9009\u4e2d\u7684 Pod \u542f\u52a8\u5c31\u7eea\u540e\uff0cNocalhost \u624d\u542f\u52a8 foo \u670d\u52a1\u3002","title":"\u4f9d\u8d56\u6807\u7b7e\u9009\u62e9\u5668"},{"location":"zh/FAQ/dep-label-selector/#nocalhost-podsjobs","text":"Nocalhost \u914d\u7f6e\u6587\u4ef6 config.yaml \u4e2d\u7684\u4f9d\u8d56\u58f0\u660e\u51b3\u5b9a\u4e86\u5e94\u7528\u670d\u52a1\u7684\u542f\u52a8\u987a\u5e8f\u3002 Nocalhost \u4f1a\u5b89\u6392\u542b\u6709 dependPodsLabelSelector \u548c dependJobsLabelSelector \u9009\u9879\u4e2d\u5b9a\u4e49\u4e86\u6807\u7b7e\u7684 Pod \u6216 Job \u5728\u670d\u52a1\u542f\u52a8\u524d\u5148\u542f\u52a8\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u670d\u52a1\u5728\u6240\u6709\u4f9d\u8d56\u7684 Pod \u542f\u52a8\u5c31\u7eea\u548c\u6240\u6709\u4f9d\u8d56\u7684 Job \u6267\u884c\u5b8c\u4e4b\u524d\u90fd\u4e0d\u4f1a\u542f\u52a8\u3002 \u4f8b\u5982\uff0c foo \u670d\u52a1\u7684\u914d\u7f6e\u5982\u4e0b\uff1a ... services: - name: foo dependPodsLabelSelector: - \"app=mysql,region=shenzhen\" - \"app=redis\" ... \u5f53 Nocalhost \u8981\u542f\u52a8 foo \u670d\u52a1\u7684 Pod \u65f6\uff0c\u4f1a\u5148\u9009\u4e2d\u542b\u6709 app=mysql and region=shenzhen \u6216 app=redis \u6807\u7b7e\u7684 Pod\u3002\u8fd9\u4e9b\u9009\u4e2d\u7684 Pod \u4f1a\u5148\u88ab\u542f\u52a8\u3002\u4e00\u65e6\u6240\u6709\u9009\u4e2d\u7684 Pod \u542f\u52a8\u5c31\u7eea\u540e\uff0cNocalhost \u624d\u542f\u52a8 foo \u670d\u52a1\u3002","title":"Nocalhost \u5177\u4f53\u662f\u5982\u4f55\u786e\u5b9a Pods/Jobs \u7684\u542f\u52a8\u987a\u5e8f?"},{"location":"zh/FAQ/deployment-with-hpa/","text":"Nocalhost \u652f\u6301\u5f00\u53d1\u5177\u5907 HPA (Horizontal Pod Autoscaler) \u63a7\u5236\u7684 Deployment \u5417\uff1f \u4e0d\u652f\u6301\u3002\u5efa\u8bae\u5728\u90e8\u7f72\u5e94\u7528\u5b8c\u6bd5\u540e\uff0c\u5148\u53bb\u5220\u9664 HPA \u63a7\u5236\u5668\uff0c\u518d\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5bf9\u6307\u5b9a\u670d\u52a1\u8fdb\u884c\u5f00\u53d1\u3002","title":"HPA \u63a7\u5236\u7684 Deployment"},{"location":"zh/FAQ/deployment-with-hpa/#nocalhost-hpa-horizontal-pod-autoscaler-deployment","text":"\u4e0d\u652f\u6301\u3002\u5efa\u8bae\u5728\u90e8\u7f72\u5e94\u7528\u5b8c\u6bd5\u540e\uff0c\u5148\u53bb\u5220\u9664 HPA \u63a7\u5236\u5668\uff0c\u518d\u4f7f\u7528 Nocalhost \u8fdb\u884c\u5bf9\u6307\u5b9a\u670d\u52a1\u8fdb\u884c\u5f00\u53d1\u3002","title":"Nocalhost \u652f\u6301\u5f00\u53d1\u5177\u5907 HPA (Horizontal Pod Autoscaler) \u63a7\u5236\u7684 Deployment \u5417\uff1f"},{"location":"zh/FAQ/multi-container-pods/","text":"Nocalhost \u652f\u6301\u5f00\u53d1\u8fd0\u884c\u591a\u5bb9\u5668 Pod \u7684\u7ec4\u4ef6\uff08\u670d\u52a1\uff09\u5417\uff1f \u76ee\u524d\u4e0d\u652f\u6301\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002","title":"\u591a\u5bb9\u5668 Pod"},{"location":"zh/FAQ/multi-container-pods/#nocalhost-pod","text":"\u76ee\u524d\u4e0d\u652f\u6301\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002","title":"Nocalhost \u652f\u6301\u5f00\u53d1\u8fd0\u884c\u591a\u5bb9\u5668 Pod \u7684\u7ec4\u4ef6\uff08\u670d\u52a1\uff09\u5417\uff1f"},{"location":"zh/FAQ/ssh-private-keys-passphrase/","text":"Nocalhost \u4e3a\u4ec0\u4e48\u65e0\u6cd5\u4f7f\u7528\u5df2\u52a0\u5bc6\u7684 SSH \u79c1\u94a5\u514b\u9686\u4ee3\u7801\uff1f \u76ee\u524d\u4e0d\u652f\u6301\u4f7f\u7528\u5df2\u52a0\u5bc6\u7684 SSH \u79c1\u94a5\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002","title":"\u52a0\u5bc6\u7684 SSH \u79c1\u94a5"},{"location":"zh/FAQ/ssh-private-keys-passphrase/#nocalhost-ssh","text":"\u76ee\u524d\u4e0d\u652f\u6301\u4f7f\u7528\u5df2\u52a0\u5bc6\u7684 SSH \u79c1\u94a5\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002","title":"Nocalhost \u4e3a\u4ec0\u4e48\u65e0\u6cd5\u4f7f\u7528\u5df2\u52a0\u5bc6\u7684 SSH \u79c1\u94a5\u514b\u9686\u4ee3\u7801\uff1f"},{"location":"zh/FAQ/vscode-plugin-limits/","text":"Nocalhost \u652f\u6301\u5f00\u53d1\u4f9d\u8d56 Namespace\u3001ClusterRole \u7b49\u96c6\u7fa4\u8d44\u6e90\u7684\u5e94\u7528\u5417\uff1f Visual Studio Code \u63d2\u4ef6\u548c Nocalhost \u670d\u52a1\u5668\u4e0d\u652f\u6301\uff0c\u4f46 Nocalhost \u547d\u4ee4\u884c\u5de5\u5177 nhctl \u652f\u6301\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002","title":"VSCode \u63d2\u4ef6\u529f\u80fd\u9650\u5236"},{"location":"zh/FAQ/vscode-plugin-limits/#nocalhost-namespaceclusterrole","text":"Visual Studio Code \u63d2\u4ef6\u548c Nocalhost \u670d\u52a1\u5668\u4e0d\u652f\u6301\uff0c\u4f46 Nocalhost \u547d\u4ee4\u884c\u5de5\u5177 nhctl \u652f\u6301\u3002\u672a\u6765\u4f1a\u63d0\u4f9b\u652f\u6301\u3002","title":"Nocalhost \u652f\u6301\u5f00\u53d1\u4f9d\u8d56 Namespace\u3001ClusterRole \u7b49\u96c6\u7fa4\u8d44\u6e90\u7684\u5e94\u7528\u5417\uff1f"},{"location":"zh/FAQ/work-with-helm/","text":"Nocalhost \u5982\u4f55\u786e\u5b9a\u7531 Helm \u5b89\u88c5\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5bf9\u5e94\u4e8e\u914d\u7f6e\u4e2d\u7684\u54ea\u4e2a\u670d\u52a1\uff1f \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cNocalhost \u901a\u8fc7\u96c6\u7fa4\u4e2d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u540d\u79f0\u6765\u8bc6\u522b\u670d\u52a1\u7684\u3002\u4f46\u901a\u8fc7 Helm \u5b89\u88c5\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u6709\u53ef\u80fd\u662f\u901a\u8fc7 Chart \u6a21\u677f\u751f\u6210\u7684\u3002 \u5982\u679c Chart \u662f\u901a\u8fc7 Helm \u63d0\u4f9b\u7684\u6a21\u677f\u521b\u5efa\u7684\uff0cNocalhost \u4f1a\u901a\u8fc7\u67e5\u627e\u4ee5 <release-name>-<service-name> \u5f62\u5f0f\u547d\u540d\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6765\u4f5c\u4e3a\u5bf9\u5e94\u7684\u670d\u52a1\u3002\u4f8b\u5982\uff0cconfig.yaml \u5b9a\u4e49\u4e86\u5982\u4e0b\u7684\u670d\u52a1\uff1a ... services: - name: productpage serviceType: deployment \u5f53\u6211\u4eec\u901a\u8fc7 nhctl (Helm) \u5b89\u88c5\u4e0b\u9762\u7684\u5e94\u7528\uff1a $ nhctl install dev -u <git-repo-url> $ kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE dev-productpage 0/1 1 0 9s \u5982\u679c\u96c6\u7fa4\u4e2d\u6ca1\u6709\u540d\u4e3a productpage \u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5219 Nocalhost \u4f1a\u628a dev-productpage \u8ba4\u4e3a\u662f\u7528\u6237\u5728 config.yaml \u4e2d\u914d\u7f6e\u7684 productpage \u670d\u52a1\u3002 \u5982\u679c Chart \u4e0d\u662f\u901a\u8fc7 Helm \u63d0\u4f9b\u7684\u6a21\u677f\u521b\u5efa\u7684\uff0c\u6216\u5de5\u4f5c\u8d1f\u8f7d\u4e0d\u662f\u901a\u8fc7\u4e0a\u8ff0\u65b9\u5f0f\u5b89\u88c5\u7684\uff0cNocalhost \u5219\u65e0\u6cd5\u786e\u5b9a config.yaml \u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u6240\u5bf9\u5e94\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e94\u8be5\u914d\u7f6e\u51c6\u786e\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u3002 \u5efa\u8bae\u5728 Helm Chart \u4e2d\u4f7f\u7528\u9759\u6001\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u3002","title":"Helm \u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0"},{"location":"zh/FAQ/work-with-helm/#nocalhost-helm","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cNocalhost \u901a\u8fc7\u96c6\u7fa4\u4e2d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u540d\u79f0\u6765\u8bc6\u522b\u670d\u52a1\u7684\u3002\u4f46\u901a\u8fc7 Helm \u5b89\u88c5\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u6709\u53ef\u80fd\u662f\u901a\u8fc7 Chart \u6a21\u677f\u751f\u6210\u7684\u3002 \u5982\u679c Chart \u662f\u901a\u8fc7 Helm \u63d0\u4f9b\u7684\u6a21\u677f\u521b\u5efa\u7684\uff0cNocalhost \u4f1a\u901a\u8fc7\u67e5\u627e\u4ee5 <release-name>-<service-name> \u5f62\u5f0f\u547d\u540d\u7684\u5de5\u4f5c\u8d1f\u8f7d\u6765\u4f5c\u4e3a\u5bf9\u5e94\u7684\u670d\u52a1\u3002\u4f8b\u5982\uff0cconfig.yaml \u5b9a\u4e49\u4e86\u5982\u4e0b\u7684\u670d\u52a1\uff1a ... services: - name: productpage serviceType: deployment \u5f53\u6211\u4eec\u901a\u8fc7 nhctl (Helm) \u5b89\u88c5\u4e0b\u9762\u7684\u5e94\u7528\uff1a $ nhctl install dev -u <git-repo-url> $ kubectl get deployment -n test NAME READY UP-TO-DATE AVAILABLE AGE dev-productpage 0/1 1 0 9s \u5982\u679c\u96c6\u7fa4\u4e2d\u6ca1\u6709\u540d\u4e3a productpage \u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5219 Nocalhost \u4f1a\u628a dev-productpage \u8ba4\u4e3a\u662f\u7528\u6237\u5728 config.yaml \u4e2d\u914d\u7f6e\u7684 productpage \u670d\u52a1\u3002 \u5982\u679c Chart \u4e0d\u662f\u901a\u8fc7 Helm \u63d0\u4f9b\u7684\u6a21\u677f\u521b\u5efa\u7684\uff0c\u6216\u5de5\u4f5c\u8d1f\u8f7d\u4e0d\u662f\u901a\u8fc7\u4e0a\u8ff0\u65b9\u5f0f\u5b89\u88c5\u7684\uff0cNocalhost \u5219\u65e0\u6cd5\u786e\u5b9a config.yaml \u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u6240\u5bf9\u5e94\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e94\u8be5\u914d\u7f6e\u51c6\u786e\u7684\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u3002 \u5efa\u8bae\u5728 Helm Chart \u4e2d\u4f7f\u7528\u9759\u6001\u5de5\u4f5c\u8d1f\u8f7d\u540d\u79f0\u3002","title":"Nocalhost \u5982\u4f55\u786e\u5b9a\u7531 Helm \u5b89\u88c5\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5bf9\u5e94\u4e8e\u914d\u7f6e\u4e2d\u7684\u54ea\u4e2a\u670d\u52a1\uff1f"},{"location":"zh/References/architecture/","text":"\u4ec0\u4e48\u662fNocalhost\uff1f Nocalhost \u662f\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u652f\u6301\u5f00\u53d1\u57fa\u4e8e Kubernetes \u7684\u5e94\u7528\uff1a \u4e00\u952e\u5316\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\uff0c\u5373\u4f7f\u5177\u6709\u590d\u6742\u7684\u670d\u52a1\u4f9d\u8d56\u6027 \u652f\u6301\u5728 Kubernetes \u5bb9\u5668\u5185\u90e8\u6784\u5efa\uff0c\u6d4b\u8bd5\u548c\u8c03\u8bd5\u5e94\u7528\u7a0b\u5e8f \u652f\u6301\u70ed\u52a0\u8f7d\u8fdb\u884c\u5f00\u53d1 \uff1a\u66f4\u65b0\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u800c\u65e0\u9700\u91cd\u5efa\u91cd\u5efa\u6216\u91cd\u65b0\u542f\u52a8 Pod\u3002 Nocalhost \u5982\u4f55\u5de5\u4f5c\u7684\uff1f Nocalhost \u670d\u52a1\u7aef\u5b89\u88c5 \u5c06 Nocalhost \u670d\u52a1\u7aef\uff08nocalhost-api\uff0cnocalhost-web\uff09\u90e8\u7f72\u5230 kubernetes \u96c6\u7fa4\u3002 \u5bf9\u4e8e\u7ba1\u7406\u5458\uff1a \u4f7f\u7528 Nocalhost \u670d\u52a1\u7aef\u63d0\u4f9b\u7684\u7ba1\u7406\u754c\u9762\u521b\u5efa\u7528\u6237\uff0c\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7684 Kubernetes \u96c6\u7fa4\uff0c\u521b\u5efa\u5e94\u7528\u7a0b\u5e8f\u4ee5\u53ca\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7684DevSpace\uff08\u5f53\u524d\uff0cDevSpace = ServiceAccount + namespaces\uff09\u3002 \u5728\u914d\u7f6e Kubernetes \u96c6\u7fa4\u65f6\uff0c\u4f1a\u5728\u8be5 Kubernetest \u96c6\u7fa4\u7684 nocalhost \u540d\u79f0\u7a7a\u95f4\uff0c\u81ea\u52a8\u90e8\u7f72 nocalhost-dep \uff0cnocalhost-dep \u4e3b\u8981\u662f\u63a7\u5236\u5fae\u670d\u52a1\u542f\u52a8\u65f6\u7684\u4f9d\u8d56\u987a\u5e8f\u3002 \u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\uff1a 1.\u5b89\u88c5 Nocalhost \u5ba2\u6237\u7aef nhctl \u548c IDE \u63d2\u4ef6 \u3002 2.\u63d2\u4ef6\u4e2d\u914d\u7f6e nocalhost-api \u670d\u52a1\u5730\u5740(\u5982\uff1ahttp://localhost:8080), \u5e76\u7528\u8d26\u53f7\u5bc6\u7801\u767b\u5f55. 3.\u5e94\u7528\u7a0b\u5e8f\u4e00\u952e\u5316\u90e8\u7f72\u5230 kubernetes \u96c6\u7fa4\u3002 4.\u9009\u5b9a\u670d\u52a1\u5f00\u542f DevMode \uff0c\u5f53\u8be5\u670d\u52a1\u5207\u6362\u5230 DevMode, Nocalhost \u5c06\u8be5\u5fae\u670d\u52a1\u7684\u5bb9\u5668\u66ff\u6362\u4e3a\u914d\u7f6e\u6307\u5b9a\u7684 DevContainer \uff0c\u5c06\u6e90\u4ee3\u7801\u540c\u6b65\u5230 DevContainer\uff0c\u5e76\u5c06 DevContainer \u7684\u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\u3002 Nocalhost \u7684\u5de5\u4f5c\u793a\u610f\u56fe\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u7ec4\u4ef6\u7b80\u4ecb IDE plugins IDE pugins \u901a\u8fc7 nhctl \u548c nocalhost-api \u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\u3002\u4e3b\u8981\u63d0\u4f9b\u4e00\u952e\u5316\u529f\u80fd\uff0c\u5982\uff1a\u5e94\u7528\u90e8\u7f72/\u5378\u8f7d\uff0cDevMode \u5f00\u542f/\u5173\u95ed\uff0c\u6587\u4ef6\u540c\u6b65\uff0c\u7aef\u53e3\u8f6c\u53d1\u7b49 nhctl nhctl \u662f Nocalhost \u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u4e3b\u8981\u529f\u80fd\u5982\u4e0b\uff1a \u5e94\u7528\u90e8\u7f72 Nocalhost \u5c06\u6839\u636e ~/.nh/nhctl/application/{\u5177\u4f53\u5e94\u7528}/.nocalhost/config.yaml \u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u4f9d\u8d56\u987a\u5e8f\u4f9d\u6b21\u90e8\u7f72\u5230kubernetes\u96c6\u7fa4\u3002 DevContainer \u70ed\u52a0\u8f7d\u672c\u5730\u6587\u4ef6 \u5bf9\u672c\u5730\u6e90\u4ee3\u7801\u6240\u505a\u7684\u4efb\u4f55\u66f4\u6539\u5c06\u81ea\u52a8\u540c\u6b65\u5230\u8fdc\u7a0bDevContainer\u3002 \u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u91cd\u65b0\u7f16\u8bd1\u5e76\u91cd\u65b0\u542f\u52a8\u5bb9\u5668\u5176\u8fc7\u7a0b\u4ee5\u9a8c\u8bc1\u4ee3\u7801\u66f4\u6539\u3002 \u5c06\u6765\uff0c\u6211\u4eec\u5c06\u652f\u6301\u914d\u7f6ehotreload\u547d\u4ee4\uff0c\u800c\u4e0d\u662f\u624b\u52a8\u91cd\u65b0\u542f\u52a8\u8fc7\u7a0b\u3002 \u5e94\u7528\u5378\u8f7d \u5e94\u7528\u5378\u8f7d\u4f1a\u6e05\u7a7a DevSpace \u7533\u8bf7\u7684\u8d44\u6e90\u3002 nocalhost-web nocalhost-web \u63d0\u4f9b\u4e86\u4e00\u4e2a Web \u754c\u9762\u6765\u7ba1\u7406\u7528\u6237\uff0ckubernetes \u96c6\u7fa4\uff0c\u5e94\u7528\u7a0b\u5e8f\u548c DevSpaces\u3002 nocalhost-api Nocalhost-api \u901a\u8fc7 Kubernetest api-server \u7ba1\u7406 kubernetes \u96c6\u7fa4\u4e2d\u7684 serviceAccount\uff0c\u5e94\u7528\u7a0b\u5e8f\u548c DevSpace\uff0c\u5e76\u6301\u4e45\u5b58\u50a8\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u4e3a IDE plugin \u7684\u4f7f\u7528\u63d0\u4f9b\u6570\u636e\u652f\u6301\u3002 nocalhost-dep 1.\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u90e8\u7f72\u5fae\u670d\u52a1\u65f6\uff0c\u65e0\u6cd5\u63a7\u5236\u5fae\u670d\u52a1\u7684\u542f\u52a8\u987a\u5e8f\u548c\u4f9d\u8d56\u6027\u3002 \u4e00\u4e2a\u5178\u578b\u7684\u573a\u666f\u662f\uff1a\u670d\u52a1A \u548c\u670d\u52a1B \u90fd\u4f9d\u8d56\u4e8e Mysql\uff0cRedis\uff0cRabbitMQ\u3002 \u9664\u975e Mysql, Redeis, RabbitMQ \u90fd\u53ef\u7528\uff0c\u5426\u5219\u65e0\u6cd5\u542f\u52a8\u670d\u52a1A\u548c\u670d\u52a1B\u3002 2.\u901a\u5e38\uff0c\u5f00\u53d1\u4eba\u5458\u5fc5\u987b\u7b49\u5f85 Pod \u91cd\u65b0\u542f\u52a8\uff0c\u8fd9\u53d6\u51b3\u4e8e Kubernetes \u7684 HealthCheck Probe\u3002 \u4e00\u6b21\u53c8\u4e00\u6b21\u91cd\u542f\u540e\uff0c\u65f6\u95f4\u95f4\u9694\u5c06\u975e\u5e38\u957f\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8bb8\u591a\u5728 Kubernetes \u4e2d\u8fd0\u884c\u7684\u5927\u578b\u7cfb\u7edf\u542f\u52a8\u901f\u5ea6\u975e\u5e38\u6162\u7684\u539f\u56e0\u3002 3.nocalhost-dep \u4f7f\u7528 Kubernetes Admission Webhook\uff08\u7c7b\u4f3c\u4e8e Istio \u6ce8\u5165 Sidecar\uff09 \u53ef\u4ee5\u63a7\u5236\u542f\u52a8\u987a\u5e8f\u3002 4.\u90e8\u7f72\u5e94\u7528\u65f6\uff0cnocalhost-dep \u5c06\u81ea\u52a8\u5c06 InitContainers \u6ce8\u5165 workloads\u3002 \u6839\u636e\u58f0\u660e\u7684\u4f9d\u8d56\u5173\u7cfb\uff0cnocalhost-dep \u4f1a\u7ee7\u7eed\u7b49\u5f85\u4f9d\u8d56\u670d\u52a1\u7684\u53ef\u7528\u6027\u3002 5.\u4e00\u65e6\u6240\u6709\u4f9d\u8d56\u670d\u52a1\u53ef\u7528\uff0cInitContainer \u9000\u51fa\uff0c\u7136\u540e\u542f\u52a8\u5bb9\u5668\u4e1a\u52a1\u903b\u8f91\u7684\u5bb9\u5668\u3002 \u6ca1\u6709\u91cd\u542f\uff0c\u8fd9\u610f\u5473\u7740\u7b49\u5f85\u542f\u52a8\u7684\u65f6\u95f4\u6700\u5c11\u3002","title":"Architecture"},{"location":"zh/References/architecture/#nocalhost","text":"Nocalhost \u662f\u4e91\u539f\u751f\u5f00\u53d1\u73af\u5883\uff0c\u652f\u6301\u5f00\u53d1\u57fa\u4e8e Kubernetes \u7684\u5e94\u7528\uff1a \u4e00\u952e\u5316\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\uff0c\u5373\u4f7f\u5177\u6709\u590d\u6742\u7684\u670d\u52a1\u4f9d\u8d56\u6027 \u652f\u6301\u5728 Kubernetes \u5bb9\u5668\u5185\u90e8\u6784\u5efa\uff0c\u6d4b\u8bd5\u548c\u8c03\u8bd5\u5e94\u7528\u7a0b\u5e8f \u652f\u6301\u70ed\u52a0\u8f7d\u8fdb\u884c\u5f00\u53d1 \uff1a\u66f4\u65b0\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u800c\u65e0\u9700\u91cd\u5efa\u91cd\u5efa\u6216\u91cd\u65b0\u542f\u52a8 Pod\u3002","title":"\u4ec0\u4e48\u662fNocalhost\uff1f"},{"location":"zh/References/architecture/#nocalhost_1","text":"Nocalhost \u670d\u52a1\u7aef\u5b89\u88c5 \u5c06 Nocalhost \u670d\u52a1\u7aef\uff08nocalhost-api\uff0cnocalhost-web\uff09\u90e8\u7f72\u5230 kubernetes \u96c6\u7fa4\u3002 \u5bf9\u4e8e\u7ba1\u7406\u5458\uff1a \u4f7f\u7528 Nocalhost \u670d\u52a1\u7aef\u63d0\u4f9b\u7684\u7ba1\u7406\u754c\u9762\u521b\u5efa\u7528\u6237\uff0c\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7684 Kubernetes \u96c6\u7fa4\uff0c\u521b\u5efa\u5e94\u7528\u7a0b\u5e8f\u4ee5\u53ca\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7684DevSpace\uff08\u5f53\u524d\uff0cDevSpace = ServiceAccount + namespaces\uff09\u3002 \u5728\u914d\u7f6e Kubernetes \u96c6\u7fa4\u65f6\uff0c\u4f1a\u5728\u8be5 Kubernetest \u96c6\u7fa4\u7684 nocalhost \u540d\u79f0\u7a7a\u95f4\uff0c\u81ea\u52a8\u90e8\u7f72 nocalhost-dep \uff0cnocalhost-dep \u4e3b\u8981\u662f\u63a7\u5236\u5fae\u670d\u52a1\u542f\u52a8\u65f6\u7684\u4f9d\u8d56\u987a\u5e8f\u3002 \u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\uff1a 1.\u5b89\u88c5 Nocalhost \u5ba2\u6237\u7aef nhctl \u548c IDE \u63d2\u4ef6 \u3002 2.\u63d2\u4ef6\u4e2d\u914d\u7f6e nocalhost-api \u670d\u52a1\u5730\u5740(\u5982\uff1ahttp://localhost:8080), \u5e76\u7528\u8d26\u53f7\u5bc6\u7801\u767b\u5f55. 3.\u5e94\u7528\u7a0b\u5e8f\u4e00\u952e\u5316\u90e8\u7f72\u5230 kubernetes \u96c6\u7fa4\u3002 4.\u9009\u5b9a\u670d\u52a1\u5f00\u542f DevMode \uff0c\u5f53\u8be5\u670d\u52a1\u5207\u6362\u5230 DevMode, Nocalhost \u5c06\u8be5\u5fae\u670d\u52a1\u7684\u5bb9\u5668\u66ff\u6362\u4e3a\u914d\u7f6e\u6307\u5b9a\u7684 DevContainer \uff0c\u5c06\u6e90\u4ee3\u7801\u540c\u6b65\u5230 DevContainer\uff0c\u5e76\u5c06 DevContainer \u7684\u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\u3002 Nocalhost \u7684\u5de5\u4f5c\u793a\u610f\u56fe\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"Nocalhost \u5982\u4f55\u5de5\u4f5c\u7684\uff1f"},{"location":"zh/References/architecture/#_1","text":"","title":"\u7ec4\u4ef6\u7b80\u4ecb"},{"location":"zh/References/architecture/#ide-plugins","text":"IDE pugins \u901a\u8fc7 nhctl \u548c nocalhost-api \u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\u3002\u4e3b\u8981\u63d0\u4f9b\u4e00\u952e\u5316\u529f\u80fd\uff0c\u5982\uff1a\u5e94\u7528\u90e8\u7f72/\u5378\u8f7d\uff0cDevMode \u5f00\u542f/\u5173\u95ed\uff0c\u6587\u4ef6\u540c\u6b65\uff0c\u7aef\u53e3\u8f6c\u53d1\u7b49","title":"IDE plugins"},{"location":"zh/References/architecture/#nhctl","text":"nhctl \u662f Nocalhost \u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u4e3b\u8981\u529f\u80fd\u5982\u4e0b\uff1a \u5e94\u7528\u90e8\u7f72 Nocalhost \u5c06\u6839\u636e ~/.nh/nhctl/application/{\u5177\u4f53\u5e94\u7528}/.nocalhost/config.yaml \u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u4f9d\u8d56\u987a\u5e8f\u4f9d\u6b21\u90e8\u7f72\u5230kubernetes\u96c6\u7fa4\u3002 DevContainer \u70ed\u52a0\u8f7d\u672c\u5730\u6587\u4ef6 \u5bf9\u672c\u5730\u6e90\u4ee3\u7801\u6240\u505a\u7684\u4efb\u4f55\u66f4\u6539\u5c06\u81ea\u52a8\u540c\u6b65\u5230\u8fdc\u7a0bDevContainer\u3002 \u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u91cd\u65b0\u7f16\u8bd1\u5e76\u91cd\u65b0\u542f\u52a8\u5bb9\u5668\u5176\u8fc7\u7a0b\u4ee5\u9a8c\u8bc1\u4ee3\u7801\u66f4\u6539\u3002 \u5c06\u6765\uff0c\u6211\u4eec\u5c06\u652f\u6301\u914d\u7f6ehotreload\u547d\u4ee4\uff0c\u800c\u4e0d\u662f\u624b\u52a8\u91cd\u65b0\u542f\u52a8\u8fc7\u7a0b\u3002 \u5e94\u7528\u5378\u8f7d \u5e94\u7528\u5378\u8f7d\u4f1a\u6e05\u7a7a DevSpace \u7533\u8bf7\u7684\u8d44\u6e90\u3002","title":"nhctl"},{"location":"zh/References/architecture/#nocalhost-web","text":"nocalhost-web \u63d0\u4f9b\u4e86\u4e00\u4e2a Web \u754c\u9762\u6765\u7ba1\u7406\u7528\u6237\uff0ckubernetes \u96c6\u7fa4\uff0c\u5e94\u7528\u7a0b\u5e8f\u548c DevSpaces\u3002","title":"nocalhost-web"},{"location":"zh/References/architecture/#nocalhost-api","text":"Nocalhost-api \u901a\u8fc7 Kubernetest api-server \u7ba1\u7406 kubernetes \u96c6\u7fa4\u4e2d\u7684 serviceAccount\uff0c\u5e94\u7528\u7a0b\u5e8f\u548c DevSpace\uff0c\u5e76\u6301\u4e45\u5b58\u50a8\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u4e3a IDE plugin \u7684\u4f7f\u7528\u63d0\u4f9b\u6570\u636e\u652f\u6301\u3002","title":"nocalhost-api"},{"location":"zh/References/architecture/#nocalhost-dep","text":"1.\u5728 Kubernetes \u96c6\u7fa4\u4e2d\u90e8\u7f72\u5fae\u670d\u52a1\u65f6\uff0c\u65e0\u6cd5\u63a7\u5236\u5fae\u670d\u52a1\u7684\u542f\u52a8\u987a\u5e8f\u548c\u4f9d\u8d56\u6027\u3002 \u4e00\u4e2a\u5178\u578b\u7684\u573a\u666f\u662f\uff1a\u670d\u52a1A \u548c\u670d\u52a1B \u90fd\u4f9d\u8d56\u4e8e Mysql\uff0cRedis\uff0cRabbitMQ\u3002 \u9664\u975e Mysql, Redeis, RabbitMQ \u90fd\u53ef\u7528\uff0c\u5426\u5219\u65e0\u6cd5\u542f\u52a8\u670d\u52a1A\u548c\u670d\u52a1B\u3002 2.\u901a\u5e38\uff0c\u5f00\u53d1\u4eba\u5458\u5fc5\u987b\u7b49\u5f85 Pod \u91cd\u65b0\u542f\u52a8\uff0c\u8fd9\u53d6\u51b3\u4e8e Kubernetes \u7684 HealthCheck Probe\u3002 \u4e00\u6b21\u53c8\u4e00\u6b21\u91cd\u542f\u540e\uff0c\u65f6\u95f4\u95f4\u9694\u5c06\u975e\u5e38\u957f\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8bb8\u591a\u5728 Kubernetes \u4e2d\u8fd0\u884c\u7684\u5927\u578b\u7cfb\u7edf\u542f\u52a8\u901f\u5ea6\u975e\u5e38\u6162\u7684\u539f\u56e0\u3002 3.nocalhost-dep \u4f7f\u7528 Kubernetes Admission Webhook\uff08\u7c7b\u4f3c\u4e8e Istio \u6ce8\u5165 Sidecar\uff09 \u53ef\u4ee5\u63a7\u5236\u542f\u52a8\u987a\u5e8f\u3002 4.\u90e8\u7f72\u5e94\u7528\u65f6\uff0cnocalhost-dep \u5c06\u81ea\u52a8\u5c06 InitContainers \u6ce8\u5165 workloads\u3002 \u6839\u636e\u58f0\u660e\u7684\u4f9d\u8d56\u5173\u7cfb\uff0cnocalhost-dep \u4f1a\u7ee7\u7eed\u7b49\u5f85\u4f9d\u8d56\u670d\u52a1\u7684\u53ef\u7528\u6027\u3002 5.\u4e00\u65e6\u6240\u6709\u4f9d\u8d56\u670d\u52a1\u53ef\u7528\uff0cInitContainer \u9000\u51fa\uff0c\u7136\u540e\u542f\u52a8\u5bb9\u5668\u4e1a\u52a1\u903b\u8f91\u7684\u5bb9\u5668\u3002 \u6ca1\u6709\u91cd\u542f\uff0c\u8fd9\u610f\u5473\u7740\u7b49\u5f85\u542f\u52a8\u7684\u65f6\u95f4\u6700\u5c11\u3002","title":"nocalhost-dep"},{"location":"zh/References/nocalhost-config-yaml-spec/","text":"Nocalhost \u914d\u7f6e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 # \u5e94\u7528\u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32(\u7b26\u5408 dns1123 \u6807\u51c6) # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: [NAME] # \u552f\u4e00 name : nocalhost # \u5e94\u7528 manifest \u7c7b\u578b # \u7c7b\u578b: \u5355\u9009\uff0c\u53ef\u9009\u9879\uff1ahelmGit/helmRepo/rawManiifest # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: --type,-t manifest\u7c7b\u578b : helmGit # helmGit\u7c7b\u578b\u6b64\u5b57\u6bb5\u4ee3\u8868 Chart \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u6839\u76ee\u5f55\u7684\u4f4d\u7f6e\u3002helmRepo \u7c7b\u578b\uff0c\u6b64\u5b57\u6bb5\u65e0\u610f\u4e49\u3002rawManifest \u7c7b\u578b\uff0c\u6b64\u5b57\u6bb5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a k8s manifest \u6587\u4ef6\u5939\u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u4f4d\u7f6e\u3002 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\".\"] # \u5fc5\u987b\u63d0\u4f9b resourcePath : [ \"deployments/chart\" ] # \u6307\u660e\u5e94\u7528\u662f\u5426\u4ee5\u6700\u5c0f\u526f\u672c\u6570\u91cf\u5b89\u88c5 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: boolean # \u9ed8\u8ba4\u503c: false # \u53ef\u9009 # \u5bf9\u5e94 nhctl \u53c2\u6570: TODO minimalInstall : false # \u5e94\u7528\u5b89\u88c5\u524d\u7684\u6267\u884c\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPreInstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5b89\u88c5\u5b8c\u6bd5\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPostInstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5378\u8f7d\u524d\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPreUninstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5378\u8f7d\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPostUninstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5185\u7684\u5fae\u670d\u52a1\u5217\u8868 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 services : # \u5fae\u670d\u52a1\u7684\u540d\u5b57 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u53ef\u9009 - name : service1 # \u5fae\u670d\u52a1\u5bf9\u5e94\u7684 k8s \u5de5\u4f5c\u8d1f\u8f7d\u7c7b\u578b # \u7c7b\u578b: \u5355\u9009, \u53ef\u9009\u9879: deployment/statefulset/pod/job/cronjob/daemonset \u5927\u5c0f\u5199\u4e0d\u654f\u611f # \u9ed8\u8ba4\u503c: deployment # \u5fc5\u987b\u63d0\u4f9b serviceType : deployment # \u5fae\u670d\u52a1\u7684\u6e90\u7801 Git \u4ed3\u5e93\u5730\u5740 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b gitUrl : \"https://github.com/nocalhost/nocalhost.git\" # \u5fae\u670d\u52a1\u7684 DevContainer \u955c\u50cf # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b devContainerImage : \"codingcorp.coding.net/xxxx/go:latest\" # \u8fdb\u5165 DevMode \u65f6\uff0c\u9ed8\u8ba4\u7684 shell \u73af\u5883 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"/bin/sh\" # \u53ef\u9009 devContainerShell : \"bash\" # \u6587\u4ef6\u540c\u6b65\u6a21\u5f0f (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \"send\" \u5355\u5411\u540c\u6b65\u672c\u5730\u6587\u4ef6\u5230\u5bb9\u5668, \"sendreceive\" \u53cc\u5411\u540c\u6b65 # \u7c7b\u578b: \u5355\u9009\uff0csend/sendreceive # \u9ed8\u8ba4\u503c: \"send\" # \u53ef\u9009 syncType : send # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\".\"] # \u53ef\u9009 syncDirs : - \"./src\" - \"./pkg/fff\" # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u5ffd\u7565\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 ignoreDirs : - \".git\" - \"./build\" # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u9700\u8981\u8f6c\u53d1\u7684\u7aef\u53e3\u5217\u8868 # \u672c\u5730\u7aef\u53e3:\u8fdc\u7aef\u7aef\u53e3 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 devPort : - 8080:8080 - :8000 # \u968f\u673a\u672c\u5730\u7aef\u53e3, \u8fdc\u7aef 8000 # \u6307\u660e\u4f9d\u8d56\u7684 Pods \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Pod \u5904\u4e8e Ready \u72b6\u6001\u624d\u542f\u52a8) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 dependPodsLabelSelector : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # \u6307\u660e\u4f9d\u8d56\u7684 Jobs \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Job \u6267\u884c\u5b8c\u6bd5\u624d\u542f\u52a8) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 dependJobsLabelSelector : - \"name=init-job\" - \"app.kubernetes.io/name=init-job\" # \u6307\u5b9a DevContainer \u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u6e90\u7801\u4f1a\u88ab\u4f20\u8f93\u5230\u6b64\u76ee\u5f55 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"/home/nocalhost-dev\" # \u53ef\u9009 workDir : \"/home/nocalhost-dev\" # DevContainer \u4e2d\u9700\u8981\u6301\u4e45\u5316\u5b58\u50a8\u7684\u76ee\u5f55\u5217\u8868 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\"/home/nocalhost-dev\"] # \u53ef\u9009 persistentVolumeDir : - \"/home/nocalhost-dev\" # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u6784\u5efa\u7f16\u8bd1\u547d\u4ee4 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 buildCommand : \"./gradlew package\" # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 runCommand : \"./gradlew bootRun\" # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 debugCommand : \"./gradlew bootRun --debug-jvm\" # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadRunCommand : \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadDebugCommand : \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" # \u8be5\u670d\u52a1\u7684\u8fdc\u7a0b\u8c03\u8bd5\u7aef\u53e3 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 remoteDebugPort : 5005 # \u4f7f\u7528 Git \u4ed3\u5e93\u4e2d\u7684 .dev-container \u58f0\u660e\u6765\u6307\u5b9a DevContainer \u955c\u50cf (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 useDevContainer : false - name : service2 ...","title":"Nocalhost \u914d\u7f6e\u8bf4\u660e"},{"location":"zh/References/nocalhost-config-yaml-spec/#nocalhost","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 # \u5e94\u7528\u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32(\u7b26\u5408 dns1123 \u6807\u51c6) # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: [NAME] # \u552f\u4e00 name : nocalhost # \u5e94\u7528 manifest \u7c7b\u578b # \u7c7b\u578b: \u5355\u9009\uff0c\u53ef\u9009\u9879\uff1ahelmGit/helmRepo/rawManiifest # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b # \u5bf9\u5e94 nhctl \u53c2\u6570: --type,-t manifest\u7c7b\u578b : helmGit # helmGit\u7c7b\u578b\u6b64\u5b57\u6bb5\u4ee3\u8868 Chart \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u6839\u76ee\u5f55\u7684\u4f4d\u7f6e\u3002helmRepo \u7c7b\u578b\uff0c\u6b64\u5b57\u6bb5\u65e0\u610f\u4e49\u3002rawManifest \u7c7b\u578b\uff0c\u6b64\u5b57\u6bb5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a k8s manifest \u6587\u4ef6\u5939\u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u4f4d\u7f6e\u3002 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\".\"] # \u5fc5\u987b\u63d0\u4f9b resourcePath : [ \"deployments/chart\" ] # \u6307\u660e\u5e94\u7528\u662f\u5426\u4ee5\u6700\u5c0f\u526f\u672c\u6570\u91cf\u5b89\u88c5 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: boolean # \u9ed8\u8ba4\u503c: false # \u53ef\u9009 # \u5bf9\u5e94 nhctl \u53c2\u6570: TODO minimalInstall : false # \u5e94\u7528\u5b89\u88c5\u524d\u7684\u6267\u884c\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPreInstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5b89\u88c5\u5b8c\u6bd5\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPostInstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5378\u8f7d\u524d\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPreUninstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5378\u8f7d\u540e\u6267\u884c\u7684\u4efb\u52a1\uff0c\u987b\u6307\u5b9a k8s Job \u7684 yaml\u6587\u4ef6 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 onPostUninstall : # Job \u7684 yaml \u6587\u4ef6, \u76f8\u5bf9\u4e8e Git \u4ed3\u5e93\u7684\u6839\u76ee\u5f55 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b - path : \"job-1.yaml\" # Job \u540d\u79f0 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u5fc5\u987b\u63d0\u4f9b name : xxx-job # \u6267\u884c\u987a\u5e8f\uff0c\u8d8a\u5c0f\u8d8a\u5148\u6267\u884c # \u7c7b\u578b: \u6574\u578b # \u9ed8\u8ba4\u503c: 0 # \u53ef\u9009 priority : -1 - path : \"job-2.yaml\" name : xxx2-job priority : 5 # \u5e94\u7528\u5185\u7684\u5fae\u670d\u52a1\u5217\u8868 # \u7c7b\u578b: object[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 services : # \u5fae\u670d\u52a1\u7684\u540d\u5b57 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u53ef\u9009 - name : service1 # \u5fae\u670d\u52a1\u5bf9\u5e94\u7684 k8s \u5de5\u4f5c\u8d1f\u8f7d\u7c7b\u578b # \u7c7b\u578b: \u5355\u9009, \u53ef\u9009\u9879: deployment/statefulset/pod/job/cronjob/daemonset \u5927\u5c0f\u5199\u4e0d\u654f\u611f # \u9ed8\u8ba4\u503c: deployment # \u5fc5\u987b\u63d0\u4f9b serviceType : deployment # \u5fae\u670d\u52a1\u7684\u6e90\u7801 Git \u4ed3\u5e93\u5730\u5740 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b gitUrl : \"https://github.com/nocalhost/nocalhost.git\" # \u5fae\u670d\u52a1\u7684 DevContainer \u955c\u50cf # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: null # \u5fc5\u987b\u63d0\u4f9b devContainerImage : \"codingcorp.coding.net/xxxx/go:latest\" # \u8fdb\u5165 DevMode \u65f6\uff0c\u9ed8\u8ba4\u7684 shell \u73af\u5883 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"/bin/sh\" # \u53ef\u9009 devContainerShell : \"bash\" # \u6587\u4ef6\u540c\u6b65\u6a21\u5f0f (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \"send\" \u5355\u5411\u540c\u6b65\u672c\u5730\u6587\u4ef6\u5230\u5bb9\u5668, \"sendreceive\" \u53cc\u5411\u540c\u6b65 # \u7c7b\u578b: \u5355\u9009\uff0csend/sendreceive # \u9ed8\u8ba4\u503c: \"send\" # \u53ef\u9009 syncType : send # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\".\"] # \u53ef\u9009 syncDirs : - \"./src\" - \"./pkg/fff\" # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u8981\u5ffd\u7565\u540c\u6b65\u7684\u76ee\u5f55\u5217\u8868 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 ignoreDirs : - \".git\" - \"./build\" # \u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u9700\u8981\u8f6c\u53d1\u7684\u7aef\u53e3\u5217\u8868 # \u672c\u5730\u7aef\u53e3:\u8fdc\u7aef\u7aef\u53e3 # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 devPort : - 8080:8080 - :8000 # \u968f\u673a\u672c\u5730\u7aef\u53e3, \u8fdc\u7aef 8000 # \u6307\u660e\u4f9d\u8d56\u7684 Pods \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Pod \u5904\u4e8e Ready \u72b6\u6001\u624d\u542f\u52a8) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 dependPodsLabelSelector : - \"name=mariadb\" - \"app.kubernetes.io/name=mariadb\" # \u6307\u660e\u4f9d\u8d56\u7684 Jobs \u6807\u7b7e\u9009\u62e9\u5668 (\u5f53\u524d\u670d\u52a1\u4f1a\u7b49\u5f85\u88ab\u6807\u7b7e\u9009\u62e9\u5668\u9009\u4e2d\u7684 Job \u6267\u884c\u5b8c\u6bd5\u624d\u542f\u52a8) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [] # \u53ef\u9009 dependJobsLabelSelector : - \"name=init-job\" - \"app.kubernetes.io/name=init-job\" # \u6307\u5b9a DevContainer \u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u6e90\u7801\u4f1a\u88ab\u4f20\u8f93\u5230\u6b64\u76ee\u5f55 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"/home/nocalhost-dev\" # \u53ef\u9009 workDir : \"/home/nocalhost-dev\" # DevContainer \u4e2d\u9700\u8981\u6301\u4e45\u5316\u5b58\u50a8\u7684\u76ee\u5f55\u5217\u8868 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32[] # \u9ed8\u8ba4\u503c: [\"/home/nocalhost-dev\"] # \u53ef\u9009 persistentVolumeDir : - \"/home/nocalhost-dev\" # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u6784\u5efa\u7f16\u8bd1\u547d\u4ee4 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 buildCommand : \"./gradlew package\" # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 runCommand : \"./gradlew bootRun\" # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 debugCommand : \"./gradlew bootRun --debug-jvm\" # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u670d\u52a1\u547d\u4ee4 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadRunCommand : \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun\" # \u5728\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u7684\u652f\u6301\u70ed\u52a0\u8f7d\u7684\u542f\u52a8\u8c03\u8bd5\u670d\u52a1\u547d\u4ee4 (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 hotReloadDebugCommand : \"kill `ps -ef|grep -i gradlew| grep -v grep| awk '{print $2}'`; gradlew bootRun --debug-jvm\" # \u8be5\u670d\u52a1\u7684\u8fdc\u7a0b\u8c03\u8bd5\u7aef\u53e3 # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 remoteDebugPort : 5005 # \u4f7f\u7528 Git \u4ed3\u5e93\u4e2d\u7684 .dev-container \u58f0\u660e\u6765\u6307\u5b9a DevContainer \u955c\u50cf (\u6682\u672a\u5b9e\u73b0\uff0c\u672a\u6765\u652f\u6301) # \u7c7b\u578b: \u5b57\u7b26\u4e32 # \u9ed8\u8ba4\u503c: \"\" # \u53ef\u9009 useDevContainer : false - name : service2 ...","title":"Nocalhost \u914d\u7f6e"},{"location":"zh/Tutorials/nocalhost-with-helm/","text":"\u524d\u7f6e\u6761\u4ef6 \uff1a \u4e00\u4e2a Kubernetes(1.16+) \u96c6\u7fa4(\u5efa\u8bae\u7531\u4e91\u5e73\u53f0\u63d0\u4f9b\uff0cMinikube \u4e5f\u53ef\u4ee5) \u914d\u7f6e\u597d kubectl \u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8bbf\u95ee\u4e0a\u8ff0\u96c6\u7fa4 \u96c6\u7fa4\u5fc5\u987b\u542f\u7528 RBAC \u5b89\u88c5\u597d Helm3 \u5b89\u88c5\u597d Visual Studio Code(1.31+) \u5b89\u88c5\u597d Git \u5b89\u88c5 Nocalhost \u5ba2\u6237\u7aef (nhctl, IDE plugin) , \u5b89\u88c5\u6559\u7a0b \u5b89\u88c5 Nocalhost \u670d\u52a1\u7aef (nocalhost-api, nocalhost-web) \u53c2\u8003\u5feb\u901f\u4e0a\u624b\u7684\u7b2c\u4e8c\u6b65 1.\u5e94\u7528\u914d\u7f6e 1.1 \u662f\u5426\u9700\u8981\u5b9a\u4e49\u5fae\u670d\u52a1\u5e94\u7528\uff0c\u670d\u52a1\u542f\u52a8\u7684\u4f9d\u8d56\uff0c\u5982\u679c\u4e0d\u9700\u8981\u5219\u8df3\u8fc7\u8fd9\u6b65\u9aa4\uff0c\u5728\u6b65\u9aa4\u30105.\u5f00\u542f DevMode\u3011\u914d\u7f6e\u8981\u5f00\u53d1\u7684\u670d\u52a1\u4fe1\u606f\u5373\u53ef\u3002 1.2 \u5e94\u7528\u7684 Helm Chart \u4ed3\u5e93\u6839\u76ee\u5f55\u6dfb\u52a0 .nocalhost/config \u914d\u7f6e\u6587\u4ef6, \u5982\u56fe\u6240\u793a\uff1a 1.3 \u914d\u7f6e\u6587\u4ef6\uff08.nocalhost/config\uff09\u5bf9\u5e94\u7528\u90e8\u7f72\u65b9\u5f0f, \u90e8\u7f72\u4f9d\u8d56, \u6e90\u7801\u7684 git \u4ed3\u5e93, DevContainer \u7684\u955c\u50cf,\u4ee5\u53ca\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u6587\u4ef6\u76ee\u5f55\u7b49\u505a\u5b9a\u4e49\uff0c\u5982\u4e0b\u662f bookinfo \u5e94\u7528\u7684 manifest b\u90e8\u7f72\u65b9\u5f0f\u7684\u914d\u7f6e\u3002 name: bookinfo # \u5e94\u7528\u7684\u540d\u79f0 manifestType: helmGit # \u5e94\u7528\u90e8\u7f72\u65b9\u5f0f resourcePath: [\"charts/bookinfo/\"] # \u670d\u52a1\u7684 chart \u5305\u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55\uff0c\u9ed8\u8ba4\u4ed3\u5e93\u6839\u76ee\u5f55 onPreInstall: # \u5e94\u7528\u90e8\u7f72\u524d\uff0c\u9700\u63d0\u524d\u90e8\u7f72\u7684\u8d44\u6e90\uff0c\u6743\u503c\u8d8a\u5c0f\uff0c\u6807\u8bc6\u4f18\u5148\u7ea7\u8d8a\u9ad8 - path: manifest/templates/pre-install/print-num-job-01.yaml weight: \"1\" - path: manifest/templates/pre-install/print-num-job-02.yaml weight: \"-5\" services: - name: productpage # \u670d\u52a1\u540d\u79f0 serviceType: deployment # Kubernetes \u90e8\u7f72\u8d44\u6e90\u7684\u7c7b\u578b\uff08deployment/statefulset/pod/job/cronjob/daemonset\uff09\uff0c\u9ed8\u8ba4 deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage.git # \u670d\u52a1\u7684 git \u4ed3\u5e93 devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage # DevMode \u4f7f\u7528\u7684 docker image workDir: /home/nocalhost-dev # DevContainer \u5bb9\u5668\u4e2d\u5b58\u653e\u672c\u5730\u540c\u6b65\u4ee3\u7801\u7684\u76ee\u5f55 syncDirs: # \u8868\u793a\u8981\u540c\u6b65\u672c\u5730\u7684\u4ec0\u4e48\u76ee\u5f55\u5230 DevContainer \u4e2d\uff0c\u9ed8\u8ba4\u5e94\u7528\u5f53\u524d\u76ee\u5f55 - ./ devPorts: # DevContainer port-forwar \u5230\u672c\u5730\u7684\u7aef\u53e3 \u5982\uff1a9080:9080 \u8868\u793a \u672c\u57309080\u8f6c\u53d1\u52309080, :9080 \u8868\u793a\u672c\u5730\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230\u96c6\u7fa49080 - :9080 dependJobsLabelSelector: # productpage \u542f\u52a8\u9700\u8981\u4f9d\u8d56 dep-job \u542f\u52a8\u5b8c\u6210\uff0c\u5982\u679c\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u53ef\u4ee5\u5220\u9664\u8be5\u9879\u914d\u7f6e - \"dep-job\" - name: details serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-details.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/ruby:2.7.1-slim syncDirs: - ./ workDir: /home/nocalhost-dev - name: ratings serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-ratings.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/node:12.18.1-slim workDir: /home/nocalhost-dev syncDirs: - ./ dependJobsLabelSelector: - \"dep-job\" dependPodsLabelSelector: - \"productpage\" - \"app.kubernetes.io/name=productpage\" - name: reviews serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-reviews.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest workDir: /home/nocalhost-dev syncDirs: - ./ dependPodsLabelSelector: - \"productpage\" \u66f4\u8be6\u7ec6\u7684\u53c2\u6570\u7684\u4f7f\u7528\u8bf4\u660e\uff0c\u8bf7 \u70b9\u51fb \u3002 2. Nocalhost \u670d\u52a1\u7aef\u914d\u7f6e Nocalhost\u670d\u52a1\u7aef\u914d\u7f6e\uff0c\u53ef\u901a\u8fc7web\u9875\u9762\u8fdb\u884c\u914d\u7f6e\uff08\u521b\u5efa\u5f00\u53d1\u8005\u8d26\u6237\uff0c\u914d\u7f6eKubernetes Clust\uff0c\u521b\u5efa\u5e94\u7528\u5e76\u5173\u8054 DevSpace\uff09. - 2.1 \u521b\u5efa\u7528\u6237, \u7528\u6237\u540d\u548c\u5bc6\u7801\u5728 IDE plugin \u63d2\u4ef6\u7aef\u505a\u767b\u5f55\u4f7f\u7528 2.2 \u914d\u7f6e\u5f00\u53d1 Kubernetes Cluster, \u5efa\u8bae\u914d\u7f6e admin \u89d2\u8272\u7684 kubeconfig 2.3 \u521b\u5efa\u5e94\u7528 \u3010Manifest Type\u3011: \u5e94\u7528\u90e8\u7f72\u7c7b\u578b Helm Chart; \u3010Git Repo Url\u3011: \u914d\u7f6e\u5e94\u7528 Helm Chart Git \u4ed3\u5e93\uff08https/ssh\uff09; \u3010Resource Dir\u3011: Helm Chart \u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55, \u9ed8\u8ba4\u662f\u4ed3\u5e93\u6839\u76ee\u5f55\u3002 2.4 \u521b\u5efa\u5e94\u7528\u7684 DevSpace \u5e94\u7528\u5217\u8868\uff0c\u70b9\u51fb \u3010create\u3011, \u9009\u62e9\u5e94\u7528\u8981\u90e8\u7f72\u7684 Kubernetest cluster, DevSpace \u5206\u914d\u7ed9\u54ea\u4e2a user\u3002 3. Nocalhost \u5ba2\u6237\u7aef\u914d\u7f6e \u914d\u7f6e Nocalhost \u670d\u52a1\u7aef\u8bbf\u95ee\u5730\u5740\uff0c\u7136\u540e\u767b\u5f55, \u5e76\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json \u670d\u52a1\u7aef\u5730\u5740\u83b7\u53d6\uff1aNocalhost server \u90e8\u7f72\u65f6\u83b7\u53d6\u5230\u7684 server url\uff08\u5982\uff1ahttp://127.0.0.1:8080\uff09\u3002\u6216\u8005\u5728 Nocalhost Server \u90e8\u7f72\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u67e5\u770b nocalhost-api \u670d\u52a1\u5bf9\u5916\u66b4\u9732\u7684\u8bbf\u95ee\u65b9\u5f0f\uff08\u5982:loadBlance/NodePort\u7b49\uff09\u3002 \u767b\u5f55\u8d26\u53f7\u83b7\u53d6\uff1a[2.1] \u6b65\u9aa4\u521b\u5efa\u7684\u8d26\u53f7\u5bc6\u7801 4. \u5e94\u7528\u90e8\u7f72 \u90e8\u7f72\u5e94\u7528, \u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u7684 values.yaml \u6216\u8005\u81ea\u5b9a\u4e49\u7684 values.yaml\u3002 \u90e8\u7f72\u5b8c\u6210\u7684\u6548\u679c 5. \u5f00\u542f DevMode (\u5f00\u59cb\u5f00\u53d1) 5.1 \u68c0\u67e5\u9009\u62e9\u5f00\u53d1\u7684\u670d\u52a1\u53c2\u6570\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u51fa\u73b0\u4e0b\u56fe\u7684\u60c5\u51b5\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u670d\u52a1\u8fd8\u6ca1\u8fdb\u884c\u53c2\u6570\u914d\u7f6e\uff0c\u5177\u4f53\u53c2\u6570\u914d\u7f6e\u53c2\u8003 \u6b65\u9aa4\u30101.\u5e94\u7528\u914d\u7f6e\u3011 5.2 \u9009\u62e9\u8981\u5f00\u53d1\u7684\u670d\u52a1\uff0c\u70b9\u51fb\u53f3\u8fb9\u7684\u7eff\u8272\u201c\u9524\u5b50\u201c\u7684\u56fe\u6807\uff0c\u7136\u540e\u9009\u62e9\u201cclone from Git repo\u201d \u6216\u8005 \u201copen local directory\u201d \u52a0\u8f7d\u6e90\u7801, \u9879\u76ee\u7684\u4f4d\u7f6e\u4f1a\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json \u4e2d\uff0c\u518d\u6b21\u8fdb\u5165 DevMode \u5f00\u53d1\uff0c\u5219\u4f1a\u76f4\u63a5\u4f7f\u7528\u7f13\u5b58\u7684\u76ee\u5f55\u8fdb\u884c\u6e90\u7801\u52a0\u8f7d\u3002 5.3 \u5f00\u542f DevMode \u6210\u529f\uff0c\u4f1a\u81ea\u52a8\u628a DevContainer \u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\uff0c\u5728 IDE \u5f39\u51fa\u547d\u4ee4\u7a97\u53e3\u3002\u6b64\u65f6\u5c31\u53ef\u4ee5\u4eab\u53d7\u5f00\u53d1\uff0c\u4ee3\u7801\u7684\u4efb\u4f55\u53d8\u66f4\uff0c\u4f1a\u5b9e\u65f6\u540c\u6b65\u5230 DevContainer \u5bb9\u5668\u3002 5.4 \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u7f16\u8bd1\u5e76\u8fd0\u884c\uff0cDevContainer \u662f\u4e00\u4e2a\u62e5\u6709\u7f16\u8bd1\u73af\u5883\u7684\u955c\u50cf\uff0c\u7f16\u8bd1\u5b8c\u6210\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u3002\u7f16\u8bd1\u811a\u672c\u548c\u8fd0\u884c\u7684\u811a\u672c\uff0c\u9700\u8981\u7528\u6237\u81ea\u5df1\u51c6\u5907\uff0c\u5982 bookinfo productpage \u63d0\u4f9b\u7684\u811a\u672c\uff1a sh run.sh 5.5 \u5982\u679c\u9009\u62e9\u7684\u662f\u540c\u6b65\u672c\u5730\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5230 DevContainer \uff0c \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\uff0c\u5bf9 .nocalhost/config \u914d\u7f6e\u6587\u4ef6\u7684\u505a\u5982\u4e0b\u4fee\u6539\u3002 services: ... syncDirs: # \u540c\u6b65\u76ee\u5f55\u914d\u7f6e\u4e3a\u7f16\u8bd1\u76ee\u5f55\u5373\u53ef - ./ ... 6. \u5173\u95ed DevMode (\u5f00\u53d1\u7ed3\u675f) \u70b9\u51fb \u30105.1\u3011 \u90a3\u4e2a\u9524\u5b50\u7684\u6807\u8bc6\uff08\u5f00\u53d1\u4e2d\u4f1a\u53d8\u6210\u7ea2\u8272\u5e26\u63d2\u7684\u56fe\u6807\uff09\uff0c\u7ed3\u675f DevMode 7. \u5e94\u7528\u5378\u8f7d \u5728\u5e94\u7528\u5f00\u53d1\u7ed3\u675f\u65f6\uff0c\u5378\u8f7d\u5e94\u7528\uff0c\u4f1a DevSpace \u7684\u8d44\u6e90\u8fdb\u884c\u91ca\u653e\u56de\u6536\u3002","title":"Nocalhost with helm"},{"location":"zh/Tutorials/nocalhost-with-helm/#1","text":"1.1 \u662f\u5426\u9700\u8981\u5b9a\u4e49\u5fae\u670d\u52a1\u5e94\u7528\uff0c\u670d\u52a1\u542f\u52a8\u7684\u4f9d\u8d56\uff0c\u5982\u679c\u4e0d\u9700\u8981\u5219\u8df3\u8fc7\u8fd9\u6b65\u9aa4\uff0c\u5728\u6b65\u9aa4\u30105.\u5f00\u542f DevMode\u3011\u914d\u7f6e\u8981\u5f00\u53d1\u7684\u670d\u52a1\u4fe1\u606f\u5373\u53ef\u3002 1.2 \u5e94\u7528\u7684 Helm Chart \u4ed3\u5e93\u6839\u76ee\u5f55\u6dfb\u52a0 .nocalhost/config \u914d\u7f6e\u6587\u4ef6, \u5982\u56fe\u6240\u793a\uff1a 1.3 \u914d\u7f6e\u6587\u4ef6\uff08.nocalhost/config\uff09\u5bf9\u5e94\u7528\u90e8\u7f72\u65b9\u5f0f, \u90e8\u7f72\u4f9d\u8d56, \u6e90\u7801\u7684 git \u4ed3\u5e93, DevContainer \u7684\u955c\u50cf,\u4ee5\u53ca\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u6587\u4ef6\u76ee\u5f55\u7b49\u505a\u5b9a\u4e49\uff0c\u5982\u4e0b\u662f bookinfo \u5e94\u7528\u7684 manifest b\u90e8\u7f72\u65b9\u5f0f\u7684\u914d\u7f6e\u3002 name: bookinfo # \u5e94\u7528\u7684\u540d\u79f0 manifestType: helmGit # \u5e94\u7528\u90e8\u7f72\u65b9\u5f0f resourcePath: [\"charts/bookinfo/\"] # \u670d\u52a1\u7684 chart \u5305\u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55\uff0c\u9ed8\u8ba4\u4ed3\u5e93\u6839\u76ee\u5f55 onPreInstall: # \u5e94\u7528\u90e8\u7f72\u524d\uff0c\u9700\u63d0\u524d\u90e8\u7f72\u7684\u8d44\u6e90\uff0c\u6743\u503c\u8d8a\u5c0f\uff0c\u6807\u8bc6\u4f18\u5148\u7ea7\u8d8a\u9ad8 - path: manifest/templates/pre-install/print-num-job-01.yaml weight: \"1\" - path: manifest/templates/pre-install/print-num-job-02.yaml weight: \"-5\" services: - name: productpage # \u670d\u52a1\u540d\u79f0 serviceType: deployment # Kubernetes \u90e8\u7f72\u8d44\u6e90\u7684\u7c7b\u578b\uff08deployment/statefulset/pod/job/cronjob/daemonset\uff09\uff0c\u9ed8\u8ba4 deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage.git # \u670d\u52a1\u7684 git \u4ed3\u5e93 devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage # DevMode \u4f7f\u7528\u7684 docker image workDir: /home/nocalhost-dev # DevContainer \u5bb9\u5668\u4e2d\u5b58\u653e\u672c\u5730\u540c\u6b65\u4ee3\u7801\u7684\u76ee\u5f55 syncDirs: # \u8868\u793a\u8981\u540c\u6b65\u672c\u5730\u7684\u4ec0\u4e48\u76ee\u5f55\u5230 DevContainer \u4e2d\uff0c\u9ed8\u8ba4\u5e94\u7528\u5f53\u524d\u76ee\u5f55 - ./ devPorts: # DevContainer port-forwar \u5230\u672c\u5730\u7684\u7aef\u53e3 \u5982\uff1a9080:9080 \u8868\u793a \u672c\u57309080\u8f6c\u53d1\u52309080, :9080 \u8868\u793a\u672c\u5730\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230\u96c6\u7fa49080 - :9080 dependJobsLabelSelector: # productpage \u542f\u52a8\u9700\u8981\u4f9d\u8d56 dep-job \u542f\u52a8\u5b8c\u6210\uff0c\u5982\u679c\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u53ef\u4ee5\u5220\u9664\u8be5\u9879\u914d\u7f6e - \"dep-job\" - name: details serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-details.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/ruby:2.7.1-slim syncDirs: - ./ workDir: /home/nocalhost-dev - name: ratings serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-ratings.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/node:12.18.1-slim workDir: /home/nocalhost-dev syncDirs: - ./ dependJobsLabelSelector: - \"dep-job\" dependPodsLabelSelector: - \"productpage\" - \"app.kubernetes.io/name=productpage\" - name: reviews serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-reviews.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest workDir: /home/nocalhost-dev syncDirs: - ./ dependPodsLabelSelector: - \"productpage\" \u66f4\u8be6\u7ec6\u7684\u53c2\u6570\u7684\u4f7f\u7528\u8bf4\u660e\uff0c\u8bf7 \u70b9\u51fb \u3002","title":"1.\u5e94\u7528\u914d\u7f6e"},{"location":"zh/Tutorials/nocalhost-with-helm/#2-nocalhost","text":"Nocalhost\u670d\u52a1\u7aef\u914d\u7f6e\uff0c\u53ef\u901a\u8fc7web\u9875\u9762\u8fdb\u884c\u914d\u7f6e\uff08\u521b\u5efa\u5f00\u53d1\u8005\u8d26\u6237\uff0c\u914d\u7f6eKubernetes Clust\uff0c\u521b\u5efa\u5e94\u7528\u5e76\u5173\u8054 DevSpace\uff09. - 2.1 \u521b\u5efa\u7528\u6237, \u7528\u6237\u540d\u548c\u5bc6\u7801\u5728 IDE plugin \u63d2\u4ef6\u7aef\u505a\u767b\u5f55\u4f7f\u7528 2.2 \u914d\u7f6e\u5f00\u53d1 Kubernetes Cluster, \u5efa\u8bae\u914d\u7f6e admin \u89d2\u8272\u7684 kubeconfig 2.3 \u521b\u5efa\u5e94\u7528 \u3010Manifest Type\u3011: \u5e94\u7528\u90e8\u7f72\u7c7b\u578b Helm Chart; \u3010Git Repo Url\u3011: \u914d\u7f6e\u5e94\u7528 Helm Chart Git \u4ed3\u5e93\uff08https/ssh\uff09; \u3010Resource Dir\u3011: Helm Chart \u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55, \u9ed8\u8ba4\u662f\u4ed3\u5e93\u6839\u76ee\u5f55\u3002 2.4 \u521b\u5efa\u5e94\u7528\u7684 DevSpace \u5e94\u7528\u5217\u8868\uff0c\u70b9\u51fb \u3010create\u3011, \u9009\u62e9\u5e94\u7528\u8981\u90e8\u7f72\u7684 Kubernetest cluster, DevSpace \u5206\u914d\u7ed9\u54ea\u4e2a user\u3002","title":"2. Nocalhost \u670d\u52a1\u7aef\u914d\u7f6e"},{"location":"zh/Tutorials/nocalhost-with-helm/#3-nocalhost","text":"\u914d\u7f6e Nocalhost \u670d\u52a1\u7aef\u8bbf\u95ee\u5730\u5740\uff0c\u7136\u540e\u767b\u5f55, \u5e76\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json \u670d\u52a1\u7aef\u5730\u5740\u83b7\u53d6\uff1aNocalhost server \u90e8\u7f72\u65f6\u83b7\u53d6\u5230\u7684 server url\uff08\u5982\uff1ahttp://127.0.0.1:8080\uff09\u3002\u6216\u8005\u5728 Nocalhost Server \u90e8\u7f72\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u67e5\u770b nocalhost-api \u670d\u52a1\u5bf9\u5916\u66b4\u9732\u7684\u8bbf\u95ee\u65b9\u5f0f\uff08\u5982:loadBlance/NodePort\u7b49\uff09\u3002 \u767b\u5f55\u8d26\u53f7\u83b7\u53d6\uff1a[2.1] \u6b65\u9aa4\u521b\u5efa\u7684\u8d26\u53f7\u5bc6\u7801","title":"3. Nocalhost \u5ba2\u6237\u7aef\u914d\u7f6e"},{"location":"zh/Tutorials/nocalhost-with-helm/#4","text":"\u90e8\u7f72\u5e94\u7528, \u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u7684 values.yaml \u6216\u8005\u81ea\u5b9a\u4e49\u7684 values.yaml\u3002 \u90e8\u7f72\u5b8c\u6210\u7684\u6548\u679c","title":"4. \u5e94\u7528\u90e8\u7f72"},{"location":"zh/Tutorials/nocalhost-with-helm/#5-devmode","text":"5.1 \u68c0\u67e5\u9009\u62e9\u5f00\u53d1\u7684\u670d\u52a1\u53c2\u6570\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u51fa\u73b0\u4e0b\u56fe\u7684\u60c5\u51b5\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u670d\u52a1\u8fd8\u6ca1\u8fdb\u884c\u53c2\u6570\u914d\u7f6e\uff0c\u5177\u4f53\u53c2\u6570\u914d\u7f6e\u53c2\u8003 \u6b65\u9aa4\u30101.\u5e94\u7528\u914d\u7f6e\u3011 5.2 \u9009\u62e9\u8981\u5f00\u53d1\u7684\u670d\u52a1\uff0c\u70b9\u51fb\u53f3\u8fb9\u7684\u7eff\u8272\u201c\u9524\u5b50\u201c\u7684\u56fe\u6807\uff0c\u7136\u540e\u9009\u62e9\u201cclone from Git repo\u201d \u6216\u8005 \u201copen local directory\u201d \u52a0\u8f7d\u6e90\u7801, \u9879\u76ee\u7684\u4f4d\u7f6e\u4f1a\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json \u4e2d\uff0c\u518d\u6b21\u8fdb\u5165 DevMode \u5f00\u53d1\uff0c\u5219\u4f1a\u76f4\u63a5\u4f7f\u7528\u7f13\u5b58\u7684\u76ee\u5f55\u8fdb\u884c\u6e90\u7801\u52a0\u8f7d\u3002 5.3 \u5f00\u542f DevMode \u6210\u529f\uff0c\u4f1a\u81ea\u52a8\u628a DevContainer \u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\uff0c\u5728 IDE \u5f39\u51fa\u547d\u4ee4\u7a97\u53e3\u3002\u6b64\u65f6\u5c31\u53ef\u4ee5\u4eab\u53d7\u5f00\u53d1\uff0c\u4ee3\u7801\u7684\u4efb\u4f55\u53d8\u66f4\uff0c\u4f1a\u5b9e\u65f6\u540c\u6b65\u5230 DevContainer \u5bb9\u5668\u3002 5.4 \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u7f16\u8bd1\u5e76\u8fd0\u884c\uff0cDevContainer \u662f\u4e00\u4e2a\u62e5\u6709\u7f16\u8bd1\u73af\u5883\u7684\u955c\u50cf\uff0c\u7f16\u8bd1\u5b8c\u6210\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u3002\u7f16\u8bd1\u811a\u672c\u548c\u8fd0\u884c\u7684\u811a\u672c\uff0c\u9700\u8981\u7528\u6237\u81ea\u5df1\u51c6\u5907\uff0c\u5982 bookinfo productpage \u63d0\u4f9b\u7684\u811a\u672c\uff1a sh run.sh 5.5 \u5982\u679c\u9009\u62e9\u7684\u662f\u540c\u6b65\u672c\u5730\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5230 DevContainer \uff0c \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\uff0c\u5bf9 .nocalhost/config \u914d\u7f6e\u6587\u4ef6\u7684\u505a\u5982\u4e0b\u4fee\u6539\u3002 services: ... syncDirs: # \u540c\u6b65\u76ee\u5f55\u914d\u7f6e\u4e3a\u7f16\u8bd1\u76ee\u5f55\u5373\u53ef - ./ ...","title":"5. \u5f00\u542f DevMode (\u5f00\u59cb\u5f00\u53d1)"},{"location":"zh/Tutorials/nocalhost-with-helm/#6-devmode","text":"\u70b9\u51fb \u30105.1\u3011 \u90a3\u4e2a\u9524\u5b50\u7684\u6807\u8bc6\uff08\u5f00\u53d1\u4e2d\u4f1a\u53d8\u6210\u7ea2\u8272\u5e26\u63d2\u7684\u56fe\u6807\uff09\uff0c\u7ed3\u675f DevMode","title":"6. \u5173\u95ed DevMode (\u5f00\u53d1\u7ed3\u675f)"},{"location":"zh/Tutorials/nocalhost-with-helm/#7","text":"\u5728\u5e94\u7528\u5f00\u53d1\u7ed3\u675f\u65f6\uff0c\u5378\u8f7d\u5e94\u7528\uff0c\u4f1a DevSpace \u7684\u8d44\u6e90\u8fdb\u884c\u91ca\u653e\u56de\u6536\u3002","title":"7. \u5e94\u7528\u5378\u8f7d"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/","text":"\u524d\u7f6e\u6761\u4ef6 \uff1a - \u4e00\u4e2a Kubernetes(1.16+) \u96c6\u7fa4(\u5efa\u8bae\u7531\u4e91\u5e73\u53f0\u63d0\u4f9b\uff0cMinikube \u4e5f\u53ef\u4ee5) - \u914d\u7f6e\u597d kubectl \u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8bbf\u95ee\u4e0a\u8ff0\u96c6\u7fa4 - \u96c6\u7fa4\u5fc5\u987b\u542f\u7528 RBAC - \u5b89\u88c5\u597d Helm3 - \u5b89\u88c5\u597d Visual Studio Code(1.31+) - \u5b89\u88c5\u597d Git - \u5b89\u88c5 Nocalhost \u5ba2\u6237\u7aef (nhctl, IDE plugin) , \u5b89\u88c5\u6559\u7a0b - \u5b89\u88c5 Nocalhost \u670d\u52a1\u7aef (nocalhost-api, nocalhost-web) \u53c2\u8003\u5feb\u901f\u4e0a\u624b\u7684\u7b2c\u4e8c\u6b65 1.\u5e94\u7528\u914d\u7f6e 1.1 \u662f\u5426\u9700\u8981\u5b9a\u4e49\u5fae\u670d\u52a1\u5e94\u7528\uff0c\u670d\u52a1\u542f\u52a8\u7684\u4f9d\u8d56\uff0c\u5982\u679c\u4e0d\u9700\u8981\u5219\u8df3\u8fc7\u8fd9\u6b65\u9aa4\uff0c\u5728\u6b65\u9aa4\u30105.\u5f00\u542f DevMode\u3011\u914d\u7f6e\u8981\u5f00\u53d1\u7684\u670d\u52a1\u4fe1\u606f\u5373\u53ef\u3002 1.2 \u5e94\u7528\u7684 manifest \u4ed3\u5e93\u6839\u76ee\u5f55\u6dfb\u52a0 .nocalhost/config \u914d\u7f6e\u6587\u4ef6, \u5982\u56fe\u6240\u793a\uff1a 1.3 \u914d\u7f6e\u6587\u4ef6\uff08.nocalhost/config\uff09\u5bf9\u5e94\u7528\u90e8\u7f72\u65b9\u5f0f, \u90e8\u7f72\u4f9d\u8d56, \u6e90\u7801\u7684 git \u4ed3\u5e93, DevContainer \u7684\u955c\u50cf,\u4ee5\u53ca\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u6587\u4ef6\u76ee\u5f55\u7b49\u505a\u5b9a\u4e49\uff0c\u5982\u4e0b\u662f bookinfo \u5e94\u7528\u7684 manifest b\u90e8\u7f72\u65b9\u5f0f\u7684\u914d\u7f6e\u3002 name: bookinfo # \u5e94\u7528\u7684\u540d\u79f0 manifestType: rawManifest # \u5e94\u7528\u90e8\u7f72\u65b9\u5f0f resourcePath: [\"manifest/templates\"] # \u670d\u52a1\u7684 deployment YAML \u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55\uff0c\u652f\u6301\u914d\u7f6e\u591a\u4e2a\u76ee\u5f55 onPreInstall: # \u5e94\u7528\u90e8\u7f72\u524d\uff0c\u9700\u63d0\u524d\u90e8\u7f72\u7684\u8d44\u6e90\uff0c\u6743\u503c\u8d8a\u5c0f\uff0c\u6807\u8bc6\u4f18\u5148\u7ea7\u8d8a\u9ad8 - path: manifest/templates/pre-install/print-num-job-01.yaml weight: \"1\" - path: manifest/templates/pre-install/print-num-job-02.yaml weight: \"-5\" services: - name: productpage # \u670d\u52a1\u540d\u79f0 serviceType: deployment # Kubernetes \u90e8\u7f72\u8d44\u6e90\u7684\u7c7b\u578b\uff08deployment/statefulset/pod/job/cronjob/daemonset\uff09\uff0c\u9ed8\u8ba4 deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage.git # \u670d\u52a1\u7684 git \u4ed3\u5e93 devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage # DevMode \u4f7f\u7528\u7684 docker image workDir: /home/nocalhost-dev # DevContainer \u5bb9\u5668\u4e2d\u5b58\u653e\u672c\u5730\u540c\u6b65\u4ee3\u7801\u7684\u76ee\u5f55 syncDirs: # \u8868\u793a\u8981\u540c\u6b65\u672c\u5730\u7684\u4ec0\u4e48\u76ee\u5f55\u5230 DevContainer \u4e2d\uff0c\u9ed8\u8ba4\u5e94\u7528\u5f53\u524d\u76ee\u5f55 - ./ devPorts: # DevContainer port-forwar \u5230\u672c\u5730\u7684\u7aef\u53e3 \u5982\uff1a9080:9080 \u8868\u793a \u672c\u57309080\u8f6c\u53d1\u52309080, :9080 \u8868\u793a\u672c\u5730\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230\u96c6\u7fa49080 - :9080 dependJobsLabelSelector: # productpage \u542f\u52a8\u9700\u8981\u4f9d\u8d56 dep-job \u542f\u52a8\u5b8c\u6210\uff0c\u5982\u679c\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u53ef\u4ee5\u5220\u9664\u8be5\u9879\u914d\u7f6e - \"dep-job\" - name: details serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-details.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/ruby:2.7.1-slim syncDirs: - ./ workDir: /home/nocalhost-dev - name: ratings serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-ratings.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/node:12.18.1-slim workDir: /home/nocalhost-dev syncDirs: - ./ dependJobsLabelSelector: - \"dep-job\" dependPodsLabelSelector: - \"productpage\" - \"app.kubernetes.io/name=productpage\" - name: reviews serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-reviews.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest workDir: /home/nocalhost-dev syncDirs: - ./ dependPodsLabelSelector: - \"productpage\" \u66f4\u8be6\u7ec6\u7684\u53c2\u6570\u7684\u4f7f\u7528\u8bf4\u660e\uff0c\u8bf7 \u70b9\u51fb \u3002 2. Nocalhost \u670d\u52a1\u7aef\u914d\u7f6e Nocalhost\u670d\u52a1\u7aef\u914d\u7f6e\uff0c\u53ef\u901a\u8fc7web\u9875\u9762\u8fdb\u884c\u914d\u7f6e\uff08\u521b\u5efa\u5f00\u53d1\u8005\u8d26\u6237\uff0c\u914d\u7f6eKubernetes Clust\uff0c\u521b\u5efa\u5e94\u7528\u5e76\u5173\u8054 DevSpace\uff09. - 2.1 \u521b\u5efa\u7528\u6237, \u7528\u6237\u540d\u548c\u5bc6\u7801\u5728 IDE plugin \u63d2\u4ef6\u7aef\u505a\u767b\u5f55\u4f7f\u7528 2.2 \u914d\u7f6e\u5f00\u53d1 Kubernetes Cluster, \u5efa\u8bae\u914d\u7f6e admin \u89d2\u8272\u7684 kubeconfig 2.3 \u521b\u5efa\u5e94\u7528 \u3010Manifest Type\u3011: \u6307\u5b9a\u5e94\u7528\u90e8\u7f72\u7c7b\u578b manifest; \u3010Git Repo Url\u3011: \u914d\u7f6e\u5e94\u7528 manifest Git \u4ed3\u5e93\uff08https/ssh\uff09; \u3010Resource Dir\u3011: manifest \u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55\u5e76\u652f\u6301\u914d\u7f6e\u591a\u4e2a\u76ee\u5f55, \u9ed8\u8ba4\u662f\u4ed3\u5e93\u6839\u76ee\u5f55\u3002 2.4 \u521b\u5efa\u5e94\u7528\u7684 DevSpace \u5e94\u7528\u5217\u8868\uff0c\u70b9\u51fb \u3010create\u3011, \u9009\u62e9\u5e94\u7528\u8981\u90e8\u7f72\u7684 Kubernetest cluster, DevSpace \u5206\u914d\u7ed9\u54ea\u4e2a user\u3002 3. Nocalhost \u5ba2\u6237\u7aef\u914d\u7f6e - \u914d\u7f6e Nocalhost \u670d\u52a1\u7aef\u8bbf\u95ee\u5730\u5740\uff0c\u7136\u540e\u767b\u5f55, \u5e76\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json - \u670d\u52a1\u7aef\u5730\u5740\u83b7\u53d6\uff1aNocalhost server \u90e8\u7f72\u65f6\u83b7\u53d6\u5230\u7684 server url\uff08\u5982\uff1ahttp://127.0.0.1:8080\uff09\u3002\u6216\u8005\u5728 Nocalhost Server \u90e8\u7f72\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u67e5\u770b nocalhost-api \u670d\u52a1\u5bf9\u5916\u66b4\u9732\u7684\u8bbf\u95ee\u65b9\u5f0f\uff08\u5982:loadBlance/NodePort\u7b49\uff09\u3002 - \u767b\u5f55\u8d26\u53f7\u83b7\u53d6\uff1a[2.1] \u6b65\u9aa4\u521b\u5efa\u7684\u8d26\u53f7\u5bc6\u7801 4. \u5e94\u7528\u90e8\u7f72 \u90e8\u7f72\u5e94\u7528 \u90e8\u7f72\u5b8c\u6210\u7684\u6548\u679c 5. \u5f00\u542f DevMode (\u5f00\u59cb\u5f00\u53d1) 5.1 \u68c0\u67e5\u9009\u62e9\u5f00\u53d1\u7684\u670d\u52a1\u53c2\u6570\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u51fa\u73b0\u4e0b\u56fe\u7684\u60c5\u51b5\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u670d\u52a1\u8fd8\u6ca1\u8fdb\u884c\u53c2\u6570\u914d\u7f6e\uff0c\u5177\u4f53\u53c2\u6570\u914d\u7f6e\u53c2\u8003 \u6b65\u9aa4\u30101.\u5e94\u7528\u914d\u7f6e\u3011 5.2 \u9009\u62e9\u8981\u5f00\u53d1\u7684\u670d\u52a1\uff0c\u70b9\u51fb\u53f3\u8fb9\u7684\u7eff\u8272\u201c\u9524\u5b50\u201c\u7684\u56fe\u6807\uff0c\u7136\u540e\u9009\u62e9\u201cclone from Git repo\u201d \u6216\u8005 \u201copen local directory\u201d \u52a0\u8f7d\u6e90\u7801, \u9879\u76ee\u7684\u4f4d\u7f6e\u4f1a\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json \u4e2d\uff0c\u518d\u6b21\u8fdb\u5165 DevMode \u5f00\u53d1\uff0c\u5219\u4f1a\u76f4\u63a5\u4f7f\u7528\u7f13\u5b58\u7684\u76ee\u5f55\u8fdb\u884c\u6e90\u7801\u52a0\u8f7d\u3002 5.3 \u5f00\u542f DevMode \u6210\u529f\uff0c\u4f1a\u81ea\u52a8\u628a DevContainer \u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\uff0c\u5728 IDE \u5f39\u51fa\u547d\u4ee4\u7a97\u53e3\u3002\u6b64\u65f6\u5c31\u53ef\u4ee5\u4eab\u53d7\u5f00\u53d1\uff0c\u4ee3\u7801\u7684\u4efb\u4f55\u53d8\u66f4\uff0c\u4f1a\u5b9e\u65f6\u540c\u6b65\u5230 DevContainer \u5bb9\u5668\u3002 5.4 \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u7f16\u8bd1\u5e76\u8fd0\u884c\uff0cDevContainer \u662f\u4e00\u4e2a\u62e5\u6709\u7f16\u8bd1\u73af\u5883\u7684\u955c\u50cf\uff0c\u7f16\u8bd1\u5b8c\u6210\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u3002\u7f16\u8bd1\u811a\u672c\u548c\u8fd0\u884c\u7684\u811a\u672c\uff0c\u9700\u8981\u7528\u6237\u81ea\u5df1\u51c6\u5907\uff0c\u5982 bookinfo productpage \u63d0\u4f9b\u7684\u811a\u672c\uff1a sh run.sh 5.5 \u5982\u679c\u9009\u62e9\u7684\u662f\u540c\u6b65\u672c\u5730\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5230 DevContainer \uff0c \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\uff0c\u5bf9 .nocalhost/config \u914d\u7f6e\u6587\u4ef6\u7684\u505a\u5982\u4e0b\u4fee\u6539\u3002 services: ... syncDirs: # \u540c\u6b65\u76ee\u5f55\u914d\u7f6e\u4e3a\u7f16\u8bd1\u76ee\u5f55\u5373\u53ef - ./ ... 6. \u5173\u95ed DevMode (\u5f00\u53d1\u7ed3\u675f) \u70b9\u51fb \u30105.1\u3011 \u90a3\u4e2a\u9524\u5b50\u7684\u6807\u8bc6\uff08\u5f00\u53d1\u4e2d\u4f1a\u53d8\u6210\u7ea2\u8272\u5e26\u63d2\u7684\u56fe\u6807\uff09\uff0c\u7ed3\u675f DevMode 7. \u5e94\u7528\u5378\u8f7d \u5728\u5e94\u7528\u5f00\u53d1\u7ed3\u675f\u65f6\uff0c\u5378\u8f7d\u5e94\u7528\uff0c\u4f1a DevSpace \u7684\u8d44\u6e90\u8fdb\u884c\u91ca\u653e\u56de\u6536\u3002","title":"Nocalhost with k8s manifests"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/#1","text":"1.1 \u662f\u5426\u9700\u8981\u5b9a\u4e49\u5fae\u670d\u52a1\u5e94\u7528\uff0c\u670d\u52a1\u542f\u52a8\u7684\u4f9d\u8d56\uff0c\u5982\u679c\u4e0d\u9700\u8981\u5219\u8df3\u8fc7\u8fd9\u6b65\u9aa4\uff0c\u5728\u6b65\u9aa4\u30105.\u5f00\u542f DevMode\u3011\u914d\u7f6e\u8981\u5f00\u53d1\u7684\u670d\u52a1\u4fe1\u606f\u5373\u53ef\u3002 1.2 \u5e94\u7528\u7684 manifest \u4ed3\u5e93\u6839\u76ee\u5f55\u6dfb\u52a0 .nocalhost/config \u914d\u7f6e\u6587\u4ef6, \u5982\u56fe\u6240\u793a\uff1a 1.3 \u914d\u7f6e\u6587\u4ef6\uff08.nocalhost/config\uff09\u5bf9\u5e94\u7528\u90e8\u7f72\u65b9\u5f0f, \u90e8\u7f72\u4f9d\u8d56, \u6e90\u7801\u7684 git \u4ed3\u5e93, DevContainer \u7684\u955c\u50cf,\u4ee5\u53ca\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u6587\u4ef6\u76ee\u5f55\u7b49\u505a\u5b9a\u4e49\uff0c\u5982\u4e0b\u662f bookinfo \u5e94\u7528\u7684 manifest b\u90e8\u7f72\u65b9\u5f0f\u7684\u914d\u7f6e\u3002 name: bookinfo # \u5e94\u7528\u7684\u540d\u79f0 manifestType: rawManifest # \u5e94\u7528\u90e8\u7f72\u65b9\u5f0f resourcePath: [\"manifest/templates\"] # \u670d\u52a1\u7684 deployment YAML \u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55\uff0c\u652f\u6301\u914d\u7f6e\u591a\u4e2a\u76ee\u5f55 onPreInstall: # \u5e94\u7528\u90e8\u7f72\u524d\uff0c\u9700\u63d0\u524d\u90e8\u7f72\u7684\u8d44\u6e90\uff0c\u6743\u503c\u8d8a\u5c0f\uff0c\u6807\u8bc6\u4f18\u5148\u7ea7\u8d8a\u9ad8 - path: manifest/templates/pre-install/print-num-job-01.yaml weight: \"1\" - path: manifest/templates/pre-install/print-num-job-02.yaml weight: \"-5\" services: - name: productpage # \u670d\u52a1\u540d\u79f0 serviceType: deployment # Kubernetes \u90e8\u7f72\u8d44\u6e90\u7684\u7c7b\u578b\uff08deployment/statefulset/pod/job/cronjob/daemonset\uff09\uff0c\u9ed8\u8ba4 deployment gitUrl: https://github.com/nocalhost/bookinfo-productpage.git # \u670d\u52a1\u7684 git \u4ed3\u5e93 devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/python:3.7.7-slim-productpage # DevMode \u4f7f\u7528\u7684 docker image workDir: /home/nocalhost-dev # DevContainer \u5bb9\u5668\u4e2d\u5b58\u653e\u672c\u5730\u540c\u6b65\u4ee3\u7801\u7684\u76ee\u5f55 syncDirs: # \u8868\u793a\u8981\u540c\u6b65\u672c\u5730\u7684\u4ec0\u4e48\u76ee\u5f55\u5230 DevContainer \u4e2d\uff0c\u9ed8\u8ba4\u5e94\u7528\u5f53\u524d\u76ee\u5f55 - ./ devPorts: # DevContainer port-forwar \u5230\u672c\u5730\u7684\u7aef\u53e3 \u5982\uff1a9080:9080 \u8868\u793a \u672c\u57309080\u8f6c\u53d1\u52309080, :9080 \u8868\u793a\u672c\u5730\u968f\u673a\u7aef\u53e3\u8f6c\u53d1\u5230\u96c6\u7fa49080 - :9080 dependJobsLabelSelector: # productpage \u542f\u52a8\u9700\u8981\u4f9d\u8d56 dep-job \u542f\u52a8\u5b8c\u6210\uff0c\u5982\u679c\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u53ef\u4ee5\u5220\u9664\u8be5\u9879\u914d\u7f6e - \"dep-job\" - name: details serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-details.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/ruby:2.7.1-slim syncDirs: - ./ workDir: /home/nocalhost-dev - name: ratings serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-ratings.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/node:12.18.1-slim workDir: /home/nocalhost-dev syncDirs: - ./ dependJobsLabelSelector: - \"dep-job\" dependPodsLabelSelector: - \"productpage\" - \"app.kubernetes.io/name=productpage\" - name: reviews serviceType: deployment gitUrl: https://github.com/nocalhost/bookinfo-reviews.git devContainerImage: codingcorp-docker.pkg.coding.net/nocalhost/dev-images/java:latest workDir: /home/nocalhost-dev syncDirs: - ./ dependPodsLabelSelector: - \"productpage\" \u66f4\u8be6\u7ec6\u7684\u53c2\u6570\u7684\u4f7f\u7528\u8bf4\u660e\uff0c\u8bf7 \u70b9\u51fb \u3002","title":"1.\u5e94\u7528\u914d\u7f6e"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/#2-nocalhost","text":"Nocalhost\u670d\u52a1\u7aef\u914d\u7f6e\uff0c\u53ef\u901a\u8fc7web\u9875\u9762\u8fdb\u884c\u914d\u7f6e\uff08\u521b\u5efa\u5f00\u53d1\u8005\u8d26\u6237\uff0c\u914d\u7f6eKubernetes Clust\uff0c\u521b\u5efa\u5e94\u7528\u5e76\u5173\u8054 DevSpace\uff09. - 2.1 \u521b\u5efa\u7528\u6237, \u7528\u6237\u540d\u548c\u5bc6\u7801\u5728 IDE plugin \u63d2\u4ef6\u7aef\u505a\u767b\u5f55\u4f7f\u7528 2.2 \u914d\u7f6e\u5f00\u53d1 Kubernetes Cluster, \u5efa\u8bae\u914d\u7f6e admin \u89d2\u8272\u7684 kubeconfig 2.3 \u521b\u5efa\u5e94\u7528 \u3010Manifest Type\u3011: \u6307\u5b9a\u5e94\u7528\u90e8\u7f72\u7c7b\u578b manifest; \u3010Git Repo Url\u3011: \u914d\u7f6e\u5e94\u7528 manifest Git \u4ed3\u5e93\uff08https/ssh\uff09; \u3010Resource Dir\u3011: manifest \u76f8\u5bf9\u4e8e\u4ed3\u5e93\u7684\u76f8\u5bf9\u76ee\u5f55\u5e76\u652f\u6301\u914d\u7f6e\u591a\u4e2a\u76ee\u5f55, \u9ed8\u8ba4\u662f\u4ed3\u5e93\u6839\u76ee\u5f55\u3002 2.4 \u521b\u5efa\u5e94\u7528\u7684 DevSpace \u5e94\u7528\u5217\u8868\uff0c\u70b9\u51fb \u3010create\u3011, \u9009\u62e9\u5e94\u7528\u8981\u90e8\u7f72\u7684 Kubernetest cluster, DevSpace \u5206\u914d\u7ed9\u54ea\u4e2a user\u3002 3. Nocalhost \u5ba2\u6237\u7aef\u914d\u7f6e - \u914d\u7f6e Nocalhost \u670d\u52a1\u7aef\u8bbf\u95ee\u5730\u5740\uff0c\u7136\u540e\u767b\u5f55, \u5e76\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json - \u670d\u52a1\u7aef\u5730\u5740\u83b7\u53d6\uff1aNocalhost server \u90e8\u7f72\u65f6\u83b7\u53d6\u5230\u7684 server url\uff08\u5982\uff1ahttp://127.0.0.1:8080\uff09\u3002\u6216\u8005\u5728 Nocalhost Server \u90e8\u7f72\u7684 Kubernetes \u96c6\u7fa4\u4e2d\u67e5\u770b nocalhost-api \u670d\u52a1\u5bf9\u5916\u66b4\u9732\u7684\u8bbf\u95ee\u65b9\u5f0f\uff08\u5982:loadBlance/NodePort\u7b49\uff09\u3002 - \u767b\u5f55\u8d26\u53f7\u83b7\u53d6\uff1a[2.1] \u6b65\u9aa4\u521b\u5efa\u7684\u8d26\u53f7\u5bc6\u7801","title":"2. Nocalhost \u670d\u52a1\u7aef\u914d\u7f6e"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/#4","text":"\u90e8\u7f72\u5e94\u7528 \u90e8\u7f72\u5b8c\u6210\u7684\u6548\u679c","title":"4. \u5e94\u7528\u90e8\u7f72"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/#5-devmode","text":"5.1 \u68c0\u67e5\u9009\u62e9\u5f00\u53d1\u7684\u670d\u52a1\u53c2\u6570\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u51fa\u73b0\u4e0b\u56fe\u7684\u60c5\u51b5\uff0c\u5219\u8868\u793a\u8fd9\u4e2a\u670d\u52a1\u8fd8\u6ca1\u8fdb\u884c\u53c2\u6570\u914d\u7f6e\uff0c\u5177\u4f53\u53c2\u6570\u914d\u7f6e\u53c2\u8003 \u6b65\u9aa4\u30101.\u5e94\u7528\u914d\u7f6e\u3011 5.2 \u9009\u62e9\u8981\u5f00\u53d1\u7684\u670d\u52a1\uff0c\u70b9\u51fb\u53f3\u8fb9\u7684\u7eff\u8272\u201c\u9524\u5b50\u201c\u7684\u56fe\u6807\uff0c\u7136\u540e\u9009\u62e9\u201cclone from Git repo\u201d \u6216\u8005 \u201copen local directory\u201d \u52a0\u8f7d\u6e90\u7801, \u9879\u76ee\u7684\u4f4d\u7f6e\u4f1a\u6301\u4e45\u5316\u5728 ~/.nh/plugin/config.json \u4e2d\uff0c\u518d\u6b21\u8fdb\u5165 DevMode \u5f00\u53d1\uff0c\u5219\u4f1a\u76f4\u63a5\u4f7f\u7528\u7f13\u5b58\u7684\u76ee\u5f55\u8fdb\u884c\u6e90\u7801\u52a0\u8f7d\u3002 5.3 \u5f00\u542f DevMode \u6210\u529f\uff0c\u4f1a\u81ea\u52a8\u628a DevContainer \u7aef\u53e3\u8f6c\u53d1\u5230\u672c\u5730\uff0c\u5728 IDE \u5f39\u51fa\u547d\u4ee4\u7a97\u53e3\u3002\u6b64\u65f6\u5c31\u53ef\u4ee5\u4eab\u53d7\u5f00\u53d1\uff0c\u4ee3\u7801\u7684\u4efb\u4f55\u53d8\u66f4\uff0c\u4f1a\u5b9e\u65f6\u540c\u6b65\u5230 DevContainer \u5bb9\u5668\u3002 5.4 \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u7f16\u8bd1\u5e76\u8fd0\u884c\uff0cDevContainer \u662f\u4e00\u4e2a\u62e5\u6709\u7f16\u8bd1\u73af\u5883\u7684\u955c\u50cf\uff0c\u7f16\u8bd1\u5b8c\u6210\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\u3002\u7f16\u8bd1\u811a\u672c\u548c\u8fd0\u884c\u7684\u811a\u672c\uff0c\u9700\u8981\u7528\u6237\u81ea\u5df1\u51c6\u5907\uff0c\u5982 bookinfo productpage \u63d0\u4f9b\u7684\u811a\u672c\uff1a sh run.sh 5.5 \u5982\u679c\u9009\u62e9\u7684\u662f\u540c\u6b65\u672c\u5730\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5230 DevContainer \uff0c \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\uff0c\u5bf9 .nocalhost/config \u914d\u7f6e\u6587\u4ef6\u7684\u505a\u5982\u4e0b\u4fee\u6539\u3002 services: ... syncDirs: # \u540c\u6b65\u76ee\u5f55\u914d\u7f6e\u4e3a\u7f16\u8bd1\u76ee\u5f55\u5373\u53ef - ./ ...","title":"5. \u5f00\u542f DevMode (\u5f00\u59cb\u5f00\u53d1)"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/#6-devmode","text":"\u70b9\u51fb \u30105.1\u3011 \u90a3\u4e2a\u9524\u5b50\u7684\u6807\u8bc6\uff08\u5f00\u53d1\u4e2d\u4f1a\u53d8\u6210\u7ea2\u8272\u5e26\u63d2\u7684\u56fe\u6807\uff09\uff0c\u7ed3\u675f DevMode","title":"6. \u5173\u95ed DevMode (\u5f00\u53d1\u7ed3\u675f)"},{"location":"zh/Tutorials/nocalhost-with-k8s-manifests/#7","text":"\u5728\u5e94\u7528\u5f00\u53d1\u7ed3\u675f\u65f6\uff0c\u5378\u8f7d\u5e94\u7528\uff0c\u4f1a DevSpace \u7684\u8d44\u6e90\u8fdb\u884c\u91ca\u653e\u56de\u6536\u3002","title":"7. \u5e94\u7528\u5378\u8f7d"}]}